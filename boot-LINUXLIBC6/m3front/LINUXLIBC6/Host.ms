	.file	"Host.mc"
	.version	"01.01"
/ SRC Modula-3 version cygnus-2.7.2-960712 (i486--linuxelf) compiled by GNU C version egcs-2.91.66 19990314/Linux (egcs-1.1.2 release).
/ options passed:  -fno-strength-reduce -O2
/ options enabled:  -fdefer-pop -fcse-follow-jumps -fcse-skip-blocks
/ -fexpensive-optimizations -fthread-jumps -fpeephole -fforce-mem
/ -ffunction-cse -finline -fkeep-static-consts -fcaller-saves
/ -fpcc-struct-return -frerun-cse-after-loop -fschedule-insns2 -fcommon
/ -fverbose-asm -fgnu-linker -m80387 -mhard-float -mno-soft-float -mieee-fp
/ -mfp-ret-in-387 -mschedule-prologue -mcpu=i486 -march=i486

gcc2_compiled.:
.text
	.align 16
	.type	 Host__Initialize,@function
Host__Initialize:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movb $0,MI_Host+56
	movl $-1,MI_Host+60
	movl $2,MI_Host+64
	movb $0,MI_Host+68
	movb $1,MI_Host+69
	movb $0,MI_Host+70
	movb $0,MI_Host+71
	movb $0,MI_Host+72
	movb $1,MI_Host+73
	movb $1,MI_Host+74
	movb $0,MI_Host+75
	movb $1,MI_Host+76
	movb $0,MI_Host+77
	movb $0,MI_Host+78
	movb $1,MI_Host+79
	movb $1,MI_Host+80
	movb $0,MI_Host+81
	movb $1,MI_Host+82
	movb $1,MI_Host+83
	movb $1,MI_Host+84
	movb $1,MI_Host+85
	movb $1,MI_Host+86
	movb $1,MI_Host+87
	movb $1,MI_Host+88
	movb $1,MI_Host+89
	movb $1,MI_Host+90
	movb $0,MI_Host+91
	movb $0,MI_Host+92
	movl 8(%ebp),%eax
	xorl %ebx,%ebx
	movl 4(%eax),%esi
	decl %esi
	jmp .L2
	.align 16
.L3:
	movl 8(%ebp),%eax
	cmpl %ebx,4(%eax)
	ja .L4
	pushl $738
	call _m3_fault
	.align 16
.L4:
	movl (%eax),%eax
	movl (%eax,%ebx,4),%eax
	pushl %eax
	call Host__ProcessArg
	addl $4,%esp
	testl %eax,%eax
	je .L7
	incl %ebx
.L2:
	cmpl %esi,%ebx
	jle .L3
	movl $1,%eax
.L7:
	leal -8(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe1:
	.size	 Host__Initialize,.Lfe1-Host__Initialize
	.align 16
	.type	 Host__ProcessArg,@function
Host__ProcessArg:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	testl %esi,%esi
	je .L11
	pushl $2
	pushl $0
	pushl %esi
	movl MI_Text+64,%eax
	call *%eax
	pushl $MM_Host+72
	movl %eax,%edi
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $20,%esp
	testl %ebx,%ebx
	je .L10
	movb $1,MI_Host+56
	movb $1,MI_Host+72
	movl $-1,MI_Host+64
	jmp .L11
	.align 16
.L10:
	pushl $MM_Host+88
	pushl %edi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	jne .L11
	pushl $MM_Host+104
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	jne .L11
	pushl $MM_Host+120
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L14
	movb $0,MI_Host+69
	jmp .L11
	.align 16
.L14:
	pushl $MM_Host+136
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L15
	movl $99,MI_Host+64
	jmp .L11
	.align 16
.L15:
	pushl $MM_Host+136
	pushl %edi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L16
	pushl $2
	pushl %esi
	call Host__GetInt
	movl %eax,MI_Host+64
	jmp .L11
	.align 16
.L16:
	pushl $MM_Host+152
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L17
	movb $1,MI_Host+70
	jmp .L11
	.align 16
.L17:
	pushl $MM_Host+176
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L18
	movb $1,MI_Host+68
	jmp .L11
	.align 16
.L18:
	pushl $MM_Host+192
	pushl %edi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L19
	pushl $2
	pushl %esi
	call Host__GetInt
	movl %eax,MI_Host+60
	jmp .L11
	.align 16
.L19:
	pushl $MM_Host+208
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L20
	movb $0,MI_Host+88
	jmp .L11
	.align 16
.L20:
	pushl $MM_Host+232
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L21
	movb $0,MI_Host+83
	jmp .L11
	.align 16
.L21:
	pushl $MM_Host+260
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L22
	movb $0,MI_Host+84
	jmp .L11
	.align 16
.L22:
	pushl $MM_Host+284
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L23
	movb $0,MI_Host+85
	jmp .L11
	.align 16
.L23:
	pushl $MM_Host+312
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L24
	movb $0,MI_Host+86
	jmp .L11
	.align 16
.L24:
	pushl $MM_Host+336
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L25
	movb $0,MI_Host+87
	jmp .L11
	.align 16
.L25:
	pushl $MM_Host+364
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L26
	movb $0,MI_Host+89
	jmp .L11
	.align 16
.L26:
	pushl $MM_Host+388
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L27
	movb $0,MI_Host+90
	jmp .L11
	.align 16
.L27:
	pushl $MM_Host+416
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L28
	movb $0,MI_Host+88
	movb $0,MI_Host+83
	movb $0,MI_Host+84
	movb $0,MI_Host+85
	movb $0,MI_Host+86
	movb $0,MI_Host+87
	movb $0,MI_Host+89
	movb $0,MI_Host+90
	jmp .L11
	.align 16
.L28:
	pushl $MM_Host+440
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L29
	movb $1,MI_Host+71
	jmp .L11
	.align 16
.L29:
	pushl $MM_Host+464
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L30
	movb $1,MI_Host+73
	jmp .L11
	.align 16
.L30:
	pushl $MM_Host+488
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L31
	movb $0,MI_Host+73
	jmp .L11
	.align 16
.L31:
	pushl $MM_Host+516
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L32
	movb $0,MI_Host+76
	jmp .L11
	.align 16
.L32:
	pushl $MM_Host+548
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L33
	movb $1,MI_Host+74
	jmp .L11
	.align 16
.L33:
	pushl $MM_Host+580
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L34
	movb $0,MI_Host+74
	jmp .L11
	.align 16
.L34:
	pushl $MM_Host+612
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L35
	movb $1,MI_Host+75
	jmp .L11
	.align 16
.L35:
	pushl $MM_Host+636
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L36
	movb $0,MI_Host+75
	jmp .L11
	.align 16
.L36:
	pushl $MM_Host+664
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L37
	movb $1,MI_Host+77
	jmp .L11
	.align 16
.L37:
	pushl $MM_Host+692
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L38
	movb $0,MI_Host+77
	jmp .L11
	.align 16
.L38:
	pushl $MM_Host+724
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	jne .L11
	pushl $MM_Host+756
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L40
	movb $0,MI_Host+78
	jmp .L11
	.align 16
.L40:
	pushl $MM_Host+788
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L41
	movb $1,MI_Host+79
	jmp .L11
	.align 16
.L41:
	pushl $MM_Host+824
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L42
	movb $0,MI_Host+79
	jmp .L11
	.align 16
.L42:
	pushl $MM_Host+860
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L43
	movb $1,MI_Host+80
	jmp .L11
	.align 16
.L43:
	pushl $MM_Host+896
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L44
	movb $0,MI_Host+80
	jmp .L11
	.align 16
.L44:
	pushl $MM_Host+932
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L45
	movb $1,MI_Host+81
	jmp .L11
	.align 16
.L45:
	pushl $MM_Host+960
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L46
	movb $0,MI_Host+81
	jmp .L11
	.align 16
.L46:
	pushl $MM_Host+988
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L47
	movb $1,MI_Host+82
	jmp .L11
	.align 16
.L47:
	pushl $MM_Host+1016
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L48
	movb $0,MI_Host+82
	jmp .L11
	.align 16
.L48:
	pushl $MM_Host+1044
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L49
	movb $1,MI_Host+72
	jmp .L11
	.align 16
.L49:
	pushl $MM_Host+1068
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L50
	movb $1,MI_Host+91
	jmp .L11
	.align 16
.L50:
	pushl $MM_Host+1092
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	je .L51
	movb $0,MI_Host+91
	jmp .L11
	.align 16
.L51:
	pushl $MM_Host+1116
	pushl %esi
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	jne .L52
	pushl %esi
	pushl $MM_Host+1136
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_Host+1172
	movl %eax,%edi
	pushl %edi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl MI_Host+52,%edx
	movl %eax,%ecx
	movl (%edx),%eax
	movl 4(%eax),%eax
	pushl %ecx
	pushl %ebx
	pushl %ebx
	pushl %edx
	call *%eax
	movl %ebx,%eax
	jmp .L53
	.align 16
.L52:
	movb $1,MI_Host+92
.L11:
	movl $1,%eax
.L53:
	leal -12(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe2:
	.size	 Host__ProcessArg,.Lfe2-Host__ProcessArg
	.align 16
	.type	 Host__GetInt,@function
Host__GetInt:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+56,%eax
	xorl %esi,%esi
	call *%eax
	leal -1(%eax),%edi
	addl $4,%esp
	jmp .L55
	.align 16
.L56:
	testl %ebx,%ebx
	jge .L57
	pushl $2641
	call _m3_fault
	.align 16
.L57:
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	xorl %edx,%edx
	movb %al,%dl
	addl $8,%esp
	cmpl $47,%edx
	jle .L62
	cmpl $57,%edx
	jg .L62
	leal (%esi,%esi,4),%eax
	leal -48(%edx,%eax,2),%esi
	incl %ebx
.L55:
	cmpl %edi,%ebx
	jle .L56
.L62:
	movl %esi,%eax
	leal -12(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe3:
	.size	 Host__GetInt,.Lfe3-Host__GetInt
	.align 16
	.type	 Host__OpenUnit,@function
Host__OpenUnit:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl $0,-8(%ebp)
	movl MI_Host+52,%edx
	movl $0,-4(%ebp)
	movl (%edx),%eax
	movl 20(%ebp),%esi
	movl 8(%eax),%ecx
	leal -8(%ebp),%eax
	pushl %eax
	xorl %eax,%eax
	movb 16(%ebp),%al
	pushl %eax
	xorl %eax,%eax
	movb 12(%ebp),%al
	pushl %eax
	pushl %ebx
	pushl %edx
	call *%ecx
	movl -8(%ebp),%eax
	movl %eax,(%esi)
	leal -16(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe4:
	.size	 Host__OpenUnit,.Lfe4-Host__OpenUnit
	.align 16
	.type	 Host__CloseFile,@function
Host__CloseFile:
	pushl %ebp
	movl %esp,%ebp
	subl $180,%esp
	cmpl $0,8(%ebp)
	je .L64
.L66:
	movl $1,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L64
	movl 8(%ebp),%edx
	movl (%edx),%eax
	movl 16(%eax),%eax
	pushl %edx
	call *%eax
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
.L67:
.L64:
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe5:
	.size	 Host__CloseFile,.Lfe5-Host__CloseFile
	.align 16
	.type	 Host__FileTail,@function
Host__FileTail:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	testl %esi,%esi
	je .L77
	pushl %esi
	movl MI_Text+56,%eax
	call *%eax
	leal -1(%eax),%ebx
	addl $4,%esp
	jmp .L71
	.align 16
.L72:
	pushl %ebx
	pushl %esi
	movl MI_Text+52,%eax
	call *%eax
	andl $255,%eax
	addl $8,%esp
	cmpl $47,%eax
	je .L73
	cmpl $32,%eax
	je .L73
	cmpl $92,%eax
	jne .L74
.L73:
	pushl $2147483647
	leal 1(%ebx),%eax
	pushl %eax
	pushl %esi
	movl MI_Text+64,%eax
	call *%eax
	jmp .L76
	.align 16
.L74:
	decl %ebx
.L71:
	testl %ebx,%ebx
	jge .L72
.L77:
	movl %esi,%eax
.L76:
	leal -8(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe6:
	.size	 Host__FileTail,.Lfe6-Host__FileTail
	.align 16
	.type	 _m3_fault,@function
_m3_fault:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	pushl %eax
	pushl $MM_Host
	movl MI_RTHooks+108,%eax
	call *%eax
	.align 16
.Lfe7:
	.size	 _m3_fault,.Lfe7-_m3_fault
.globl MM_Host
.data
	.align 4
	.type	 MM_Host,@object
	.size	 MM_Host,1460
MM_Host:
	.long MM_Host+1320
	.zero	16
	.long MM_Host+1244
	.zero	20
	.long Host__ProcessArg
	.long Host__GetInt
	.long Host__Initialize
	.long Host__OpenUnit
	.long Host__CloseFile
	.long Host__FileTail
	.long 2
	.long MM_Host+80
	.long 3
	.ascii	"-v"
	.zero	2
	.long 2
	.long MM_Host+96
	.long 3
	.ascii	"-t"
	.zero	2
	.long 2
	.long MM_Host+112
	.long 3
	.ascii	"-g"
	.zero	2
	.long 2
	.long MM_Host+128
	.long 3
	.ascii	"-S"
	.zero	2
	.long 2
	.long MM_Host+144
	.long 3
	.ascii	"-w"
	.zero	2
	.long 2
	.long MM_Host+160
	.long 10
	.ascii	"-builtins"
	.zero	3
	.long 2
	.long MM_Host+184
	.long 3
	.ascii	"-Z"
	.zero	2
	.long 2
	.long MM_Host+200
	.long 3
	.ascii	"-E"
	.zero	2
	.long 2
	.long MM_Host+216
	.long 11
	.ascii	"-NoAsserts"
	.zero	2
	.long 2
	.long MM_Host+240
	.long 13
	.ascii	"-NoNarrowChk"
	.zero	4
	.long 2
	.long MM_Host+268
	.long 12
	.ascii	"-NoRangeChk"
	.zero	1
	.long 2
	.long MM_Host+292
	.long 13
	.ascii	"-NoReturnChk"
	.zero	4
	.long 2
	.long MM_Host+320
	.long 11
	.ascii	"-NoCaseChk"
	.zero	2
	.long 2
	.long MM_Host+344
	.long 15
	.ascii	"-NoTypecaseChk"
	.zero	2
	.long 2
	.long MM_Host+372
	.long 10
	.ascii	"-NoNilChk"
	.zero	3
	.long 2
	.long MM_Host+396
	.long 13
	.ascii	"-NoRaisesChk"
	.zero	4
	.long 2
	.long MM_Host+424
	.long 10
	.ascii	"-NoChecks"
	.zero	3
	.long 2
	.long MM_Host+448
	.long 12
	.ascii	"-InitFloats"
	.zero	1
	.long 2
	.long MM_Host+472
	.long 10
	.ascii	"-load_map"
	.zero	3
	.long 2
	.long MM_Host+496
	.long 13
	.ascii	"-No_load_map"
	.zero	4
	.long 2
	.long MM_Host+524
	.long 17
	.ascii	"-No_stack_walker"
	.zero	4
	.long 2
	.long MM_Host+556
	.long 18
	.ascii	"-externals_direct"
	.zero	3
	.long 2
	.long MM_Host+588
	.long 20
	.ascii	"-externals_indirect"
	.zero	1
	.long 2
	.long MM_Host+620
	.long 12
	.ascii	"-all_direct"
	.zero	1
	.long 2
	.long MM_Host+644
	.long 14
	.ascii	"-all_indirect"
	.zero	3
	.long 2
	.long MM_Host+672
	.long 14
	.ascii	"-nested_calls"
	.zero	3
	.long 2
	.long MM_Host+700
	.long 17
	.ascii	"-no_nested_calls"
	.zero	4
	.long 2
	.long MM_Host+732
	.long 20
	.ascii	"-nested_procs_first"
	.zero	1
	.long 2
	.long MM_Host+764
	.long 19
	.ascii	"-nested_procs_last"
	.zero	2
	.long 2
	.long MM_Host+796
	.long 21
	.ascii	"-inline_nested_procs"
	.zero	4
	.long 2
	.long MM_Host+832
	.long 21
	.ascii	"-unfold_nested_procs"
	.zero	4
	.long 2
	.long MM_Host+868
	.long 22
	.ascii	"-direct_struct_assign"
	.zero	3
	.long 2
	.long MM_Host+904
	.long 23
	.ascii	"-copying_struct_assign"
	.zero	2
	.long 2
	.long MM_Host+940
	.long 14
	.ascii	"-clean_stores"
	.zero	3
	.long 2
	.long MM_Host+968
	.long 14
	.ascii	"-dirty_stores"
	.zero	3
	.long 2
	.long MM_Host+996
	.long 13
	.ascii	"-clean_jumps"
	.zero	4
	.long 2
	.long MM_Host+1024
	.long 13
	.ascii	"-dirty_jumps"
	.zero	4
	.long 2
	.long MM_Host+1052
	.long 9
	.ascii	"-vsdebug"
	.zero	4
	.long 2
	.long MM_Host+1076
	.long 9
	.ascii	"-new_adr"
	.zero	4
	.long 2
	.long MM_Host+1100
	.long 9
	.ascii	"-old_adr"
	.zero	4
	.long 2
	.long MM_Host+1124
	.long 7
	.ascii	"-stats"
	.zero	2
	.long 2
	.long MM_Host+1144
	.long 23
	.ascii	"m3c: unknown option, \""
	.zero	2
	.long 2
	.long MM_Host+1180
	.long 2
	.ascii	"\""
	.zero	3
	.ascii	"FileTail"
	.zero	1
	.ascii	"CloseFile"
	.zero	1
	.ascii	"OpenUnit"
	.zero	1
	.ascii	"GetInt"
	.zero	1
	.ascii	"ProcessArg"
	.zero	1
	.ascii	"Initialize"
	.zero	4
	.long Host__FileTail
	.long MM_Host+1184
	.long MI_Host+108
	.long Host__CloseFile
	.long MM_Host+1193
	.long MI_Host+104
	.long Host__OpenUnit
	.long MM_Host+1203
	.long MI_Host+100
	.long Host__GetInt
	.long MM_Host+1212
	.zero	4
	.long Host__ProcessArg
	.long MM_Host+1219
	.zero	4
	.long Host__Initialize
	.long MM_Host+1230
	.long MI_Host+96
	.zero	4
	.ascii	"/home/ftp/tmp/pm3/tmp/pm3-1.1.15/language/modula3/m3compiler"
	.ascii	"/m3bootstrap/LINUXLIBC6/pm3-LINUXLIBC6/boot-LINUXLIBC6/m3fro"
	.ascii	"nt/src/misc/Host.m3"
	.zero	1
	.ident	"GCC: (GNU) cygnus-2.7.2-960712"
