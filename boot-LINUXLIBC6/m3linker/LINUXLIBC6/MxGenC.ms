	.file	"MxGenC.mc"
	.version	"01.01"
/ SRC Modula-3 version cygnus-2.7.2-960712 (i486--linuxelf) compiled by GNU C version egcs-2.91.66 19990314/Linux (egcs-1.1.2 release).
/ options passed:  -fno-strength-reduce -O2
/ options enabled:  -fdefer-pop -fcse-follow-jumps -fcse-skip-blocks
/ -fexpensive-optimizations -fthread-jumps -fpeephole -fforce-mem
/ -ffunction-cse -finline -fkeep-static-consts -fcaller-saves
/ -fpcc-struct-return -frerun-cse-after-loop -fschedule-insns2 -fcommon
/ -fverbose-asm -fgnu-linker -m80387 -mhard-float -mno-soft-float -mieee-fp
/ -mfp-ret-in-387 -mschedule-prologue -mcpu=i486 -march=i486

gcc2_compiled.:
.text
	.align 16
	.type	 MxGenC__New,@function
MxGenC__New:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	movl MM_MxGenC+200,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	leal -8(%ebp),%esp
	movl %ebx,12(%edx)
	movl %esi,4(%edx)
	movb 16(%ebp),%cl
	movb %cl,17(%edx)
	movl MI_Stdio+48,%eax
	movl %eax,8(%edx)
	movb 20(%ebp),%cl
	movb %cl,18(%edx)
	movl MI_Target+816,%eax
	movl %eax,52(%edx)
	movl %edx,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe1:
	.size	 MxGenC__New,.Lfe1-MxGenC__New
	.align 16
	.type	 MxGenC__GenerateMain,@function
MxGenC__GenerateMain:
	pushl %ebp
	movl %esp,%ebp
	leal 8(%ebp),%edx
	pushl %edx
	call MxGenC__GenTypeDecls
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_MxGenRep+468,%eax
	call *%eax
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_MxGenRep+472,%eax
	call *%eax
	leal 8(%ebp),%edx
	pushl %edx
	call MxGenC__GenerateUnitList
	leal 8(%ebp),%edx
	pushl %edx
	call MxGenC__GenerateEntry
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe2:
	.size	 MxGenC__GenerateMain,.Lfe2-MxGenC__GenerateMain
	.align 16
	.type	 MxGenC__GenTypeDecls,@function
MxGenC__GenTypeDecls:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
.L4:
	movl $5,-4(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-8(%ebp)
	leal -8(%ebp),%edx
	movl %edx,RTThread__handlerStack
	pushl $10
	movl MI_M3RT+272,%edi
	movl MI_Target+60,%eax
	movl %eax,-12(%ebp)
	movl %edi,%eax
	cltd
	idivl -12(%ebp)
	movl %edx,%ecx
	movl %eax,%ebx
	testl %ecx,%ecx
	je .L5
	movl -12(%ebp),%eax
	xorl %edi,%eax
	jns .L5
	decl %ebx
.L5:
	pushl %ebx
	movl MI_Fmt+52,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl %eax,%ebx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+212
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+248
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $48,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+284
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+324
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+360
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+392
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+428
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+468
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+512
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+560
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+596
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+632
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+668
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+700
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+732
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl %eax
	pushl $MM_MxGenC+764
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+788
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+828
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+864
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+896
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+928
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+960
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+992
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1028
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1068
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl %eax
	pushl $MM_MxGenC+1108
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1136
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1168
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1248
	pushl %ebx
	pushl $MM_MxGenC+1204
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1264
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl %eax
	pushl $MM_MxGenC+1296
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
.L6:
	movl -8(%ebp),%eax
	leal -24(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe3:
	.size	 MxGenC__GenTypeDecls,.Lfe3-MxGenC__GenTypeDecls
	.align 16
	.type	 MxGenC__GenerateUnitList,@function
MxGenC__GenerateUnitList:
	pushl %ebp
	movl %esp,%ebp
	subl $64,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %ebx,%ebx
	movl %ebx,-36(%ebp)
	movl 8(%ebp),%eax
	movl %ebx,-24(%ebp)
	movl (%eax),%eax
	movl 4(%eax),%eax
	testl %eax,%eax
	jne .L8
	pushl $1844
	call _m3_fault
	.align 16
.L8:
	movl (%eax),%eax
	pushl %eax
	movl MI_MxMap+276,%eax
	call *%eax
	movl %eax,-28(%ebp)
	leal -16(%ebp),%edx
	leal -8(%ebp),%ecx
	movl %ecx,-16(%ebp)
	movl $1,-12(%ebp)
	addl $4,%esp
	cmpl $0,-28(%ebp)
	jne .L9
	pushl $1860
	call _m3_fault
	.align 16
.L9:
	movl -28(%ebp),%edi
	movl 4(%edi),%eax
	movl %eax,-8(%ebp)
	pushl %edx
	movl MM_MxGenC+1316,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,-32(%ebp)
	addl $8,%esp
	movl -24(%ebp),%esi
	movl 4(%edi),%ecx
	decl %ecx
	movl %ecx,-40(%ebp)
	jmp .L11
	.align 16
.L12:
	cmpl $0,-28(%ebp)
	jne .L13
	pushl $1892
	call _m3_fault
	.align 16
.L13:
	movl -28(%ebp),%edi
	cmpl %esi,4(%edi)
	ja .L14
	pushl $1890
	call _m3_fault
	.align 16
.L14:
	movl -28(%ebp),%ecx
	movl (%ecx),%eax
	movl 4(%eax,%esi,8),%edx
	testl %edx,%edx
	je .L15
	movl -4(%edx),%eax
	sall $11,%eax
	shrl $12,%eax
	cmpl %eax,MM_MxGenC+1328
	je .L15
	pushl $1893
	call _m3_fault
	.align 16
.L15:
	movl %edx,-64(%ebp)
	xorl %ebx,%ebx
	testl %edx,%edx
	je .L16
	movl MM_MxGenC+1332,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl -64(%ebp),%edi
	movl %edi,(%eax)
	movl -36(%ebp),%ecx
	movl %ecx,4(%eax)
	movl %eax,%ebx
	movl %ebx,-36(%ebp)
	incl -24(%ebp)
	addl $4,%esp
.L16:
	cmpl $0,-32(%ebp)
	jne .L17
	pushl $2004
	call _m3_fault
	.align 16
.L17:
	movl -32(%ebp),%edi
	cmpl %esi,4(%edi)
	ja .L18
	pushl $2002
	call _m3_fault
	.align 16
.L18:
	movl -32(%ebp),%ecx
	movl (%ecx),%eax
	movl %ebx,(%eax,%esi,4)
	incl %esi
.L11:
	cmpl %esi,-40(%ebp)
	jge .L12
	movl 8(%ebp),%eax
	movl (%eax),%eax
	movl 4(%eax),%eax
	testl %eax,%eax
	jne .L20
	pushl $2068
	call _m3_fault
	.align 16
.L20:
	movl 4(%eax),%eax
	pushl %eax
	movl MI_MxMap+276,%eax
	call *%eax
	movl %eax,-28(%ebp)
	addl $4,%esp
	testl %eax,%eax
	jne .L21
	pushl $2084
	call _m3_fault
	.align 16
.L21:
	xorl %ebx,%ebx
	movl 4(%eax),%esi
	decl %esi
	jmp .L22
	.align 16
.L23:
	cmpl $0,-28(%ebp)
	jne .L24
	pushl $2100
	call _m3_fault
	.align 16
.L24:
	movl -28(%ebp),%eax
	cmpl %ebx,4(%eax)
	ja .L25
	pushl $2098
	call _m3_fault
	.align 16
.L25:
	movl (%eax),%eax
	movl 4(%eax,%ebx,8),%edx
	testl %edx,%edx
	je .L26
	movl -4(%edx),%eax
	sall $11,%eax
	shrl $12,%eax
	cmpl %eax,MM_MxGenC+1328
	je .L26
	pushl $2101
	call _m3_fault
	.align 16
.L26:
	movl %edx,-64(%ebp)
	testl %edx,%edx
	je .L27
	movl MM_MxGenC+1332,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	movl -64(%ebp),%edi
	addl $4,%esp
	movl %edi,(%edx)
	movl -36(%ebp),%ecx
	movl %ecx,4(%edx)
	movl %edx,-36(%ebp)
	incl -24(%ebp)
.L27:
	incl %ebx
.L22:
	cmpl %esi,%ebx
	jle .L23
	movl -24(%ebp),%edi
	pushl %edi
	movl -36(%ebp),%ecx
	pushl %ecx
	movl MI_MxGenRep+596,%eax
	call *%eax
	movl %eax,-36(%ebp)
	movl -36(%ebp),%ebx
	addl $8,%esp
	jmp .L29
	.align 16
.L30:
	movl (%ebx),%edi
	movl %edi,-64(%ebp)
	testl %edi,%edi
	jne .L32
	pushl $2340
	call _m3_fault
	.align 16
.L32:
	movl -64(%ebp),%ecx
	movl 20(%ecx),%edx
	movl %edx,%eax
	addl 24(%ecx),%eax
	movl %edx,-44(%ebp)
	decl %eax
	movl %eax,-48(%ebp)
	jmp .L35
	.align 16
.L36:
	cmpl $0,-64(%ebp)
	jne .L37
	pushl $2372
	call _m3_fault
	.align 16
.L37:
	movl -64(%ebp),%edi
	movl 124(%edi),%eax
	testl %eax,%eax
	jne .L38
	pushl $2372
	call _m3_fault
	.align 16
.L38:
	movl %eax,%edx
	movl -44(%ebp),%ecx
	cmpl %ecx,4(%edx)
	ja .L39
	pushl $2370
	call _m3_fault
	.align 16
.L39:
	movl (%edx),%eax
	movl -44(%ebp),%edi
	movl (%eax,%edi,4),%eax
	movl %eax,-4(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%eax
	movl (%eax),%eax
	pushl %eax
	movl MI_MxGenRep+580,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,%esi
	addl $12,%esp
	cmpl %esi,%ebx
	je .L40
	movl MM_MxGenC+1340,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L41
	pushl $2420
	call _m3_fault
	.align 16
.L41:
	movl 8(%ebx),%eax
	movl %eax,4(%edx)
	movl %esi,(%edx)
	movl %edx,8(%ebx)
.L40:
	incl -44(%ebp)
.L35:
	movl -48(%ebp),%edi
	cmpl %edi,-44(%ebp)
	jle .L36
	cmpl $0,-64(%ebp)
	jne .L44
	pushl $2484
	call _m3_fault
	.align 16
.L44:
	movl -64(%ebp),%ecx
	movl 12(%ecx),%edx
	movl %edx,%eax
	addl 16(%ecx),%eax
	movl %edx,-52(%ebp)
	decl %eax
	movl %eax,-56(%ebp)
	jmp .L47
	.align 16
.L48:
	cmpl $0,-64(%ebp)
	jne .L49
	pushl $2516
	call _m3_fault
	.align 16
.L49:
	movl -64(%ebp),%edi
	movl 124(%edi),%eax
	testl %eax,%eax
	jne .L50
	pushl $2516
	call _m3_fault
	.align 16
.L50:
	movl %eax,%edx
	movl -52(%ebp),%ecx
	cmpl %ecx,4(%edx)
	ja .L51
	pushl $2514
	call _m3_fault
	.align 16
.L51:
	movl (%edx),%eax
	movl -52(%ebp),%edi
	movl (%eax,%edi,4),%eax
	movl %eax,-4(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%eax
	movl (%eax),%eax
	pushl %eax
	movl MI_MxGenRep+580,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,%esi
	addl $12,%esp
	cmpl %esi,%ebx
	je .L52
	movl MM_MxGenC+1340,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L53
	pushl $2564
	call _m3_fault
	.align 16
.L53:
	movl 8(%ebx),%eax
	movl %eax,4(%edx)
	movl %esi,(%edx)
	movl %edx,8(%ebx)
	movl MM_MxGenC+1340,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	addl $4,%esp
	testl %esi,%esi
	jne .L55
	pushl $2580
	call _m3_fault
	.align 16
.L55:
	movl 12(%esi),%eax
	movl %eax,4(%edx)
	movl %ebx,(%edx)
	movl %edx,12(%esi)
.L52:
	incl -52(%ebp)
.L47:
	movl -56(%ebp),%edi
	cmpl %edi,-52(%ebp)
	jle .L48
	testl %ebx,%ebx
	jne .L58
	pushl $2644
	call _m3_fault
	.align 16
.L58:
	movl 4(%ebx),%ebx
.L29:
	testl %ebx,%ebx
	jne .L30
	movl -36(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%eax
	pushl %eax
	call MxGenC__GenExporters
	movl -36(%ebp),%ebx
	addl $8,%esp
	jmp .L60
	.align 16
.L61:
	movl (%ebx),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call MxGenC__ImportUnit
	addl $8,%esp
	movl 4(%ebx),%ebx
.L60:
	testl %ebx,%ebx
	jne .L61
	pushl %ebx
	pushl $MM_MxGenC+1352
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-20(%ebp)
	leal -20(%ebp),%eax
	pushl %eax
	movl -32(%ebp),%edi
	pushl %edi
	movl 8(%ebp),%eax
	movl (%eax),%eax
	pushl %eax
	movl MI_MxGenRep+580,%eax
	call *%eax
	movl %eax,%esi
	movl 8(%ebp),%eax
	movl (%eax),%edx
	leal 44(%edx),%eax
	pushl %eax
	pushl %edi
	pushl %edx
	movl MI_MxGenRep+580,%eax
	call *%eax
	addl $32,%esp
	movl %eax,-64(%ebp)
	pushl %ebx
	pushl %ebx
	pushl $MM_MxGenC+1372
	movl 8(%ebp),%eax
	movl (%eax),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $10
	movl -24(%ebp),%eax
	incl %eax
	pushl %eax
	movl MI_Fmt+52,%eax
	call *%eax
	movl %eax,-60(%ebp)
	pushl %ebx
	movl 8(%ebp),%eax
	movl (%eax),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1412
	movl -60(%ebp),%ecx
	pushl %ecx
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	movl 8(%ebp),%edx
	movl (%edx),%eax
	addl $48,%esp
	movl $1,24(%eax)
	movl (%edx),%edi
	movl %edi,-60(%ebp)
	movl %ebx,28(%edi)
	cmpl $0,-64(%ebp)
	je .L65
	pushl %ebx
	movl -64(%ebp),%ecx
	pushl %ecx
	pushl %edx
	call MxGenC__InitUnit
	addl $12,%esp
.L65:
	movl -36(%ebp),%edi
	pushl %edi
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call MxGenC__InitUnit
	pushl %ebx
	pushl $MM_MxGenC+1448
	movl 8(%ebp),%eax
	movl (%eax),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1432
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $32,%esp
	pushl %ebx
	pushl %ebx
	movl 8(%ebp),%eax
	movl (%eax),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl %eax
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	movl 8(%ebp),%eax
	addl $20,%esp
	movl (%eax),%eax
	movl -24(%ebp),%ecx
	cmpl %ecx,20(%eax)
	je .L7
	pushl $3088
	call _m3_fault
	.align 16
.L7:
	leal -76(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe4:
	.size	 MxGenC__GenerateUnitList,.Lfe4-MxGenC__GenerateUnitList
	.align 16
	.type	 MxGenC__GenExporters,@function
MxGenC__GenExporters:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	pushl $0
	movl 8(%ebp),%ecx
	movl (%ecx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1464
	pushl %eax
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $20,%esp
	jmp .L68
	.align 16
.L69:
	movl (%edi),%esi
	testl %esi,%esi
	jne .L71
	pushl $3252
	call _m3_fault
	.align 16
.L71:
	cmpb $0,8(%esi)
	je .L72
	movl 12(%edi),%ebx
	testl %ebx,%ebx
	je .L72
	cmpl $0,4(%ebx)
	jne .L75
	movl (%ebx),%eax
	testl %eax,%eax
	jne .L78
	pushl $3300
	call _m3_fault
	.align 16
.L78:
	movl (%eax),%edx
	testl %edx,%edx
	jne .L80
	pushl $3300
	call _m3_fault
	.align 16
.L80:
	movl (%esi),%eax
	cmpl %eax,(%edx)
	je .L72
.L75:
	pushl $0
	pushl $0
	pushl $0
	pushl $MM_MxGenC+1488
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	pushl %eax
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $20,%esp
	jmp .L82
	.align 16
.L83:
	movl (%ebx),%eax
	testl %eax,%eax
	jne .L85
	pushl $3380
	call _m3_fault
	.align 16
.L85:
	movl (%eax),%eax
	testl %eax,%eax
	jne .L86
	pushl $3380
	call _m3_fault
	.align 16
.L86:
	movl (%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,-4(%ebp)
	pushl $0
	pushl $MM_MxGenC+1532
	movl -4(%ebp),%ecx
	pushl %ecx
	pushl $MM_MxGenC+1512
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	pushl %eax
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $24,%esp
	movl 4(%ebx),%ebx
.L82:
	testl %ebx,%ebx
	jne .L83
	testl %esi,%esi
	jne .L89
	pushl $3428
	call _m3_fault
	.align 16
.L89:
	movl (%esi),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,-4(%ebp)
	movl (%ecx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1532
	movl -4(%ebp),%ecx
	pushl %ecx
	pushl $MM_MxGenC+1548
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $24,%esp
.L72:
	testl %edi,%edi
	jne .L90
	pushl $3492
	call _m3_fault
	.align 16
.L90:
	movl 4(%edi),%edi
.L68:
	testl %edi,%edi
	jne .L69
	pushl %edi
	movl 8(%ebp),%ecx
	movl (%ecx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl %eax
	pushl $MM_MxGenC+1564
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	leal -16(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe5:
	.size	 MxGenC__GenExporters,.Lfe5-MxGenC__GenExporters
	.align 16
	.type	 MxGenC__ImportUnit,@function
MxGenC__ImportUnit:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	testl %ebx,%ebx
	jne .L93
	pushl $3620
	call _m3_fault
	.align 16
.L93:
	pushl $0
	pushl $0
	xorl %eax,%eax
	movb 8(%ebx),%al
	movl MI_MxGenRep+356(,%eax,4),%eax
	pushl %eax
	pushl $MM_MxGenC+1596
	movl (%esi),%eax
	pushl %eax
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $20,%esp
	movl (%ebx),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	pushl $0
	movl (%esi),%edx
	movl %eax,%ecx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1532
	pushl %ecx
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	leal -8(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe6:
	.size	 MxGenC__ImportUnit,.Lfe6-MxGenC__ImportUnit
	.align 16
	.type	 MxGenC__InitUnit,@function
MxGenC__InitUnit:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%esi
	testl %esi,%esi
	je .L96
	movb $1,28(%esi)
	movl 8(%ebp),%edx
	movl (%edx),%eax
	movl 24(%eax),%eax
	movl %eax,16(%esi)
	movl (%edx),%eax
	incl 24(%eax)
	movl 16(%esi),%eax
	movl %eax,20(%esi)
	cmpb $0,29(%esi)
	je .L103
	pushl $3856
	call _m3_fault
	.align 16
.L103:
	movb $1,29(%esi)
	movl 8(%ebp),%eax
	movl (%eax),%edx
	movl 28(%edx),%edx
	movl %edx,24(%esi)
	movl (%eax),%eax
	movl %esi,28(%eax)
	movl 8(%esi),%ebx
	jmp .L106
	.align 16
.L107:
	movl (%ebx),%eax
	pushl %eax
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call MxGenC__InitProbe
	addl $12,%esp
	movl 4(%ebx),%ebx
.L106:
	testl %ebx,%ebx
	jne .L107
	testl %esi,%esi
	jne .L111
	pushl $4004
	call _m3_fault
	.align 16
.L111:
	movl 12(%esi),%ebx
	jmp .L112
	.align 16
.L113:
	movl (%ebx),%eax
	pushl %eax
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call MxGenC__InitProbe
	addl $12,%esp
	movl 4(%ebx),%ebx
.L112:
	testl %ebx,%ebx
	jne .L113
.L96:
	movl 16(%ebp),%ebx
	jmp .L117
	.align 16
.L118:
	pushl %ebx
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call MxGenC__InitProbe
	addl $12,%esp
	movl 4(%ebx),%ebx
.L117:
	testl %ebx,%ebx
	jne .L118
	testl %esi,%esi
	je .L95
	movl 16(%esi),%eax
	cmpl %eax,20(%esi)
	jne .L95
	movl 8(%ebp),%eax
	movl (%eax),%eax
	movl 20(%eax),%edi
	movl 28(%eax),%ebx
.L124:
	testl %ebx,%ebx
	jne .L125
	pushl $4260
	call _m3_fault
	.align 16
.L125:
	movl (%ebx),%eax
	testl %eax,%eax
	jne .L126
	pushl $4260
	call _m3_fault
	.align 16
.L126:
	cmpb $0,8(%eax)
	je .L127
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call MxGenC__EmitInit
	addl $8,%esp
.L127:
	cmpl %esi,%ebx
	je .L130
	testl %ebx,%ebx
	jne .L131
	pushl $4292
	call _m3_fault
	.align 16
.L131:
	movl 24(%ebx),%ebx
	jmp .L124
	.align 16
.L130:
	movl 8(%ebp),%eax
	movl (%eax),%eax
	movl 28(%eax),%ebx
.L132:
	testl %ebx,%ebx
	jne .L133
	pushl $4388
	call _m3_fault
	.align 16
.L133:
	movl (%ebx),%eax
	testl %eax,%eax
	jne .L134
	pushl $4388
	call _m3_fault
	.align 16
.L134:
	cmpb $0,8(%eax)
	jne .L135
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call MxGenC__EmitInit
	addl $8,%esp
.L135:
	cmpl %esi,%ebx
	je .L138
	testl %ebx,%ebx
	jne .L139
	pushl $4420
	call _m3_fault
	.align 16
.L139:
	movl 24(%ebx),%ebx
	jmp .L132
	.align 16
.L138:
	movl 8(%ebp),%eax
	movl (%eax),%edx
	cmpl %edi,20(%edx)
	je .L140
	pushl $0
	pushl $0
	pushl $0
	movl 52(%edx),%eax
	pushl %eax
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $20,%esp
.L140:
	movl 8(%ebp),%eax
	movl (%eax),%eax
	movl 28(%eax),%ebx
.L141:
	testl %ebx,%ebx
	jne .L142
	pushl $4548
	call _m3_fault
	.align 16
.L142:
	movl 24(%ebx),%edx
	movl %ebx,%eax
	movb $0,29(%ebx)
	movl $0,24(%eax)
	cmpl %esi,%eax
	je .L146
	movl %edx,%ebx
	jmp .L141
	.align 16
.L146:
	movl 8(%ebp),%eax
	movl (%eax),%eax
	movl %edx,28(%eax)
.L95:
	leal -12(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe7:
	.size	 MxGenC__InitUnit,.Lfe7-MxGenC__InitUnit
	.align 16
	.type	 MxGenC__InitProbe,@function
MxGenC__InitProbe:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 16(%ebp),%esi
	testl %esi,%esi
	jne .L148
	pushl $4740
	call _m3_fault
	.align 16
.L148:
	cmpb $0,28(%esi)
	jne .L149
	pushl $0
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call MxGenC__InitUnit
	testl %ebx,%ebx
	je .L147
	movl 20(%esi),%edx
	jmp .L164
	.align 16
.L149:
	testl %ebx,%ebx
	je .L147
	movl 16(%esi),%edx
	cmpl %edx,16(%ebx)
	jle .L147
	cmpb $0,29(%esi)
	je .L147
.L164:
	movl 20(%ebx),%eax
	cmpl %edx,%eax
	jle .L163
	movl %edx,%eax
.L163:
	movl %eax,20(%ebx)
.L147:
	leal -8(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe8:
	.size	 MxGenC__InitProbe,.Lfe8-MxGenC__InitProbe
	.align 16
	.type	 MxGenC__EmitInit,@function
MxGenC__EmitInit:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	testl %ebx,%ebx
	jne .L166
	pushl $4900
	call _m3_fault
	.align 16
.L166:
	movl (%ebx),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	addl $4,%esp
	pushl $0
	pushl %eax
	xorl %eax,%eax
	movb 8(%ebx),%al
	movl MI_MxGenRep+356(,%eax,4),%eax
	pushl %eax
	pushl $MM_MxGenC+1624
	movl (%esi),%eax
	pushl %eax
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%esi),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1640
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	movl (%esi),%eax
	leal -8(%ebp),%esp
	incl 20(%eax)
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe9:
	.size	 MxGenC__EmitInit,.Lfe9-MxGenC__EmitInit
	.align 16
	.type	 MxGenC__GenerateEntry,@function
MxGenC__GenerateEntry:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ebx
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1656
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $10
	movl (%ebx),%eax
	movl 20(%eax),%eax
	pushl %eax
	movl MI_Fmt+52,%eax
	call *%eax
	movl (%ebx),%edx
	movl %eax,%ecx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1640
	pushl %ecx
	pushl $MM_MxGenC+1704
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $48,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1736
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1788
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1824
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1860
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1896
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1932
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+1968
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl %eax
	pushl $MM_MxGenC+1448
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	movl (%ebx),%edx
	addl $40,%esp
	cmpb $0,18(%edx)
	je .L169
	pushl $0
	pushl $0
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2020
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	pushl $0
	pushl $MM_MxGenC+2056
	movl (%ebx),%eax
	pushl %eax
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2080
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2136
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2192
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2208
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	movl (%ebx),%edx
	addl $40,%esp
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2328
	pushl $MM_MxGenC+2312
	pushl $MM_MxGenC+2264
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2352
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2400
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2444
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2500
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2572
	jmp .L171
	.align 16
.L169:
	pushl $0
	pushl $0
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2632
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2672
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2696
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2724
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2192
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2208
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	movl (%ebx),%edx
	addl $40,%esp
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2328
	pushl $MM_MxGenC+2312
	pushl $MM_MxGenC+2264
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2352
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2752
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2796
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2852
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2908
.L171:
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+2964
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl %eax
	pushl $MM_MxGenC+3036
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+3056
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+3144
	pushl $MM_MxGenC+3128
	pushl $MM_MxGenC+3112
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	addl $40,%esp
	pushl $0
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl $MM_MxGenC+3176
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	pushl $0
	movl (%ebx),%edx
	movl 52(%edx),%eax
	pushl %eax
	pushl %eax
	pushl $MM_MxGenC+3200
	pushl %edx
	movl MI_MxGenRep+592,%eax
	call *%eax
	movl -4(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe10:
	.size	 MxGenC__GenerateEntry,.Lfe10-MxGenC__GenerateEntry
	.align 16
	.type	 M_MxGenC_tf01be9a8_LINK,@function
M_MxGenC_tf01be9a8_LINK:
	pushl %ebp
	movl %esp,%ebp
	movl MM_MxGenC+3596,%eax
	movl %ebp,%esp
	movl 52(%eax),%edx
	movl MM_MxGenC+148,%eax
	movl %eax,4(%edx)
	popl %ebp
	ret
.Lfe11:
	.size	 M_MxGenC_tf01be9a8_LINK,.Lfe11-M_MxGenC_tf01be9a8_LINK
	.align 16
	.type	 _m3_fault,@function
_m3_fault:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	pushl %eax
	pushl $MM_MxGenC
	movl MI_RTHooks+108,%eax
	call *%eax
	.align 16
.Lfe12:
	.size	 _m3_fault,.Lfe12-_m3_fault
.globl MM_MxGenC
.data
	.align 4
	.type	 MM_MxGenC,@object
	.size	 MM_MxGenC,3624
MM_MxGenC:
	.long MM_MxGenC+3452
	.long MM_MxGenC+44
	.long MM_MxGenC+200
	.long MM_MxGenC+188
	.zero	4
	.long MM_MxGenC+3328
	.zero	28
	.long -266606168
.byte 96
.byte 159
.byte 124
.byte 255
.byte 200
.byte 118
.byte 103
.byte 15
	.long 1
	.zero	4
	.long 0
	.long 1
	.zero	4
	.long 0
	.zero	20
	.long MM_MxGenC+3590
	.zero	4
	.long M_MxGenC_tf01be9a8_LINK
	.long -312833500
	.zero	12
	.long MM_MxGenC+3604
	.long MM_MxGenC+3613
	.zero	4
	.long MxGenC__GenerateMain
	.long MxGenC__GenTypeDecls
	.long MxGenC__GenerateUnitList
	.long MxGenC__GenExporters
	.long MxGenC__ImportUnit
	.long MxGenC__InitUnit
	.long MxGenC__InitProbe
	.long MxGenC__EmitInit
	.long MxGenC__GenerateEntry
	.long MxGenC__New
	.long -1983952564
	.long -266606168
	.zero	4
	.long MM_MxGenC+1316
	.long -1983952564
	.long 2
	.long MM_MxGenC+220
	.long 24
	.ascii	"typedef long  _INTEGER;"
	.zero	1
	.long 2
	.long MM_MxGenC+256
	.long 24
	.ascii	"typedef char* _ADDRESS;"
	.zero	1
	.long 2
	.long MM_MxGenC+292
	.long 25
	.ascii	"typedef void (*_PROC)();"
	.zero	4
	.long 2
	.long MM_MxGenC+332
	.long 24
	.ascii	"typedef struct module {"
	.zero	1
	.long 2
	.long MM_MxGenC+368
	.long 18
	.ascii	"  _ADDRESS  file;"
	.zero	3
	.long 2
	.long MM_MxGenC+400
	.long 24
	.ascii	"  _ADDRESS  type_cells;"
	.zero	1
	.long 2
	.long MM_MxGenC+436
	.long 28
	.ascii	"  _ADDRESS  type_cell_ptrs;"
	.zero	1
	.long 2
	.long MM_MxGenC+476
	.long 30
	.ascii	"  _ADDRESS  full_revelations;"
	.zero	3
	.long 2
	.long MM_MxGenC+520
	.long 33
	.ascii	"  _ADDRESS  partial_revelations;"
	.zero	4
	.long 2
	.long MM_MxGenC+568
	.long 23
	.ascii	"  _ADDRESS  proc_info;"
	.zero	2
	.long 2
	.long MM_MxGenC+604
	.long 24
	.ascii	"  _ADDRESS  try_scopes;"
	.zero	1
	.long 2
	.long MM_MxGenC+640
	.long 21
	.ascii	"  _ADDRESS  var_map;"
	.zero	4
	.long 2
	.long MM_MxGenC+676
	.long 20
	.ascii	"  _ADDRESS  gc_map;"
	.zero	1
	.long 2
	.long MM_MxGenC+708
	.long 18
	.ascii	"  _PROC     link;"
	.zero	3
	.long 2
	.long MM_MxGenC+740
	.long 18
	.ascii	"  _PROC     main;"
	.zero	3
	.long 2
	.long MM_MxGenC+772
	.long 11
	.ascii	"} _MODULE;"
	.zero	2
	.long 2
	.long MM_MxGenC+796
	.long 27
	.ascii	"typedef struct link_info {"
	.zero	2
	.long 2
	.long MM_MxGenC+836
	.long 22
	.ascii	"  _INTEGER n_modules;"
	.zero	3
	.long 2
	.long MM_MxGenC+872
	.long 20
	.ascii	"  _ADDRESS modules;"
	.zero	1
	.long 2
	.long MM_MxGenC+904
	.long 17
	.ascii	"  _INTEGER argc;"
	.zero	4
	.long 2
	.long MM_MxGenC+936
	.long 17
	.ascii	"  _ADDRESS argv;"
	.zero	4
	.long 2
	.long MM_MxGenC+968
	.long 17
	.ascii	"  _ADDRESS envp;"
	.zero	4
	.long 2
	.long MM_MxGenC+1000
	.long 21
	.ascii	"  _ADDRESS instance;"
	.zero	4
	.long 2
	.long MM_MxGenC+1036
	.long 28
	.ascii	"  _ADDRESS bottom_of_stack;"
	.zero	1
	.long 2
	.long MM_MxGenC+1076
	.long 25
	.ascii	"  _ADDRESS top_of_stack;"
	.zero	4
	.long 2
	.long MM_MxGenC+1116
	.long 14
	.ascii	"} _LINK_INFO;"
	.zero	3
	.long 2
	.long MM_MxGenC+1144
	.long 17
	.ascii	"typedef struct {"
	.zero	4
	.long 2
	.long MM_MxGenC+1176
	.long 22
	.ascii	"  _MODULE     module;"
	.zero	3
	.long 2
	.long MM_MxGenC+1212
	.long 29
	.ascii	"  _ADDRESS    info_typecell["
	.zero	4
	.long 2
	.long MM_MxGenC+1256
	.long 3
	.ascii	"];"
	.zero	2
	.long 2
	.long MM_MxGenC+1272
	.long 20
	.ascii	"  _LINK_INFO *info;"
	.zero	1
	.long 2
	.long MM_MxGenC+1304
	.long 11
	.ascii	"} _LINKER;"
	.zero	2
	.long MM_MxGenC+1324
	.long -1078442736
	.long MM_MxGenC+1332
	.long 880986034
	.long MM_MxGenC+1340
	.long -259465201
	.long MM_MxGenC+3596
	.long -259465203
	.long 2
	.long MM_MxGenC+1360
	.long 5
	.ascii	"Main"
	.zero	4
	.long 2
	.long MM_MxGenC+1380
	.long 26
	.ascii	"static _MODULE *_modules["
	.zero	3
	.long 2
	.long MM_MxGenC+1420
	.long 6
	.ascii	"] = {"
	.zero	3
	.long 2
	.long MM_MxGenC+1440
	.long 4
	.ascii	"  0"
	.zero	1
	.long 2
	.long MM_MxGenC+1456
	.long 3
	.ascii	"};"
	.zero	2
	.long 2
	.long MM_MxGenC+1472
	.long 9
	.ascii	"struct {"
	.zero	4
	.long 2
	.long MM_MxGenC+1496
	.long 11
	.ascii	"  struct {"
	.zero	2
	.long 2
	.long MM_MxGenC+1520
	.long 6
	.ascii	" int "
	.zero	3
	.long 2
	.long MM_MxGenC+1540
	.long 2
	.ascii	";"
	.zero	3
	.long 2
	.long MM_MxGenC+1556
	.long 4
	.ascii	" } "
	.zero	1
	.long 2
	.long MM_MxGenC+1572
	.long 19
	.ascii	"} * _m3_exporters;"
	.zero	2
	.long 2
	.long MM_MxGenC+1604
	.long 16
	.ascii	"extern _MODULE "
	.zero	1
	.long 2
	.long MM_MxGenC+1632
	.long 4
	.ascii	"  &"
	.zero	1
	.long 2
	.long MM_MxGenC+1648
	.long 2
	.ascii	","
	.zero	3
	.long 2
	.long MM_MxGenC+1664
	.long 36
	.ascii	"static _LINK_INFO _m3_link_info = {"
	.zero	1
	.long 2
	.long MM_MxGenC+1712
	.long 20
	.ascii	"  /* n_modules  */ "
	.zero	1
	.long 2
	.long MM_MxGenC+1744
	.long 39
	.ascii	"  /* modules    */ (_ADDRESS)_modules,"
	.zero	2
	.long 2
	.long MM_MxGenC+1796
	.long 22
	.ascii	"  /* argc       */ 0,"
	.zero	3
	.long 2
	.long MM_MxGenC+1832
	.long 22
	.ascii	"  /* argv       */ 0,"
	.zero	3
	.long 2
	.long MM_MxGenC+1868
	.long 22
	.ascii	"  /* envp       */ 0,"
	.zero	3
	.long 2
	.long MM_MxGenC+1904
	.long 22
	.ascii	"  /* instance   */ 0,"
	.zero	3
	.long 2
	.long MM_MxGenC+1940
	.long 22
	.ascii	"  /* stack_bot  */ 0,"
	.zero	3
	.long 2
	.long MM_MxGenC+1976
	.long 38
	.ascii	"  /* stack_top  */ (_ADDRESS)0x400000"
	.zero	3
	.long 2
	.long MM_MxGenC+2028
	.long 21
	.ascii	"#include <windows.h>"
	.zero	4
	.long 2
	.long MM_MxGenC+2064
	.long 12
	.ascii	"int WINAPI "
	.zero	1
	.long 2
	.long MM_MxGenC+2088
	.long 41
	.ascii	"WinMain (HINSTANCE self, HINSTANCE prev,"
	.zero	4
	.long 2
	.long MM_MxGenC+2144
	.long 42
	.ascii	"                    LPSTR args, int mode)"
	.zero	3
	.long 2
	.long MM_MxGenC+2200
	.long 2
	.ascii	"{"
	.zero	3
	.long 2
	.long MM_MxGenC+2216
	.long 44
	.ascii	"  { /* initialize RTLinker's global data */"
	.zero	1
	.long 2
	.long MM_MxGenC+2272
	.long 34
	.ascii	"    _LINKER* linker = (_LINKER*)&"
	.zero	3
	.long 2
	.long MM_MxGenC+2320
	.long 4
	.ascii	"MI_"
	.zero	1
	.long 2
	.long MM_MxGenC+2336
	.long 10
	.ascii	"RTLinker;"
	.zero	3
	.long 2
	.long MM_MxGenC+2360
	.long 35
	.ascii	"    linker->info = &_m3_link_info;"
	.zero	2
	.long 2
	.long MM_MxGenC+2408
	.long 29
	.ascii	"    _m3_link_info.argc = -1;"
	.zero	4
	.long 2
	.long MM_MxGenC+2452
	.long 43
	.ascii	"    _m3_link_info.argv = (_ADDRESS)(args);"
	.zero	2
	.long 2
	.long MM_MxGenC+2508
	.long 60
	.ascii	"    _m3_link_info.envp = (_ADDRESS)GetEnvironmentStrings();"
	.zero	1
	.long 2
	.long MM_MxGenC+2580
	.long 47
	.ascii	"    _m3_link_info.instance = (_ADDRESS)(self);"
	.zero	2
	.long 2
	.long MM_MxGenC+2640
	.long 28
	.ascii	"int main (argc, argv, envp)"
	.zero	1
	.long 2
	.long MM_MxGenC+2680
	.long 10
	.ascii	"int argc;"
	.zero	3
	.long 2
	.long MM_MxGenC+2704
	.long 13
	.ascii	"char **argv;"
	.zero	4
	.long 2
	.long MM_MxGenC+2732
	.long 13
	.ascii	"char **envp;"
	.zero	4
	.long 2
	.long MM_MxGenC+2760
	.long 31
	.ascii	"    _m3_link_info.argc = argc;"
	.zero	2
	.long 2
	.long MM_MxGenC+2804
	.long 43
	.ascii	"    _m3_link_info.argv = (_ADDRESS)(argv);"
	.zero	2
	.long 2
	.long MM_MxGenC+2860
	.long 43
	.ascii	"    _m3_link_info.envp = (_ADDRESS)(envp);"
	.zero	2
	.long 2
	.long MM_MxGenC+2916
	.long 44
	.ascii	"    _m3_link_info.instance = (_ADDRESS)(0);"
	.zero	1
	.long 2
	.long MM_MxGenC+2972
	.long 57
	.ascii	"    _m3_link_info.bottom_of_stack = (_ADDRESS)(&linker);"
	.zero	4
	.long 2
	.long MM_MxGenC+3044
	.long 5
	.ascii	"  };"
	.zero	4
	.long 2
	.long MM_MxGenC+3064
	.long 44
	.ascii	"  /* finally, start the Modula-3 program */"
	.zero	1
	.long 2
	.long MM_MxGenC+3120
	.long 3
	.ascii	"  "
	.zero	2
	.long 2
	.long MM_MxGenC+3136
	.long 4
	.ascii	"MM_"
	.zero	1
	.long 2
	.long MM_MxGenC+3152
	.long 18
	.ascii	"RTLinker.main ();"
	.zero	3
	.long 2
	.long MM_MxGenC+3184
	.long 12
	.ascii	"  return 0;"
	.zero	1
	.long 2
	.long MM_MxGenC+3208
	.long 2
	.ascii	"}"
	.zero	3
	.ascii	"GenerateEntry"
	.zero	1
	.ascii	"EmitInit"
	.zero	1
	.ascii	"InitProbe"
	.zero	1
	.ascii	"InitUnit"
	.zero	1
	.ascii	"ImportUnit"
	.zero	1
	.ascii	"GenExporters"
	.zero	1
	.ascii	"GenerateUnitList"
	.zero	1
	.ascii	"GenTypeDecls"
	.zero	1
	.ascii	"GenerateMain"
	.zero	1
	.ascii	"New"
	.zero	4
	.long MxGenC__GenerateEntry
	.long MM_MxGenC+3212
	.zero	4
	.long MxGenC__EmitInit
	.long MM_MxGenC+3226
	.zero	4
	.long MxGenC__InitProbe
	.long MM_MxGenC+3235
	.zero	4
	.long MxGenC__InitUnit
	.long MM_MxGenC+3245
	.zero	4
	.long MxGenC__ImportUnit
	.long MM_MxGenC+3254
	.zero	4
	.long MxGenC__GenExporters
	.long MM_MxGenC+3265
	.zero	4
	.long MxGenC__GenerateUnitList
	.long MM_MxGenC+3278
	.zero	4
	.long MxGenC__GenTypeDecls
	.long MM_MxGenC+3295
	.zero	4
	.long MxGenC__GenerateMain
	.long MM_MxGenC+3308
	.zero	4
	.long MxGenC__New
	.long MM_MxGenC+3321
	.long MI_MxGenC+44
	.zero	4
	.ascii	"/home/ftp/tmp/pm3/tmp/pm3-1.1.15/language/modula3/m3compiler"
	.ascii	"/m3bootstrap/LINUXLIBC6/pm3-LINUXLIBC6/boot-LINUXLIBC6/m3lin"
	.ascii	"ker/src/MxGenC.m3"
	.zero	1
.byte 1
.byte 10
.byte 0
	.zero	7
	.long -266606168
	.ascii	"MxGenC.T"
	.zero	1
	.ascii	"MxGenC.T"
	.zero	3
	.ident	"GCC: (GNU) cygnus-2.7.2-960712"
