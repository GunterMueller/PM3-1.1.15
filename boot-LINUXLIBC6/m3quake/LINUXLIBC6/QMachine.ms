	.file	"QMachine.mc"
	.version	"01.01"
/ SRC Modula-3 version cygnus-2.7.2-960712 (i486--linuxelf) compiled by GNU C version egcs-2.91.66 19990314/Linux (egcs-1.1.2 release).
/ options passed:  -fno-strength-reduce -O2
/ options enabled:  -fdefer-pop -fcse-follow-jumps -fcse-skip-blocks
/ -fexpensive-optimizations -fthread-jumps -fpeephole -fforce-mem
/ -ffunction-cse -finline -fkeep-static-consts -fcaller-saves
/ -fpcc-struct-return -frerun-cse-after-loop -fschedule-insns2 -fcommon
/ -fverbose-asm -fgnu-linker -m80387 -mhard-float -mno-soft-float -mieee-fp
/ -mfp-ret-in-387 -mschedule-prologue -mcpu=i486 -march=i486

gcc2_compiled.:
.text
	.align 16
	.type	 QMachine__Init,@function
QMachine__Init:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	leal -12(%ebp),%esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-24(%ebp)
	leal -4(%ebp),%ebx
	movl %ebx,-12(%ebp)
	movl $1,-8(%ebp)
	movl $40,-4(%ebp)
	pushl %esi
	movl MM_QMachine+512,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,48(%edi)
	movl %ebx,-12(%ebp)
	movl $1,-8(%ebp)
	movl $100,-4(%ebp)
	pushl %esi
	movl MM_QMachine+520,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,52(%edi)
	movl %ebx,-12(%ebp)
	movl $1,-8(%ebp)
	movl $20,-4(%ebp)
	pushl %esi
	movl MM_QMachine+528,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,56(%edi)
	movl %ebx,-12(%ebp)
	movl $1,-8(%ebp)
	movl $10,-4(%ebp)
	pushl %esi
	movl MM_QMachine+536,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,60(%edi)
	movl %ebx,-12(%ebp)
	movl $1,-8(%ebp)
	addl $32,%esp
	movl $40,-4(%ebp)
	pushl %esi
	movl MM_QMachine+544,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,64(%edi)
	movl %ebx,-12(%ebp)
	movl $1,-8(%ebp)
	movl $10,-4(%ebp)
	pushl %esi
	movl MM_QMachine+552,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,68(%edi)
	movl MM_QMachine+560,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	movl (%edx),%eax
	movl -24(%ebp),%ecx
	movl 24(%eax),%eax
	pushl %ecx
	pushl %edx
	call *%eax
	movl %eax,%edx
	movl %edx,72(%edi)
	call QMachine__InitBuiltins
	movl -24(%ebp),%ebx
	addl $28,%esp
.L2:
	movl MM_QMachine+288(,%ebx,4),%ecx
	movl %ecx,-24(%ebp)
	movl 72(%edi),%esi
	movl (%esi),%eax
	movl 8(%eax),%edx
	testl %ecx,%ecx
	jne .L3
	pushl $852
	call _m3_fault
	.align 16
.L3:
	movl -24(%ebp),%ecx
	movl 8(%ecx),%eax
	movl %eax,-16(%ebp)
	movl %ecx,-20(%ebp)
	leal -20(%ebp),%eax
	pushl %eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	incl %ebx
	addl $12,%esp
	cmpl $17,%ebx
	jle .L2
	pushl %edi
	call QMachine__PushScope
	movl 12(%ebp),%ecx
	movl %ecx,136(%edi)
	leal -36(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe1:
	.size	 QMachine__Init,.Lfe1-QMachine__Init
	.align 16
	.type	 QMachine__Evaluate,@function
QMachine__Evaluate:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%edx
	leal 4(%ebx),%eax
	pushl %eax
	pushl %edx
	pushl %ebx
	call QMachine__PushInclude
	pushl $0
	pushl %ebx
	call QMachine__Eval
	movl -4(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe2:
	.size	 QMachine__Evaluate,.Lfe2-QMachine__Evaluate
.section	.rodata
	.align 4
	.type	 L_3.2,@object
	.size	 L_3.2,152
L_3.2:
	.long .L13
	.long .L14
	.long .L15
	.long .L16
	.long .L17
	.long .L18
	.long .L19
	.long .L20
	.long .L21
	.long .L22
	.long .L23
	.long .L24
	.long .L25
	.long .L26
	.long .L27
	.long .L28
	.long .L29
	.long .L30
	.long .L31
	.long .L32
	.long .L33
	.long .L34
	.long .L35
	.long .L36
	.long .L37
	.long .L38
	.long .L39
	.long .L40
	.long .L41
	.long .L42
	.long .L43
	.long .L44
	.long .L45
	.long .L46
	.long .L47
	.long .L48
	.long .L49
	.long .L50
.text
	.align 16
	.type	 QMachine__Eval,@function
QMachine__Eval:
	pushl %ebp
	movl %esp,%ebp
	subl $88,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-48(%ebp)
	cmpb $0,12(%ebp)
	je .L9
	movl 8(%ebp),%ecx
	movl 28(%ecx),%ecx
	movl %ecx,-48(%ebp)
.L9:
	movl 8(%ebp),%ecx
	cmpb $0,80(%ecx)
	je .L10
	pushl %ecx
	call QMachine__TraceInstruction
	addl $4,%esp
.L10:
	movl 8(%ebp),%ecx
	movl 4(%ecx),%eax
	movl 8(%eax),%eax
	testl %eax,%eax
	jne .L11
	pushl $1428
	call _m3_fault
	.align 16
.L11:
	movl 8(%ebp),%ecx
	movl 8(%ecx),%edx
	cmpl %edx,4(%eax)
	ja .L12
	pushl $1426
	call _m3_fault
	.align 16
.L12:
	movl (%eax),%eax
	leal (%eax,%edx,8),%edx
	movl %edx,-32(%ebp)
	movl 8(%ebp),%ecx
	movb (%edx),%al
	movl 4(%edx),%edi
	andl $255,%eax
	incl 8(%ecx)
	jmp *L_3.2(,%eax,4)
	.align 16
.L13:
	movb $1,-28(%ebp)
	movl %edi,-24(%ebp)
	movl $0,-20(%ebp)
	leal -28(%ebp),%eax
	jmp .L101
	.align 16
.L14:
	movb $2,-28(%ebp)
	movl %edi,-24(%ebp)
	movl $0,-20(%ebp)
	leal -28(%ebp),%eax
	jmp .L101
	.align 16
.L15:
	movl MM_QMachine+568,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	movl (%edx),%eax
	addl $4,%esp
	movl 4(%eax),%eax
	testl %edi,%edi
	jge .L52
	pushl $1729
	call _m3_fault
	.align 16
.L52:
	pushl %edi
	pushl %edx
	call *%eax
	movl %eax,%esi
	movl $0,-52(%ebp)
	decl %edi
	movl %edi,-56(%ebp)
	addl $8,%esp
	jmp .L53
	.align 16
.L54:
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	addl $8,%esp
	cmpb $4,-28(%ebp)
	jne .L55
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,-60(%ebp)
	movl (%eax),%eax
	movl -60(%ebp),%ecx
	movl 32(%eax),%eax
	pushl %ecx
	call *%eax
	leal -1(%eax),%edi
	addl $12,%esp
	jmp .L56
	.align 16
.L57:
	movl -60(%ebp),%ecx
	movl (%ecx),%eax
	leal -44(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl %edi
	pushl %ecx
	call *%eax
	movl (%esi),%eax
	movl 16(%eax),%eax
	pushl %ebx
	pushl %esi
	call *%eax
	decl %edi
	addl $20,%esp
.L56:
	testl %edi,%edi
	jge .L57
	jmp .L59
	.align 16
.L55:
	movl (%esi),%eax
	movl 16(%eax),%edx
	pushl %ebx
	pushl %esi
	call *%edx
	addl $8,%esp
.L59:
	incl -52(%ebp)
.L53:
	movl -56(%ebp),%ecx
	cmpl %ecx,-52(%ebp)
	jle .L54
	movb $4,-28(%ebp)
	movl $0,-24(%ebp)
	movl %esi,-20(%ebp)
	leal -28(%ebp),%eax
	pushl %eax
	jmp .L102
	.align 16
.L16:
	movl MM_QMachine+576,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	movl (%edx),%eax
	movl 24(%eax),%ebx
	pushl $0
	pushl %edx
	call *%ebx
	movl %eax,%esi
	decl %edi
	movl %edi,-64(%ebp)
	addl $12,%esp
	jmp .L61
	.align 16
.L62:
	leal -16(%ebp),%ecx
	movl %ecx,-68(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,%edi
	movl (%esi),%eax
	movl -68(%ebp),%ecx
	movl 8(%eax),%edx
	movl %edi,-32(%ebp)
	pushl %ecx
	leal -32(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	addl $-2,-64(%ebp)
	addl $36,%esp
.L61:
	cmpl $0,-64(%ebp)
	jge .L62
	movb $3,-28(%ebp)
	movl $0,-24(%ebp)
	movl %esi,-20(%ebp)
	leal -28(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Push
	xorl %esi,%esi
	movl %esi,-20(%ebp)
	movl %esi,-8(%ebp)
	addl $8,%esp
	jmp .L9
	.align 16
.L17:
	pushl %edi
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl MI_Env+44,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachRep__PushString
	addl $16,%esp
	jmp .L9
	.align 16
.L18:
	movb $5,-28(%ebp)
	movl $0,-24(%ebp)
	movl MM_QMachine+584,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%ebx
	movl 4(%ecx),%eax
	addl $4,%esp
	movl 20(%eax),%eax
	testl %eax,%eax
	jne .L64
	pushl $2388
	call _m3_fault
	.align 16
.L64:
	movl %eax,%edx
	cmpl %edi,4(%edx)
	ja .L65
	pushl $2386
	call _m3_fault
	.align 16
.L65:
	movl (%edx),%eax
	movl (%eax,%edi,4),%eax
	movl %eax,(%ebx)
	movl 8(%ebp),%ecx
	movl %ebx,%edx
	movl 48(%ecx),%eax
	testl %eax,%eax
	jne .L66
	pushl $2388
	call _m3_fault
	.align 16
.L66:
	movl 8(%ebp),%ecx
	movl %eax,-88(%ebp)
	movl 12(%ecx),%ebx
	movl -88(%ebp),%ecx
	leal -1(%ebx),%eax
	cmpl %eax,4(%ecx)
	ja .L67
	pushl $2386
	call _m3_fault
	.align 16
.L67:
	movl -88(%ebp),%ecx
	movl (%ecx),%eax
	movl -4(%eax,%ebx,4),%eax
	movl %eax,4(%edx)
	movl %edx,-20(%ebp)
	leal -28(%ebp),%eax
	pushl %eax
	jmp .L102
	.align 16
.L19:
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-4(%ebp)
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+64,%eax
	call *%eax
	movl %eax,%esi
	movl (%esi),%eax
	addl $32,%esp
	movl 4(%eax),%eax
	movl %eax,-88(%ebp)
	pushl %ebx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	movl -88(%ebp),%ecx
	call *%ecx
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushBool
	jmp .L103
	.align 16
.L20:
	leal -16(%ebp),%ecx
	movl %ecx,-72(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__GetBuf
	movl %eax,-88(%ebp)
	movl -88(%ebp),%edi
	pushl %edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+76,%eax
	call *%eax
	addl $32,%esp
	pushl %edi
	movl -72(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+76,%eax
	call *%eax
	pushl %edi
	movl MI_M3Buf+72,%eax
	call *%eax
	movl %eax,-88(%ebp)
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachRep__PushString
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__FreeBuf
	xorl %edi,%edi
	movl %edi,-8(%ebp)
	movl %edi,-20(%ebp)
	addl $32,%esp
	jmp .L9
	.align 16
.L21:
	leal -16(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	xorl %edi,%edi
	call *%eax
	addl $24,%esp
	testl %eax,%eax
	je .L68
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	setne %al
	movl %eax,%edi
	andl $255,%edi
.L68:
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushBool
	movl $0,-8(%ebp)
	jmp .L104
	.align 16
.L22:
	leal -16(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	movl $1,%edi
	call *%eax
	addl $24,%esp
	testl %eax,%eax
	jne .L69
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	setne %al
	movl %eax,%edi
	andl $255,%edi
.L69:
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushBool
	movl $0,-8(%ebp)
	jmp .L104
	.align 16
.L23:
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	addl $16,%esp
	testl %eax,%eax
	sete %al
	andl $255,%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushBool
	jmp .L104
	.align 16
.L24:
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-4(%ebp)
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+64,%eax
	call *%eax
	movl %eax,%esi
	movl (%esi),%eax
	addl $32,%esp
	movl 4(%eax),%eax
	movl %eax,-88(%ebp)
	pushl %ebx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	movl -88(%ebp),%ecx
	call *%ecx
	addl $12,%esp
	testl %eax,%eax
	jne .L70
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,-88(%ebp)
	pushl %eax
	pushl $MM_QMachine+596
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_QMachine+644
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $28,%esp
.L70:
	pushl %ebx
.L102:
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Push
.L104:
	movl $0,-20(%ebp)
	addl $8,%esp
	jmp .L9
	.align 16
.L25:
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+52,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-4(%ebp)
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%esi
	addl $32,%esp
	cmpl $0,-4(%ebp)
	jl .L71
	movl (%esi),%eax
	movl 32(%eax),%edx
	pushl %esi
	call *%edx
	addl $4,%esp
	cmpl %eax,-4(%ebp)
	jl .L72
.L71:
	pushl $10
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_Fmt+52,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl $MM_QMachine+660
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $24,%esp
.L72:
	movl (%esi),%eax
	movl 44(%eax),%edx
	movl -4(%ebp),%eax
	testl %eax,%eax
	jge .L73
	pushl $3345
	call _m3_fault
	.align 16
.L73:
	leal -44(%ebp),%ebx
	pushl %ebx
	pushl %eax
	pushl %esi
	call *%edx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Push
	jmp .L103
	.align 16
.L26:
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushLoop
.L103:
	movl $0,-20(%ebp)
	addl $20,%esp
	jmp .L9
	.align 16
.L27:
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__IterateLoop
	addl $4,%esp
	testl %eax,%eax
	jne .L9
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PopLoop
	movl 8(%ebp),%ecx
	addl $4,%esp
	addl %edi,8(%ecx)
	jmp .L9
	.align 16
.L28:
	movl 8(%ebp),%ecx
	addl %edi,8(%ecx)
	jmp .L9
	.align 16
.L29:
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	addl $16,%esp
	testl %eax,%eax
	jne .L75
	movl 8(%ebp),%ecx
	addl %edi,8(%ecx)
.L75:
	movl $0,-20(%ebp)
	jmp .L9
	.align 16
.L30:
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PopInclude
	movl 8(%ebp),%ecx
	addl $4,%esp
	cmpl $0,36(%ecx)
	jle .L7
	jmp .L9
	.align 16
.L31:
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushScope
	addl $4,%esp
	jmp .L9
	.align 16
.L32:
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PopScope
	addl $4,%esp
	jmp .L9
	.align 16
.L33:
	pushl $0
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__DefineGlobal
	movl %eax,%edx
	addl $12,%esp
	testl %edx,%edx
	jne .L81
	pushl $3908
	call _m3_fault
	.align 16
.L34:
	pushl $1
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__DefineGlobal
	movl %eax,%edx
	addl $12,%esp
	testl %edx,%edx
	jne .L81
	pushl $3972
	call _m3_fault
	.align 16
.L35:
	pushl $0
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Define
	movl %eax,%edx
	addl $12,%esp
	testl %edx,%edx
	jne .L81
	pushl $4036
	call _m3_fault
	.align 16
.L36:
	pushl $1
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Define
	movl %eax,%edx
	addl $12,%esp
	testl %edx,%edx
	jne .L81
	pushl $4100
	call _m3_fault
	.align 16
.L81:
	leal 12(%edx),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	addl $8,%esp
	jmp .L9
	.align 16
.L37:
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__LookUp
	movl %eax,%edx
	addl $8,%esp
	testl %edx,%edx
	je .L82
	leal 12(%edx),%eax
.L101:
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Push
	addl $8,%esp
	jmp .L9
	.align 16
.L82:
	pushl %edi
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl $MM_QMachine+704
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $20,%esp
	jmp .L9
	.align 16
.L38:
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__LookUp
	movl %eax,%edx
	movl %edx,%ebx
	addl $8,%esp
	testl %edx,%edx
	jne .L87
	pushl %edx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__DefineGlobal
	movl %eax,%edx
	movl %edx,%ebx
	addl $12,%esp
	jmp .L86
	.align 16
.L87:
	cmpb $0,4(%edx)
	je .L86
	pushl %edi
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl $MM_QMachine+740
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $20,%esp
.L86:
	leal -28(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	addl $8,%esp
	testl %ebx,%ebx
	jne .L89
	pushl $4388
	call _m3_fault
	.align 16
.L89:
	movl -28(%ebp),%eax
	movl %eax,12(%ebx)
	movl -24(%ebp),%eax
	movl %eax,16(%ebx)
	movl -20(%ebp),%eax
	movl %eax,20(%ebx)
	jmp .L9
	.align 16
.L39:
	leal -28(%ebp),%ecx
	movl %ecx,-76(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	leal -16(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-4(%ebp)
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+64,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,%esi
	movl (%esi),%eax
	movl -76(%ebp),%ecx
	movl 8(%eax),%edx
	pushl %ecx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	xorl %esi,%esi
	movl %esi,-20(%ebp)
	movl %esi,-8(%ebp)
	addl $20,%esp
	jmp .L9
	.align 16
.L40:
	leal -28(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	leal -16(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+52,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-4(%ebp)
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,%esi
	addl $8,%esp
	cmpl $0,-4(%ebp)
	jl .L90
	movl (%edx),%eax
	movl 32(%eax),%edx
	pushl %esi
	call *%edx
	addl $4,%esp
	cmpl %eax,-4(%ebp)
	jl .L91
.L90:
	pushl $10
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_Fmt+52,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl $MM_QMachine+660
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $24,%esp
.L91:
	movl (%esi),%eax
	movl -4(%ebp),%ebx
	movl 28(%eax),%edx
	testl %ebx,%ebx
	jge .L92
	pushl $4673
	call _m3_fault
	.align 16
.L92:
	leal -28(%ebp),%eax
	pushl %eax
	pushl %ebx
	pushl %esi
	call *%edx
	xorl %esi,%esi
	movl %esi,-20(%ebp)
	movl %esi,-8(%ebp)
	addl $12,%esp
	jmp .L9
	.align 16
.L41:
	leal -28(%ebp),%edi
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	leal -16(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%esi
	addl $24,%esp
	cmpb $4,-28(%ebp)
	jne .L93
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,-80(%ebp)
	movl (%edx),%eax
	movl -80(%ebp),%ecx
	movl 32(%eax),%edx
	pushl %ecx
	call *%edx
	xorl %edi,%edi
	decl %eax
	movl %eax,-84(%ebp)
	addl $12,%esp
	jmp .L94
	.align 16
.L95:
	movl -80(%ebp),%ecx
	movl (%ecx),%eax
	leal -44(%ebp),%ebx
	movl 44(%eax),%edx
	pushl %ebx
	pushl %edi
	pushl %ecx
	call *%edx
	movl (%esi),%eax
	movl 12(%eax),%edx
	pushl %ebx
	pushl %esi
	call *%edx
	incl %edi
	addl $20,%esp
.L94:
	cmpl %edi,-84(%ebp)
	jge .L95
	jmp .L97
	.align 16
.L93:
	movl (%esi),%eax
	movl 12(%eax),%edx
	pushl %edi
	pushl %esi
	call *%edx
	addl $8,%esp
.L97:
	xorl %esi,%esi
	movl %esi,-20(%ebp)
	movl %esi,-8(%ebp)
	jmp .L9
	.align 16
.L42:
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl $0
	jmp .L105
	.align 16
.L43:
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl $1
.L105:
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushOutput
	movl $0,-20(%ebp)
	addl $28,%esp
	jmp .L9
	.align 16
.L44:
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PopOutput
	addl $4,%esp
	jmp .L9
	.align 16
.L45:
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushFrame
	addl $4,%esp
	jmp .L9
	.align 16
.L46:
	pushl $0
	jmp .L106
	.align 16
.L47:
	pushl $1
.L106:
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__DoCall
	addl $12,%esp
	jmp .L9
	.align 16
.L50:
	movl 8(%ebp),%ecx
	movl %edi,32(%ecx)
	jmp .L9
	.align 16
.L48:
	pushl $1
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__CheckReturn
	leal -28(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PopFrame
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Push
	addl $28,%esp
	cmpb $0,12(%ebp)
	je .L9
	movl -48(%ebp),%eax
	movl 8(%ebp),%ecx
	decl %eax
	cmpl %eax,28(%ecx)
	je .L7
	jmp .L9
	.align 16
.L49:
	pushl $0
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__CheckReturn
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PopFrame
	addl $12,%esp
	cmpb $0,12(%ebp)
	je .L9
	movl -48(%ebp),%eax
	movl 8(%ebp),%ecx
	decl %eax
	cmpl %eax,28(%ecx)
	jne .L9
.L7:
	leal -100(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe3:
	.size	 QMachine__Eval,.Lfe3-QMachine__Eval
	.align 16
	.type	 QMachine__TraceInstruction,@function
QMachine__TraceInstruction:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
.L108:
	movl $5,-4(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-8(%ebp)
	leal -8(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	movl 4(%esi),%eax
	cmpl %eax,84(%esi)
	je .L109
	pushl $MM_QMachine+792
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	addl $8,%esp
	movl 4(%esi),%eax
	testl %eax,%eax
	je .L110
	movl 12(%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	pushl %eax
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	addl $12,%esp
.L110:
	pushl $MM_QMachine+812
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	movl 4(%esi),%eax
	movl %eax,84(%esi)
	addl $8,%esp
.L109:
	movl 4(%esi),%eax
	movl 8(%eax),%eax
	testl %eax,%eax
	jne .L111
	pushl $5908
	call _m3_fault
	.align 16
.L111:
	movl 8(%esi),%edx
	cmpl %edx,4(%eax)
	ja .L112
	pushl $5906
	call _m3_fault
	.align 16
.L112:
	movl (%eax),%eax
	leal (%eax,%edx,8),%eax
	movl %eax,-12(%ebp)
	movl $1,%ebx
	movb (%eax),%cl
	movb %cl,-20(%ebp)
	movl 4(%eax),%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%edi
	jmp .L113
	.align 16
.L114:
	pushl $MM_QMachine+836
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	incl %ebx
	addl $8,%esp
.L113:
	cmpl %edi,%ebx
	jle .L114
	pushl $10
	movl 8(%esi),%eax
	pushl %eax
	movl MI_Fmt+52,%eax
	call *%eax
	pushl $0
	pushl $32
	pushl $4
	pushl %eax
	movl MI_Fmt+72,%eax
	call *%eax
	pushl %eax
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	addl $32,%esp
	pushl $32
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+64,%eax
	call *%eax
	xorl %ebx,%ebx
	movb -20(%ebp),%bl
	movl MI_QCode+44(,%ebx,4),%eax
	pushl %eax
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	xorl %eax,%eax
	movb MI_QCode+196(%ebx),%al
	addl $16,%esp
	testl %eax,%eax
	jle .L120
	cmpl $1,%eax
	jle .L117
	cmpl $2,%eax
	jle .L118
	cmpl $3,%eax
	jle .L119
	jmp .L120
	.align 16
.L117:
	pushl $MM_QMachine+852
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	pushl $10
	movl -16(%ebp),%ecx
	pushl %ecx
	movl MI_Fmt+52,%eax
	call *%eax
	pushl %eax
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	addl $24,%esp
	jmp .L120
	.align 16
.L118:
	pushl $MM_QMachine+868
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	pushl $10
	movl -16(%ebp),%ecx
	pushl %ecx
	movl MI_Fmt+52,%eax
	call *%eax
	pushl %eax
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	pushl $MM_QMachine+884
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	addl $32,%esp
	movl -16(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+52,%eax
	call *%eax
	pushl %eax
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	pushl $MM_QMachine+644
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	addl $20,%esp
	jmp .L120
	.align 16
.L119:
	pushl $MM_QMachine+900
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	pushl $10
	movl -16(%ebp),%ecx
	pushl %ecx
	movl MI_Fmt+52,%eax
	call *%eax
	pushl %eax
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	pushl $MM_QMachine+920
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	addl $32,%esp
	pushl $10
	movl 8(%esi),%eax
	movl -16(%ebp),%ecx
	leal 1(%eax,%ecx),%eax
	pushl %eax
	movl MI_Fmt+52,%eax
	call *%eax
	pushl %eax
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	addl $16,%esp
.L120:
	pushl $MM_QMachine+940
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+80,%eax
	call *%eax
.L122:
	movl -8(%ebp),%eax
	leal -32(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe4:
	.size	 QMachine__TraceInstruction,.Lfe4-QMachine__TraceInstruction
	.align 16
	.type	 QMachine__PushFrame,@function
QMachine__PushFrame:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	leal -12(%ebp),%esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	pushl %esi
	pushl %ebx
	call QMachine__Pop
	movl 64(%ebx),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L124
	pushl $6388
	call _m3_fault
	.align 16
.L124:
	movl 4(%eax),%eax
	cmpl %eax,28(%ebx)
	jl .L125
	pushl %ebx
	call QMachine__ExpandFrames
	addl $4,%esp
.L125:
	movl 64(%ebx),%edx
	testl %edx,%edx
	jne .L126
	pushl $6404
	call _m3_fault
	.align 16
.L126:
	movl 28(%ebx),%eax
	cmpl %eax,4(%edx)
	ja .L127
	pushl $6402
	call _m3_fault
	.align 16
.L127:
	leal (%eax,%eax,2),%eax
	sall $4,%eax
	addl (%edx),%eax
	movl %eax,-16(%ebp)
	pushl %esi
	pushl %ebx
	movl MI_QVal+72,%eax
	call *%eax
	movl -16(%ebp),%edx
	leal 4(%ebx),%esi
	movl %eax,(%edx)
	movl -16(%ebp),%edi
	addl $4,%edi
	leal -28(%ebp),%esp
	cld
	movl $11,%ecx
	rep
	movsl
	incl 28(%ebx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe5:
	.size	 QMachine__PushFrame,.Lfe5-QMachine__PushFrame
	.align 16
	.type	 QMachine__ExpandFrames,@function
QMachine__ExpandFrames:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 64(%ecx),%eax
	testl %eax,%eax
	jne .L129
	pushl $6532
	call _m3_fault
	.align 16
.L129:
	movl 4(%eax),%ebx
	leal -12(%ebp),%eax
	leal -4(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	movl %ebx,%edi
	addl %ebx,%edi
	movl %edi,-4(%ebp)
	pushl %eax
	movl MM_QMachine+544,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%esi
	addl $8,%esp
	testl %esi,%esi
	jne .L130
	pushl $6564
	call _m3_fault
	.align 16
.L130:
	movl %ebx,-16(%ebp)
	movl %ebx,%eax
	subl 4(%esi),%eax
	testl %eax,%eax
	jle .L131
	pushl $6561
	call _m3_fault
	.align 16
.L131:
	movl (%esi),%ecx
	movl %ecx,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl 8(%ebp),%ecx
	movl 64(%ecx),%edx
	testl %edx,%edx
	jne .L132
	pushl $6564
	call _m3_fault
	.align 16
.L132:
	cmpl %ebx,4(%edx)
	je .L133
	pushl $6563
	call _m3_fault
	.align 16
.L133:
	leal (%ebx,%edi),%eax
	sall $4,%eax
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	movl -24(%ebp),%ecx
	pushl %ecx
	call memmove
	movl 8(%ebp),%ecx
	leal -36(%ebp),%esp
	movl %esi,64(%ecx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe6:
	.size	 QMachine__ExpandFrames,.Lfe6-QMachine__ExpandFrames
	.align 16
	.type	 M_QMachine_LINE_441.0,@function
M_QMachine_LINE_441.0:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %ecx,-4(%ebp)
	movl -4(%ebp),%esi
	cmpb $0,-33(%esi)
	je .L151
	movl -40(%esi),%eax
	testl %eax,%eax
	jne .L152
	pushl $7092
	call _m3_fault
	.align 16
.L152:
	movl (%eax),%eax
	testl %eax,%eax
	jne .L153
	pushl $7092
	call _m3_fault
	.align 16
.L153:
	movb 17(%eax),%al
	andl $255,%eax
	pushl %eax
	movl -44(%esi),%eax
	movl (%eax),%eax
	pushl %eax
	call QMachine__CheckReturn
	movl -40(%esi),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L154
	pushl $7108
	call _m3_fault
	.align 16
.L154:
	movl (%eax),%eax
	testl %eax,%eax
	jne .L155
	pushl $7108
	call _m3_fault
	.align 16
.L155:
	cmpb $0,17(%eax)
	je .L156
	leal -12(%esi),%ebx
	pushl %ebx
	movl -44(%esi),%eax
	movl (%eax),%eax
	pushl %eax
	call QMachine__Pop
	movl -44(%esi),%eax
	movl (%eax),%eax
	pushl %eax
	call QMachine__PopFrame
	pushl %ebx
	movl -44(%esi),%eax
	movl (%eax),%eax
	pushl %eax
	call QMachine__Push
	jmp .L150
	.align 16
.L156:
.L151:
	movl -44(%esi),%eax
	movl (%eax),%eax
	pushl %eax
	call QMachine__PopFrame
.L150:
	leal -12(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe7:
	.size	 M_QMachine_LINE_441.0,.Lfe7-M_QMachine_LINE_441.0
	.align 16
	.type	 QMachine__DoCall,@function
QMachine__DoCall:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	xorl %eax,%eax
	pushl %esi
	movl %eax,%edx
	pushl %ebx
	movl 12(%ebp),%esi
	leal 8(%ebp),%ebx
	movl %ebx,-44(%ebp)
	movl %eax,-40(%ebp)
	movl %edx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %edx,-4(%ebp)
	movl 8(%ebp),%edi
	movb $0,-33(%ebp)
	movl 64(%edi),%edx
	testl %edx,%edx
	jne .L135
	pushl $6708
	call _m3_fault
	.align 16
.L135:
	movl 28(%edi),%eax
	decl %eax
	cmpl %eax,4(%edx)
	ja .L136
	pushl $6706
	call _m3_fault
	.align 16
.L136:
	leal (%eax,%eax,2),%eax
	sall $4,%eax
	movl (%edx),%ecx
	addl %eax,%ecx
	movl %ecx,-16(%ebp)
	movl (%ecx),%eax
	movl %eax,-40(%ebp)
	testl %eax,%eax
	jne .L137
	pushl $6740
	call _m3_fault
	.align 16
.L137:
	movl (%eax),%eax
	testl %eax,%eax
	jne .L138
	pushl $6740
	call _m3_fault
	.align 16
.L138:
	movl 12(%eax),%eax
	cmpl %esi,%eax
	je .L139
	testl %eax,%eax
	jl .L139
	pushl $MM_QMachine+956
	pushl %edi
	call QMachine__Err
	addl $8,%esp
.L139:
	movl -40(%ebp),%edi
	testl %edi,%edi
	jne .L142
	pushl $6788
	call _m3_fault
	.align 16
.L142:
	movl (%edi),%eax
	testl %eax,%eax
	jne .L143
	pushl $6788
	call _m3_fault
	.align 16
.L143:
	cmpb $0,16(%eax)
	je .L144
	movl 8(%ebp),%edx
	movl -16(%ebp),%ecx
	movl 40(%edx),%eax
	movl %eax,40(%ecx)
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl 4(%edx),%eax
	movl %eax,4(%ecx)
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movb 44(%edx),%al
	movb %al,44(%ecx)
	movl 8(%ebp),%ecx
	movl -40(%ebp),%eax
	testl %eax,%eax
	jne .L145
	pushl $6916
	call _m3_fault
	.align 16
.L145:
	movl (%eax),%eax
	movl %eax,40(%ecx)
	movl $0,8(%ecx)
	movl $0,4(%ecx)
	movl $0,32(%ecx)
	movb 16(%ebp),%bl
	movb %bl,44(%ecx)
	movl $M_QMachine_LINE_441.0,-24(%ebp)
	movl %ebp,-20(%ebp)
.L146:
	movl $3,-28(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-32(%ebp)
	leal -32(%ebp),%ebx
	movl %ebx,RTThread__handlerStack
	movl -40(%ebp),%eax
	testl %eax,%eax
	jne .L147
	pushl $7012
	call _m3_fault
	.align 16
.L147:
	movl (%eax),%eax
	testl %eax,%eax
	jne .L148
	pushl $7012
	call _m3_fault
	.align 16
.L148:
	movl 20(%eax),%ecx
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call *%ecx
	movb $1,-33(%ebp)
	movl -32(%ebp),%eax
	movl %eax,RTThread__handlerStack
	movl %ebp,%ecx
	call M_QMachine_LINE_441.0
.L149:
	jmp .L134
	.align 16
.L144:
	movl 8(%ebp),%edx
	movl -16(%ebp),%ecx
	movl 40(%edx),%eax
	movl %eax,40(%ecx)
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl 4(%edx),%eax
	movl %eax,4(%ecx)
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl %edx,%ecx
	movl (%edi),%eax
	movl %eax,40(%ecx)
	movl (%edi),%eax
	testl %eax,%eax
	jne .L162
	pushl $7396
	call _m3_fault
	.align 16
.L162:
	movl 4(%eax),%eax
	movl %eax,8(%ecx)
	movl (%edi),%eax
	testl %eax,%eax
	jne .L164
	pushl $7412
	call _m3_fault
	.align 16
.L164:
	movl (%eax),%eax
	movl %eax,4(%ecx)
	movb 16(%ebp),%bl
	movb %bl,44(%ecx)
	movl 8(%ebp),%eax
	pushl %eax
	call QMachine__PushScope
	movl %eax,%edx
	addl $4,%esp
	testl %edx,%edx
	jne .L165
	pushl $7460
	call _m3_fault
	.align 16
.L165:
	movl -40(%ebp),%eax
	testl %eax,%eax
	jne .L166
	pushl $7460
	call _m3_fault
	.align 16
.L166:
	movl 4(%eax),%eax
	movl %eax,4(%edx)
	cmpl %edx,%eax
	jne .L134
	pushl $7472
	call _m3_fault
	.align 16
.L134:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe8:
	.size	 QMachine__DoCall,.Lfe8-QMachine__DoCall
	.align 16
	.type	 QMachine__PopFrame,@function
QMachine__PopFrame:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl 28(%ebx),%eax
	decl %eax
	movl %eax,28(%ebx)
	movl 64(%ebx),%edx
	testl %edx,%edx
	jne .L170
	pushl $7636
	call _m3_fault
	.align 16
.L170:
	cmpl %eax,4(%edx)
	ja .L171
	pushl $7634
	call _m3_fault
	.align 16
.L171:
	leal (%eax,%eax,2),%eax
	sall $4,%eax
	movl (%edx),%edx
	addl %eax,%edx
	movl %edx,-16(%ebp)
	movl $0,(%edx)
	jmp .L172
	.align 16
.L173:
	pushl %ebx
	call QMachine__PopInclude
	addl $4,%esp
.L172:
	movl -16(%ebp),%edx
	movl 36(%edx),%eax
	cmpl %eax,36(%ebx)
	jg .L173
	movl 40(%edx),%eax
	movl %eax,40(%ebx)
	movl $0,40(%edx)
	movl 4(%edx),%eax
	movl %eax,4(%ebx)
	movl $0,4(%edx)
	movl 8(%edx),%eax
	movl %eax,8(%ebx)
	movl 32(%edx),%eax
	movl %eax,32(%ebx)
	movb 44(%edx),%al
	movb %al,44(%ebx)
	jmp .L175
	.align 16
.L176:
	pushl %ebx
	call QMachine__PopScope
	addl $4,%esp
.L175:
	movl -16(%ebp),%eax
	movl 12(%eax),%eax
	cmpl %eax,12(%ebx)
	jg .L176
	jmp .L178
	.align 16
.L179:
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call QMachine__Pop
	addl $8,%esp
.L178:
	movl -16(%ebp),%eax
	movl 16(%eax),%eax
	cmpl %eax,16(%ebx)
	jg .L179
	jmp .L181
	.align 16
.L182:
	pushl %ebx
	call QMachine__PopLoop
	addl $4,%esp
.L181:
	movl -16(%ebp),%eax
	movl 20(%eax),%eax
	cmpl %eax,20(%ebx)
	jg .L182
	jmp .L184
	.align 16
.L185:
	pushl %ebx
	call QMachine__PopOutput
	addl $4,%esp
.L184:
	movl -16(%ebp),%eax
	movl 24(%eax),%eax
	cmpl %eax,24(%ebx)
	jg .L185
	movl -20(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe9:
	.size	 QMachine__PopFrame,.Lfe9-QMachine__PopFrame
	.align 16
	.type	 QMachine__CheckReturn,@function
QMachine__CheckReturn:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ebx
	cmpl $0,28(%ebx)
	jg .L188
	pushl $MM_QMachine+1016
	pushl %ebx
	call QMachine__Err
	addl $8,%esp
.L188:
	movb 44(%ebx),%al
	cmpb %al,12(%ebp)
	je .L187
	testb %al,%al
	je .L191
	pushl $MM_QMachine+1068
	jmp .L192
	.align 16
.L191:
	pushl $MM_QMachine+1116
.L192:
	pushl %ebx
	call QMachine__Err
.L187:
	movl -4(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe10:
	.size	 QMachine__CheckReturn,.Lfe10-QMachine__CheckReturn
	.align 16
	.type	 QMachine__Call,@function
QMachine__Call:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movb $5,-12(%ebp)
	movl $0,-8(%ebp)
	movl 12(%ebp),%edx
	movl %edx,-4(%ebp)
	movl (%edi),%eax
	movl 16(%ebp),%esi
	movl 24(%eax),%ecx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%ecx
	pushl %edi
	call QMachine__PushFrame
	addl $12,%esp
	testl %esi,%esi
	je .L194
	xorl %ebx,%ebx
	movl 4(%esi),%edx
	decl %edx
	movl %edx,-16(%ebp)
	jmp .L196
	.align 16
.L197:
	movl (%edi),%eax
	movl 24(%eax),%ecx
	testl %esi,%esi
	jne .L198
	pushl $8308
	call _m3_fault
	.align 16
.L198:
	cmpl %ebx,4(%esi)
	ja .L199
	pushl $8306
	call _m3_fault
	.align 16
.L199:
	leal (%ebx,%ebx,2),%eax
	movl (%esi),%edx
	leal (%edx,%eax,4),%eax
	pushl %eax
	pushl %edi
	call *%ecx
	incl %ebx
	addl $8,%esp
.L196:
	cmpl %ebx,-16(%ebp)
	jge .L197
	testl %esi,%esi
	jne .L201
	pushl $8340
	call _m3_fault
	.align 16
.L201:
	xorl %eax,%eax
	movb 20(%ebp),%al
	pushl %eax
	movl 4(%esi),%eax
	pushl %eax
	jmp .L206
	.align 16
.L194:
	xorl %eax,%eax
	movb 20(%ebp),%al
	pushl %eax
	pushl %esi
.L206:
	pushl %edi
	call QMachine__DoCall
	addl $12,%esp
	cmpl $0,12(%ebp)
	jne .L203
	pushl $8404
	call _m3_fault
	.align 16
.L203:
	movl 12(%ebp),%edx
	movl (%edx),%eax
	testl %eax,%eax
	jne .L204
	pushl $8404
	call _m3_fault
	.align 16
.L204:
	cmpb $0,16(%eax)
	jne .L193
	pushl $1
	pushl %edi
	call QMachine__Eval
.L193:
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe11:
	.size	 QMachine__Call,.Lfe11-QMachine__Call
	.align 16
	.type	 QMachine__Get,@function
QMachine__Get:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-4(%ebp)
	movl 72(%eax),%ecx
	movl (%ecx),%eax
	movl 12(%ebp),%edx
	movl 4(%eax),%ebx
	movl %edx,-8(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%ebx
	addl $12,%esp
	testl %eax,%eax
	je .L208
	movl -4(%ebp),%eax
	testl %eax,%eax
	je .L209
	movl -4(%eax),%eax
	sall $11,%eax
	shrl $12,%eax
	cmpl %eax,MM_QMachine+1152
	je .L209
	pushl $8613
	call _m3_fault
	.align 16
.L209:
	movl -4(%ebp),%ecx
	testl %ecx,%ecx
	jne .L210
	pushl $8612
	call _m3_fault
	.align 16
.L210:
	movl 16(%ebp),%edx
	movl 12(%ecx),%eax
	movl %eax,(%edx)
	movl 16(%ecx),%eax
	movl %eax,4(%edx)
	movl 20(%ecx),%eax
	movl %eax,8(%edx)
	movl $1,%eax
.L208:
	movl -12(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe12:
	.size	 QMachine__Get,.Lfe12-QMachine__Get
	.align 16
	.type	 QMachine__Put,@function
QMachine__Put:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	xorl %eax,%eax
	movb 20(%ebp),%al
	pushl %eax
	pushl %edx
	pushl %ecx
	call QMachine__DefineGlobal
	movl %eax,%ecx
	addl $12,%esp
	testl %ecx,%ecx
	jne .L213
	pushl $8804
	call _m3_fault
	.align 16
.L213:
	movl 16(%ebp),%edx
	movl %ebp,%esp
	movl (%edx),%eax
	movl %eax,12(%ecx)
	movl 4(%edx),%eax
	movl %eax,16(%ecx)
	movl 8(%edx),%eax
	movl %eax,20(%ecx)
	popl %ebp
	ret
.Lfe13:
	.size	 QMachine__Put,.Lfe13-QMachine__Put
	.align 16
	.type	 QMachine__PushScope,@function
QMachine__PushScope:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 48(%esi),%eax
	testl %eax,%eax
	jne .L215
	pushl $8916
	call _m3_fault
	.align 16
.L215:
	movl 4(%eax),%eax
	cmpl %eax,12(%esi)
	jl .L216
	pushl %esi
	call QMachine__ExpandScopes
	addl $4,%esp
.L216:
	movl 48(%esi),%eax
	testl %eax,%eax
	jne .L217
	pushl $8932
	call _m3_fault
	.align 16
.L217:
	movl %eax,%edx
	movl 12(%esi),%ecx
	cmpl %ecx,4(%edx)
	ja .L218
	pushl $8930
	call _m3_fault
	.align 16
.L218:
	movl (%edx),%eax
	leal (%eax,%ecx,4),%edi
	movl MM_QMachine+1156,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ecx
	movl %ecx,(%edi)
	movl 12(%esi),%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jle .L219
	testl %ecx,%ecx
	jne .L220
	pushl $8980
	call _m3_fault
	.align 16
.L220:
	movl 48(%esi),%eax
	testl %eax,%eax
	jne .L221
	pushl $8980
	call _m3_fault
	.align 16
.L221:
	movl %eax,%edx
	leal -1(%ebx),%eax
	cmpl %eax,4(%edx)
	ja .L222
	pushl $8978
	call _m3_fault
	.align 16
.L222:
	movl (%edx),%eax
	movl -4(%eax,%ebx,4),%eax
	movl %eax,4(%ecx)
	jmp .L223
	.align 16
.L219:
	testl %ecx,%ecx
	jne .L224
	pushl $8996
	call _m3_fault
	.align 16
.L224:
	movl $0,4(%ecx)
.L223:
	movl (%edi),%eax
	testl %eax,%eax
	jne .L225
	pushl $9028
	call _m3_fault
	.align 16
.L225:
	cmpl %eax,4(%eax)
	jne .L226
	pushl $9024
	call _m3_fault
	.align 16
.L226:
	incl 12(%esi)
	leal -12(%ebp),%esp
	movl (%edi),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe14:
	.size	 QMachine__PushScope,.Lfe14-QMachine__PushScope
	.align 16
	.type	 QMachine__ExpandScopes,@function
QMachine__ExpandScopes:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 48(%edi),%eax
	testl %eax,%eax
	jne .L228
	pushl $9140
	call _m3_fault
	.align 16
.L228:
	movl 4(%eax),%ebx
	leal -12(%ebp),%eax
	leal -4(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	movl %ebx,%ecx
	addl %ebx,%ecx
	movl %ecx,-4(%ebp)
	pushl %eax
	movl MM_QMachine+512,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%esi
	addl $8,%esp
	testl %esi,%esi
	jne .L229
	pushl $9172
	call _m3_fault
	.align 16
.L229:
	movl %ebx,-16(%ebp)
	movl %ebx,%eax
	subl 4(%esi),%eax
	testl %eax,%eax
	jle .L230
	pushl $9169
	call _m3_fault
	.align 16
.L230:
	movl (%esi),%ecx
	movl %ecx,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl 48(%edi),%edx
	testl %edx,%edx
	jne .L231
	pushl $9172
	call _m3_fault
	.align 16
.L231:
	cmpl %ebx,4(%edx)
	je .L232
	pushl $9171
	call _m3_fault
	.align 16
.L232:
	leal 0(,%ebx,4),%eax
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	movl -24(%ebp),%ecx
	pushl %ecx
	call memmove
	leal -36(%ebp),%esp
	movl %esi,48(%edi)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe15:
	.size	 QMachine__ExpandScopes,.Lfe15-QMachine__ExpandScopes
	.align 16
	.type	 QMachine__PopScope,@function
QMachine__PopScope:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	xorl %ebx,%ebx
	movl 12(%edi),%edx
	decl %edx
	movl %edx,12(%edi)
	movl 48(%edi),%eax
	testl %eax,%eax
	jne .L234
	pushl $9300
	call _m3_fault
	.align 16
.L234:
	cmpl %edx,4(%eax)
	ja .L235
	pushl $9298
	call _m3_fault
	.align 16
.L235:
	movl (%eax),%eax
	leal (%eax,%edx,4),%edx
	movl %edx,%esi
	movl (%esi),%eax
	testl %eax,%eax
	jne .L236
	pushl $9316
	call _m3_fault
	.align 16
.L236:
	movl (%eax),%ecx
	testl %ecx,%ecx
	je .L237
	jmp .L238
	.align 16
.L239:
	movb $0,4(%ecx)
	movl $0,8(%ecx)
	movl %ecx,%edx
	movl %edx,%ebx
	movl $0,20(%edx)
	movl (%ebx),%ecx
.L238:
	testl %ecx,%ecx
	jne .L239
	testl %ebx,%ebx
	jne .L245
	pushl $9476
	call _m3_fault
	.align 16
.L245:
	movl 88(%edi),%eax
	movl %eax,(%ebx)
	movl %edi,%edx
	movl (%esi),%eax
	testl %eax,%eax
	jne .L246
	pushl $9492
	call _m3_fault
	.align 16
.L246:
	movl (%eax),%eax
	movl %eax,88(%edx)
	movl (%esi),%eax
	testl %eax,%eax
	jne .L247
	pushl $9508
	call _m3_fault
	.align 16
.L247:
	movl %ecx,(%eax)
.L237:
	movl (%esi),%eax
	testl %eax,%eax
	jne .L248
	pushl $9540
	call _m3_fault
	.align 16
.L248:
	leal -12(%ebp),%esp
	movl $0,4(%eax)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe16:
	.size	 QMachine__PopScope,.Lfe16-QMachine__PopScope
	.align 16
	.type	 QMachine__Define,@function
QMachine__Define:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 48(%edi),%eax
	testl %eax,%eax
	jne .L250
	pushl $9668
	call _m3_fault
	.align 16
.L250:
	movl 12(%edi),%edx
	decl %edx
	cmpl %edx,4(%eax)
	ja .L251
	pushl $9666
	call _m3_fault
	.align 16
.L251:
	movl (%eax),%eax
	leal (%eax,%edx,4),%edx
	movl %edx,-4(%ebp)
	movl (%edx),%eax
	testl %eax,%eax
	jne .L252
	pushl $9684
	call _m3_fault
	.align 16
.L252:
	movl (%eax),%esi
	pushl %edi
	call QMachine__NewBinding
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L253
	pushl $9716
	call _m3_fault
	.align 16
.L253:
	movl %esi,(%ebx)
	movl 12(%ebp),%ecx
	movl %ecx,8(%ebx)
	movb 16(%ebp),%cl
	movb %cl,4(%ebx)
	jmp .L256
	.align 16
.L257:
	movl 12(%ebp),%ecx
	cmpl %ecx,8(%esi)
	jne .L260
	pushl %ecx
	movl MI_M3ID+52,%eax
	call *%eax
	pushl %eax
	pushl $MM_QMachine+1168
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %edi
	call QMachine__Err
	addl $20,%esp
.L260:
	movl (%esi),%esi
.L256:
	testl %esi,%esi
	jne .L257
	movl -4(%ebp),%ecx
	movl (%ecx),%eax
	testl %eax,%eax
	jne .L262
	pushl $9860
	call _m3_fault
	.align 16
.L262:
	movl %ebx,(%eax)
	leal -16(%ebp),%esp
	movl %ebx,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe17:
	.size	 QMachine__Define,.Lfe17-QMachine__Define
	.align 16
	.type	 QMachine__DefineGlobal,@function
QMachine__DefineGlobal:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-4(%ebp)
	movl 72(%edi),%edx
	movl %edx,-20(%ebp)
	movl (%edx),%eax
	movl 12(%ebp),%esi
	movl 4(%eax),%ecx
	movl %esi,-8(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%ecx
	addl $12,%esp
	testl %eax,%eax
	je .L264
	movl -4(%ebp),%eax
	testl %eax,%eax
	je .L265
	movl -4(%eax),%eax
	sall $11,%eax
	shrl $12,%eax
	cmpl %eax,MM_QMachine+1152
	je .L265
	pushl $10021
	call _m3_fault
	.align 16
.L265:
	movl -4(%ebp),%ebx
	jmp .L266
	.align 16
.L264:
	pushl %edi
	call QMachine__NewBinding
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L267
	pushl $10068
	call _m3_fault
	.align 16
.L267:
	movl %esi,8(%ebx)
	movb $0,4(%ebx)
	movl 72(%edi),%ecx
	movl (%ecx),%eax
	movl 8(%eax),%eax
	movl %eax,-20(%ebp)
	movl %esi,-12(%ebp)
	movl %ebx,-16(%ebp)
	leal -16(%ebp),%eax
	pushl %eax
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ecx
	movl -20(%ebp),%edx
	call *%edx
	addl $12,%esp
.L266:
	testl %ebx,%ebx
	jne .L269
	pushl $10132
	call _m3_fault
	.align 16
.L269:
	cmpb $0,4(%ebx)
	je .L271
	pushl %esi
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,-20(%ebp)
	pushl %eax
	pushl $MM_QMachine+1208
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	pushl %ecx
	pushl %edi
	call QMachine__Err
.L271:
	movb 16(%ebp),%dl
	movb %dl,4(%ebx)
	leal -32(%ebp),%esp
	movl %ebx,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe18:
	.size	 QMachine__DefineGlobal,.Lfe18-QMachine__DefineGlobal
	.align 16
	.type	 QMachine__LookUp,@function
QMachine__LookUp:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl $0,-4(%ebp)
	movl 12(%ebx),%edx
	testl %edx,%edx
	jle .L273
	movl 48(%ebx),%eax
	testl %eax,%eax
	jne .L274
	pushl $10324
	call _m3_fault
	.align 16
.L274:
	movl %eax,%ecx
	leal -1(%edx),%eax
	cmpl %eax,4(%ecx)
	ja .L275
	pushl $10322
	call _m3_fault
	.align 16
.L275:
	movl (%ecx),%eax
	movl -4(%eax,%edx,4),%eax
	jmp .L276
	.align 16
.L277:
	movl (%eax),%edx
	jmp .L279
	.align 16
.L280:
	cmpl %esi,8(%edx)
	jne .L283
	movl %edx,%eax
	jmp .L289
	.align 16
.L283:
	movl (%edx),%edx
.L279:
	testl %edx,%edx
	jne .L280
	testl %eax,%eax
	jne .L285
	pushl $10436
	call _m3_fault
	.align 16
.L285:
	movl 4(%eax),%eax
.L276:
	testl %eax,%eax
	jne .L277
.L273:
	movl 72(%ebx),%ecx
	movl (%ecx),%eax
	movl 4(%eax),%edx
	movl %esi,-8(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%edx
	addl $12,%esp
	testl %eax,%eax
	je .L287
	movl -4(%ebp),%eax
	testl %eax,%eax
	je .L288
	movl -4(%eax),%eax
	sall $11,%eax
	shrl $12,%eax
	cmpl %eax,MM_QMachine+1152
	je .L288
	pushl $10533
	call _m3_fault
	.align 16
.L288:
	movl -4(%ebp),%eax
.L287:
.L289:
	leal -16(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe19:
	.size	 QMachine__LookUp,.Lfe19-QMachine__LookUp
	.align 16
	.type	 QMachine__NewBinding,@function
QMachine__NewBinding:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 88(%ecx),%edx
	testl %edx,%edx
	je .L291
	movl (%edx),%eax
	movl %eax,88(%ecx)
	movl $0,(%edx)
	jmp .L294
	.align 16
.L291:
	movl MM_QMachine+1148,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
.L294:
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe20:
	.size	 QMachine__NewBinding,.Lfe20-QMachine__NewBinding
	.align 16
	.type	 QMachine__Push,@function
QMachine__Push:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 52(%esi),%eax
	testl %eax,%eax
	jne .L296
	pushl $10868
	call _m3_fault
	.align 16
.L296:
	movl 4(%eax),%eax
	cmpl %eax,16(%esi)
	jl .L297
	pushl %esi
	call QMachine__ExpandStack
	addl $4,%esp
.L297:
	movl 52(%esi),%edx
	testl %edx,%edx
	jne .L298
	pushl $10884
	call _m3_fault
	.align 16
.L298:
	movl 16(%esi),%eax
	cmpl %eax,4(%edx)
	ja .L299
	pushl $10882
	call _m3_fault
	.align 16
.L299:
	movl (%edx),%ebx
	leal (%eax,%eax,2),%ecx
	sall $2,%ecx
	movl 12(%ebp),%edx
	leal -8(%ebp),%esp
	movl (%edx),%eax
	movl %eax,(%ebx,%ecx)
	movl 4(%edx),%eax
	movl %eax,4(%ebx,%ecx)
	movl 8(%edx),%eax
	movl %eax,8(%ebx,%ecx)
	incl 16(%esi)
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe21:
	.size	 QMachine__Push,.Lfe21-QMachine__Push
	.align 16
	.type	 QMachine__ExpandStack,@function
QMachine__ExpandStack:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 52(%ecx),%eax
	testl %eax,%eax
	jne .L301
	pushl $10964
	call _m3_fault
	.align 16
.L301:
	movl 4(%eax),%ebx
	leal -12(%ebp),%eax
	leal -4(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	movl %ebx,%edi
	addl %ebx,%edi
	movl %edi,-4(%ebp)
	pushl %eax
	movl MM_QMachine+520,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%esi
	addl $8,%esp
	testl %esi,%esi
	jne .L302
	pushl $10996
	call _m3_fault
	.align 16
.L302:
	movl %ebx,-16(%ebp)
	movl %ebx,%eax
	subl 4(%esi),%eax
	testl %eax,%eax
	jle .L303
	pushl $10993
	call _m3_fault
	.align 16
.L303:
	movl (%esi),%ecx
	movl %ecx,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl 8(%ebp),%ecx
	movl 52(%ecx),%edx
	testl %edx,%edx
	jne .L304
	pushl $10996
	call _m3_fault
	.align 16
.L304:
	cmpl %ebx,4(%edx)
	je .L305
	pushl $10995
	call _m3_fault
	.align 16
.L305:
	leal (%ebx,%edi),%eax
	sall $2,%eax
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	movl -24(%ebp),%ecx
	pushl %ecx
	call memmove
	movl 8(%ebp),%ecx
	leal -36(%ebp),%esp
	movl %esi,52(%ecx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe22:
	.size	 QMachine__ExpandStack,.Lfe22-QMachine__ExpandStack
	.align 16
	.type	 QMachine__Pop,@function
QMachine__Pop:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	cmpl $0,16(%ebx)
	jg .L307
	pushl $MM_QMachine+1264
	pushl %ebx
	call QMachine__Err
	addl $8,%esp
.L307:
	movl %ebx,%eax
	movl 16(%eax),%edx
	decl %edx
	movl %edx,16(%eax)
	movl 52(%eax),%eax
	testl %eax,%eax
	jne .L308
	pushl $11124
	call _m3_fault
	.align 16
.L308:
	cmpl %edx,4(%eax)
	ja .L309
	pushl $11122
	call _m3_fault
	.align 16
.L309:
	leal (%edx,%edx,2),%edx
	movl (%eax),%eax
	leal (%eax,%edx,4),%ecx
	movl %ecx,-4(%ebp)
	movl 12(%ebp),%edx
	movl (%ecx),%eax
	movl %eax,(%edx)
	movl 4(%ecx),%eax
	movl %eax,4(%edx)
	movl 8(%ecx),%eax
	movl %eax,8(%edx)
	movl -4(%ebp),%ecx
	movl $0,8(%ecx)
	movl -8(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe23:
	.size	 QMachine__Pop,.Lfe23-QMachine__Pop
	.align 16
	.type	 QMachRep__PushString,@function
QMachRep__PushString:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	testl %eax,%eax
	jne .L311
	movl $MM_QMachine+1288,%eax
.L311:
	movb $2,-12(%ebp)
	pushl $0
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-8(%ebp)
	movl $0,-4(%ebp)
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call QMachine__Push
	movl -16(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe24:
	.size	 QMachRep__PushString,.Lfe24-QMachRep__PushString
	.align 16
	.type	 QMachine__PushBool,@function
QMachine__PushBool:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	movl 8(%ebp),%edx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	xorl %eax,%eax
	movb 12(%ebp),%al
	movb $2,-12(%ebp)
	movl MI_QValue+356(,%eax,4),%eax
	movl %eax,-8(%ebp)
	movl $0,-4(%ebp)
	leal -12(%ebp),%eax
	pushl %eax
	pushl %edx
	call QMachine__Push
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe25:
	.size	 QMachine__PushBool,.Lfe25-QMachine__PushBool
	.align 16
	.type	 QMachine__PushOutput,@function
QMachine__PushOutput:
	pushl %ebp
	movl %esp,%ebp
	subl $184,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 60(%ecx),%eax
	testl %eax,%eax
	jne .L314
	pushl $11604
	call _m3_fault
	.align 16
.L314:
	movl 8(%ebp),%ecx
	movl 4(%eax),%eax
	cmpl %eax,24(%ecx)
	jl .L315
	pushl %ecx
	call QMachine__ExpandOutput
	addl $4,%esp
.L315:
	movl 8(%ebp),%ecx
	movl 60(%ecx),%eax
	testl %eax,%eax
	jne .L316
	pushl $11620
	call _m3_fault
	.align 16
.L316:
	movl 8(%ebp),%ecx
	movl %eax,%esi
	movl 24(%ecx),%edx
	cmpl %edx,4(%esi)
	ja .L317
	pushl $11618
	call _m3_fault
	.align 16
.L317:
	movl (%esi),%eax
	leal (%eax,%edx,8),%eax
	movl %eax,-4(%ebp)
	movl 12(%ebp),%ecx
	movl %ecx,(%eax)
.L318:
	movl $MM_QMachine+1300,-176(%ebp)
	movl $0,-180(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-184(%ebp)
	leal -184(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -164(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L319
	cmpb $0,16(%ebp)
	je .L320
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_FileWr+152,%eax
	call *%eax
	movl -4(%ebp),%esi
	movl %eax,4(%esi)
	jmp .L321
	.align 16
.L320:
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_FileWr+148,%eax
	call *%eax
	movl %eax,%esi
	movl -4(%ebp),%eax
	movl %esi,4(%eax)
.L321:
	movl -184(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L322
	.align 16
.L319:
	movl -168(%ebp),%ebx
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl $MM_QMachine+1312
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_QMachine+1344
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl %ebx
	call QMachine__OSErr
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
.L322:
	movl 8(%ebp),%ecx
	leal -192(%ebp),%esp
	incl 24(%ecx)
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe26:
	.size	 QMachine__PushOutput,.Lfe26-QMachine__PushOutput
	.align 16
	.type	 QMachine__ExpandOutput,@function
QMachine__ExpandOutput:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 60(%edi),%eax
	testl %eax,%eax
	jne .L325
	pushl $11860
	call _m3_fault
	.align 16
.L325:
	movl 4(%eax),%ebx
	leal -12(%ebp),%eax
	leal -4(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	movl %ebx,%ecx
	addl %ebx,%ecx
	movl %ecx,-4(%ebp)
	pushl %eax
	movl MM_QMachine+536,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%esi
	addl $8,%esp
	testl %esi,%esi
	jne .L326
	pushl $11892
	call _m3_fault
	.align 16
.L326:
	movl %ebx,-16(%ebp)
	movl %ebx,%eax
	subl 4(%esi),%eax
	testl %eax,%eax
	jle .L327
	pushl $11889
	call _m3_fault
	.align 16
.L327:
	movl (%esi),%ecx
	movl %ecx,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl 60(%edi),%edx
	testl %edx,%edx
	jne .L328
	pushl $11892
	call _m3_fault
	.align 16
.L328:
	cmpl %ebx,4(%edx)
	je .L329
	pushl $11891
	call _m3_fault
	.align 16
.L329:
	leal 0(,%ebx,8),%eax
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	movl -24(%ebp),%ecx
	pushl %ecx
	call memmove
	leal -36(%ebp),%esp
	movl %esi,60(%edi)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe27:
	.size	 QMachine__ExpandOutput,.Lfe27-QMachine__ExpandOutput
	.align 16
	.type	 QMachine__PopOutput,@function
QMachine__PopOutput:
	pushl %ebp
	movl %esp,%ebp
	subl $184,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 24(%ecx),%eax
	decl %eax
	movl %eax,24(%ecx)
	movl 60(%ecx),%edx
	testl %edx,%edx
	jne .L331
	pushl $12020
	call _m3_fault
	.align 16
.L331:
	movl %edx,%esi
	cmpl %eax,4(%esi)
	ja .L332
	pushl $12018
	call _m3_fault
	.align 16
.L332:
	sall $3,%eax
	addl (%esi),%eax
	movl %eax,-4(%ebp)
.L333:
	movl $MM_QMachine+1368,-176(%ebp)
	movl $0,-180(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-184(%ebp)
	leal -184(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -164(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L334
	movl -4(%ebp),%eax
	movl 4(%eax),%eax
	pushl %eax
	movl MI_Wr+84,%eax
	call *%eax
	movl -4(%ebp),%eax
	movl %ebx,4(%eax)
	movl %ebx,(%eax)
	movl -184(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L330
	.align 16
.L334:
	cmpl $MI_Wr+44,-172(%ebp)
	jne .L336
	movl -4(%ebp),%eax
	movl -168(%ebp),%ebx
	movl (%eax),%eax
	pushl %eax
	pushl $MM_QMachine+1384
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_QMachine+644
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl %ebx
	call QMachine__OSErr
	pushl %eax
	jmp .L338
	.align 16
.L336:
	movl -4(%ebp),%eax
	movl (%eax),%eax
	pushl %eax
	pushl $MM_QMachine+1384
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_QMachine+1416
	movl %eax,%esi
.L338:
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
.L330:
	leal -192(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe28:
	.size	 QMachine__PopOutput,.Lfe28-QMachine__PopOutput
	.align 16
	.type	 QMachine__CurWr,@function
QMachine__CurWr:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 24(%eax),%ecx
	testl %ecx,%ecx
	jg .L340
	movl 136(%eax),%eax
	jmp .L343
	.align 16
.L340:
	movl 60(%eax),%edx
	testl %edx,%edx
	jne .L341
	pushl $12308
	call _m3_fault
	.align 16
.L341:
	leal -1(%ecx),%eax
	cmpl %eax,4(%edx)
	ja .L342
	pushl $12306
	call _m3_fault
	.align 16
.L342:
	movl (%edx),%eax
	movl -4(%eax,%ecx,8),%eax
.L343:
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe29:
	.size	 QMachine__CurWr,.Lfe29-QMachine__CurWr
	.align 16
	.type	 QMachine__PushLoop,@function
QMachine__PushLoop:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl 56(%esi),%eax
	testl %eax,%eax
	jne .L345
	pushl $12468
	call _m3_fault
	.align 16
.L345:
	movl 4(%eax),%eax
	cmpl %eax,20(%esi)
	jl .L346
	pushl %esi
	call QMachine__ExpandLoops
	addl $4,%esp
.L346:
	movl 56(%esi),%eax
	testl %eax,%eax
	jne .L347
	pushl $12484
	call _m3_fault
	.align 16
.L347:
	movl %eax,%ecx
	movl 20(%esi),%eax
	cmpl %eax,4(%ecx)
	ja .L348
	pushl $12482
	call _m3_fault
	.align 16
.L348:
	sall $4,%eax
	addl (%ecx),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebp),%eax
	xorl %edx,%edx
	movb (%eax),%dl
	cmpl $3,%edx
	jne .L349
	movl 8(%eax),%ecx
	testl %ecx,%ecx
	je .L350
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%ebx
	shrl $12,%ebx
	cmpl %ebx,MM_QMachine+1444
	jg .L351
	movl MM_QMachine+1440,%eax
	cmpl %ebx,4(%eax)
	jge .L350
.L351:
	pushl $12517
	call _m3_fault
	.align 16
.L350:
	movl %ecx,%edx
	movl (%edx),%eax
	movl 20(%eax),%ecx
	pushl %edx
	call *%ecx
	movl %eax,%ecx
	movl -4(%ebp),%edx
	addl $4,%esp
	movl %ecx,(%edx)
	jmp .L352
	.align 16
.L349:
	cmpl $4,%edx
	jne .L353
	movl 8(%eax),%edx
	testl %edx,%edx
	je .L354
	movl -4(%edx),%eax
	sall $11,%eax
	movl %eax,%ebx
	shrl $12,%ebx
	cmpl %ebx,MM_QMachine+572
	jg .L355
	movl MM_QMachine+568,%eax
	cmpl %ebx,4(%eax)
	jge .L354
.L355:
	pushl $12565
	call _m3_fault
	.align 16
.L354:
	movl %edx,%eax
	movl -4(%ebp),%edx
	movl %eax,4(%edx)
	movl $0,8(%edx)
	jmp .L352
	.align 16
.L353:
	pushl $MM_QMachine+1452
	pushl %esi
	call QMachine__Err
	addl $8,%esp
.L352:
	pushl %esi
	call QMachine__PushScope
	pushl $1
	pushl %edi
	pushl %esi
	call QMachine__Define
	movl %eax,%edx
	movl -4(%ebp),%ecx
	leal -16(%ebp),%esp
	movl %edx,12(%ecx)
	incl 20(%esi)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe30:
	.size	 QMachine__PushLoop,.Lfe30-QMachine__PushLoop
	.align 16
	.type	 QMachine__ExpandLoops,@function
QMachine__ExpandLoops:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 56(%edi),%eax
	testl %eax,%eax
	jne .L357
	pushl $12772
	call _m3_fault
	.align 16
.L357:
	movl 4(%eax),%ebx
	leal -12(%ebp),%eax
	leal -4(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	movl %ebx,%ecx
	addl %ebx,%ecx
	movl %ecx,-4(%ebp)
	pushl %eax
	movl MM_QMachine+528,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%esi
	addl $8,%esp
	testl %esi,%esi
	jne .L358
	pushl $12804
	call _m3_fault
	.align 16
.L358:
	movl %ebx,-16(%ebp)
	movl %ebx,%eax
	subl 4(%esi),%eax
	testl %eax,%eax
	jle .L359
	pushl $12801
	call _m3_fault
	.align 16
.L359:
	movl (%esi),%ecx
	movl %ecx,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl 56(%edi),%edx
	testl %edx,%edx
	jne .L360
	pushl $12804
	call _m3_fault
	.align 16
.L360:
	cmpl %ebx,4(%edx)
	je .L361
	pushl $12803
	call _m3_fault
	.align 16
.L361:
	movl %ebx,%eax
	sall $4,%eax
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	movl -24(%ebp),%ecx
	pushl %ecx
	call memmove
	leal -36(%ebp),%esp
	movl %esi,56(%edi)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe31:
	.size	 QMachine__ExpandLoops,.Lfe31-QMachine__ExpandLoops
	.align 16
	.type	 QMachine__IterateLoop,@function
QMachine__IterateLoop:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl 56(%ecx),%eax
	testl %eax,%eax
	jne .L363
	pushl $12916
	call _m3_fault
	.align 16
.L363:
	movl %eax,%edx
	movl 20(%ecx),%eax
	decl %eax
	cmpl %eax,4(%edx)
	ja .L364
	pushl $12914
	call _m3_fault
	.align 16
.L364:
	sall $4,%eax
	movl (%edx),%ecx
	addl %eax,%ecx
	movl %ecx,-20(%ebp)
	movl (%ecx),%ebx
	testl %ebx,%ebx
	je .L365
	movl %ebx,%ecx
	movl (%ecx),%eax
	movl 4(%eax),%edx
	leal -12(%ebp),%eax
	pushl %eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%edx
	addl $12,%esp
	testl %eax,%eax
	je .L372
	movl -20(%ebp),%eax
	movl 12(%eax),%eax
	testl %eax,%eax
	jne .L367
	pushl $12964
	call _m3_fault
	.align 16
.L367:
	movl %eax,%edx
	leal 12(%edx),%edi
	movl %edi,-24(%ebp)
	movb $2,12(%edx)
	movl -24(%ebp),%edx
	movl -16(%ebp),%eax
	movl %eax,4(%edx)
	movl $0,8(%edx)
	jmp .L368
	.align 16
.L365:
	movl 4(%ecx),%edx
	movl (%edx),%eax
	movl 32(%eax),%ecx
	pushl %edx
	call *%ecx
	movl -20(%ebp),%edx
	addl $4,%esp
	movl 8(%edx),%esi
	cmpl %eax,%esi
	jl .L369
	movl %ebx,%eax
	jmp .L372
	.align 16
.L369:
	movl 12(%edx),%eax
	testl %eax,%eax
	jne .L370
	pushl $13076
	call _m3_fault
	.align 16
.L370:
	movl 4(%edx),%edx
	movl %eax,%ecx
	movl (%edx),%eax
	movl 44(%eax),%ebx
	testl %esi,%esi
	jge .L371
	pushl $13073
	call _m3_fault
	.align 16
.L371:
	leal 12(%ecx),%eax
	pushl %eax
	pushl %esi
	pushl %edx
	call *%ebx
	movl -20(%ebp),%ebx
	incl 8(%ebx)
.L368:
	movl $1,%eax
.L372:
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe32:
	.size	 QMachine__IterateLoop,.Lfe32-QMachine__IterateLoop
	.align 16
	.type	 QMachine__PopLoop,@function
QMachine__PopLoop:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	pushl %ebx
	call QMachine__PopScope
	movl %ebx,%edx
	addl $4,%esp
	movl 20(%edx),%eax
	decl %eax
	movl %eax,20(%edx)
	movl 56(%edx),%edx
	testl %edx,%edx
	jne .L374
	pushl $13252
	call _m3_fault
	.align 16
.L374:
	cmpl %eax,4(%edx)
	ja .L375
	pushl $13250
	call _m3_fault
	.align 16
.L375:
	sall $4,%eax
	addl (%edx),%eax
	movl %eax,-4(%ebp)
	movl $0,(%eax)
	movl -4(%ebp),%eax
	movl $0,4(%eax)
	movl $0,12(%eax)
	movl -8(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe33:
	.size	 QMachine__PopLoop,.Lfe33-QMachine__PopLoop
	.align 16
	.type	 QMachine__PushInclude,@function
QMachine__PushInclude:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl 68(%ebx),%eax
	testl %eax,%eax
	jne .L377
	pushl $13428
	call _m3_fault
	.align 16
.L377:
	movl 16(%ebp),%edx
	movl 4(%eax),%eax
	cmpl %eax,32(%edx)
	jl .L378
	pushl %ebx
	call QMachine__ExpandIncludes
	addl $4,%esp
.L378:
	movl 68(%ebx),%ecx
	testl %ecx,%ecx
	jne .L379
	pushl $13444
	call _m3_fault
	.align 16
.L379:
	movl 16(%ebp),%eax
	movl 32(%eax),%eax
	cmpl %eax,4(%ecx)
	ja .L380
	pushl $13442
	call _m3_fault
	.align 16
.L380:
	leal (%eax,%eax,2),%edx
	movl (%ecx),%eax
	leal (%eax,%edx,4),%ecx
	movl %ecx,-4(%ebp)
	movl %esi,(%ecx)
	movl 16(%ebp),%edx
	movl -4(%ebp),%ecx
	movl (%edx),%eax
	movl %eax,4(%ecx)
	movl 4(%edx),%eax
	movl %eax,8(%ecx)
	movl %esi,(%edx)
	movl 16(%ebp),%eax
	leal -12(%ebp),%esp
	movl $0,4(%eax)
	incl 32(%eax)
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe34:
	.size	 QMachine__PushInclude,.Lfe34-QMachine__PushInclude
	.align 16
	.type	 QMachine__ExpandIncludes,@function
QMachine__ExpandIncludes:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 68(%ecx),%eax
	testl %eax,%eax
	jne .L382
	pushl $13620
	call _m3_fault
	.align 16
.L382:
	movl 4(%eax),%ebx
	leal -12(%ebp),%eax
	leal -4(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	movl %ebx,%edi
	addl %ebx,%edi
	movl %edi,-4(%ebp)
	pushl %eax
	movl MM_QMachine+552,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%esi
	addl $8,%esp
	testl %esi,%esi
	jne .L383
	pushl $13652
	call _m3_fault
	.align 16
.L383:
	movl %ebx,-16(%ebp)
	movl %ebx,%eax
	subl 4(%esi),%eax
	testl %eax,%eax
	jle .L384
	pushl $13649
	call _m3_fault
	.align 16
.L384:
	movl (%esi),%ecx
	movl %ecx,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl 8(%ebp),%ecx
	movl 68(%ecx),%edx
	testl %edx,%edx
	jne .L385
	pushl $13652
	call _m3_fault
	.align 16
.L385:
	cmpl %ebx,4(%edx)
	je .L386
	pushl $13651
	call _m3_fault
	.align 16
.L386:
	leal (%ebx,%edi),%eax
	sall $2,%eax
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	movl -24(%ebp),%ecx
	pushl %ecx
	call memmove
	movl 8(%ebp),%ecx
	leal -36(%ebp),%esp
	movl %esi,68(%ecx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe35:
	.size	 QMachine__ExpandIncludes,.Lfe35-QMachine__ExpandIncludes
	.align 16
	.type	 QMachine__PopInclude,@function
QMachine__PopInclude:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 36(%ecx),%eax
	decl %eax
	movl %eax,36(%ecx)
	movl 68(%ecx),%edx
	testl %edx,%edx
	jne .L388
	pushl $13764
	call _m3_fault
	.align 16
.L388:
	cmpl %eax,4(%edx)
	ja .L389
	pushl $13762
	call _m3_fault
	.align 16
.L389:
	leal (%eax,%eax,2),%eax
	sall $2,%eax
	movl (%edx),%edx
	leal (%eax,%edx),%ebx
	addl %eax,%edx
	movl %ebx,-4(%ebp)
	movl 4(%edx),%eax
	movl %eax,4(%ecx)
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl $0,(%edx)
	movl -4(%ebp),%eax
	movl $0,4(%eax)
	movl -8(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe36:
	.size	 QMachine__PopInclude,.Lfe36-QMachine__PopInclude
	.align 16
	.type	 QMachine__InitBuiltins,@function
QMachine__InitBuiltins:
	pushl %ebp
	movl %esp,%ebp
	cmpb $0,MM_QMachine+284
	jne .L390
	movb $1,MM_QMachine+284
	pushl $1
	pushl $2
	movl MM_QMachine+368,%eax
	pushl %eax
	pushl $MM_QMachine+1508
	call QMachine__NewBuiltin
	movl %eax,MM_QMachine+288
	pushl $0
	pushl $2
	movl MM_QMachine+372,%eax
	pushl %eax
	pushl $MM_QMachine+1528
	call QMachine__NewBuiltin
	addl $32,%esp
	movl %eax,MM_QMachine+292
	pushl $1
	pushl $1
	movl MM_QMachine+376,%eax
	pushl %eax
	pushl $MM_QMachine+1548
	call QMachine__NewBuiltin
	movl %eax,MM_QMachine+296
	pushl $1
	pushl $1
	movl MM_QMachine+380,%eax
	pushl %eax
	pushl $MM_QMachine+1568
	call QMachine__NewBuiltin
	addl $32,%esp
	movl %eax,MM_QMachine+300
	pushl $1
	pushl $2
	movl MM_QMachine+384,%eax
	pushl %eax
	pushl $MM_QMachine+1588
	call QMachine__NewBuiltin
	movl %eax,MM_QMachine+304
	pushl $0
	pushl $-1
	movl MM_QMachine+388,%eax
	pushl %eax
	pushl $MM_QMachine+1608
	call QMachine__NewBuiltin
	addl $32,%esp
	movl %eax,MM_QMachine+308
	pushl $1
	pushl $1
	movl MM_QMachine+392,%eax
	pushl %eax
	pushl $MM_QMachine+1628
	call QMachine__NewBuiltin
	movl %eax,MM_QMachine+312
	pushl $1
	pushl $-1
	movl MM_QMachine+396,%eax
	pushl %eax
	pushl $MM_QMachine+1648
	call QMachine__NewBuiltin
	addl $32,%esp
	movl %eax,MM_QMachine+316
	pushl $1
	pushl $0
	movl MM_QMachine+404,%eax
	pushl %eax
	pushl $MM_QMachine+1668
	call QMachine__NewBuiltin
	movl %eax,MM_QMachine+320
	pushl $1
	pushl $-1
	movl MM_QMachine+408,%eax
	pushl %eax
	pushl $MM_QMachine+1688
	call QMachine__NewBuiltin
	addl $32,%esp
	movl %eax,MM_QMachine+324
	pushl $0
	pushl $1
	movl MM_QMachine+412,%eax
	pushl %eax
	pushl $MM_QMachine+1708
	call QMachine__NewBuiltin
	movl %eax,MM_QMachine+328
	pushl $1
	pushl $2
	movl MM_QMachine+416,%eax
	pushl %eax
	pushl $MM_QMachine+1728
	call QMachine__NewBuiltin
	addl $32,%esp
	movl %eax,MM_QMachine+332
	pushl $1
	pushl $0
	movl MM_QMachine+420,%eax
	pushl %eax
	pushl $MM_QMachine+1752
	call QMachine__NewBuiltin
	movl %eax,MM_QMachine+336
	pushl $1
	pushl $2
	movl MM_QMachine+424,%eax
	pushl %eax
	pushl $MM_QMachine+1772
	call QMachine__NewBuiltin
	addl $32,%esp
	movl %eax,MM_QMachine+340
	pushl $1
	pushl $1
	movl MM_QMachine+428,%eax
	pushl %eax
	pushl $MM_QMachine+1792
	call QMachine__NewBuiltin
	movl %eax,MM_QMachine+344
	pushl $0
	pushl $-1
	movl MM_QMachine+432,%eax
	pushl %eax
	pushl $MM_QMachine+1816
	call QMachine__NewBuiltin
	addl $32,%esp
	movl %eax,MM_QMachine+348
	pushl $0
	pushl $0
	movl MM_QMachine+436,%eax
	pushl %eax
	pushl $MM_QMachine+1836
	call QMachine__NewBuiltin
	movl %eax,MM_QMachine+352
	pushl $1
	pushl $2
	movl MM_QMachine+440,%eax
	pushl %eax
	pushl $MM_QMachine+1860
	call QMachine__NewBuiltin
	movl %eax,MM_QMachine+356
.L390:
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe37:
	.size	 QMachine__InitBuiltins,.Lfe37-QMachine__InitBuiltins
	.align 16
	.type	 QMachine__NewBuiltin,@function
QMachine__NewBuiltin:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 16(%ebp),%esi
	movb 20(%ebp),%bl
	pushl $0
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	movl MM_QMachine+1876,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %edi,8(%eax)
	movb %bl,17(%eax)
	movl %esi,12(%eax)
	movb $1,16(%eax)
	movl %eax,%esi
	addl $12,%esp
	cmpl $0,12(%ebp)
	je .L393
	movl 12(%ebp),%ecx
	cmpl $-1,(%ecx)
	jne .L393
	pushl $14501
	call _m3_fault
	.align 16
.L393:
	movl 12(%ebp),%ecx
	movl %ecx,20(%esi)
	movl %eax,%ebx
	movl MM_QMachine+584,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl %ebx,(%esi)
	movl $0,4(%esi)
	movl MM_QMachine+1148,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	addl $8,%esp
	testl %ebx,%ebx
	jne .L395
	pushl $14548
	call _m3_fault
	.align 16
.L395:
	movl 8(%ebx),%eax
	movl %eax,8(%edx)
	movb $1,4(%edx)
	testl %edx,%edx
	jne .L396
	pushl $14580
	call _m3_fault
	.align 16
.L396:
	movb $5,12(%edx)
	movl $0,16(%edx)
	movl %esi,20(%edx)
	leal -12(%ebp),%esp
	movl %edx,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe38:
	.size	 QMachine__NewBuiltin,.Lfe38-QMachine__NewBuiltin
	.align 16
	.type	 M_QMachine_LINE_956.1,@function
M_QMachine_LINE_956.1:
	pushl %ebp
	movl %esp,%ebp
	movl %ecx,-4(%ebp)
	movl -4(%ebp),%eax
	subl $4,%esp
	movl -224(%eax),%eax
	pushl %eax
	movl MI_Wr+84,%eax
	call *%eax
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe39:
	.size	 M_QMachine_LINE_956.1,.Lfe39-M_QMachine_LINE_956.1
	.align 16
	.type	 QMachine__DoArgList,@function
QMachine__DoArgList:
	pushl %ebp
	movl %esp,%ebp
	subl $236,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-236(%ebp)
	movl -236(%ebp),%edx
	movl %edx,-24(%ebp)
	movl %edx,-20(%ebp)
	movl %edx,-16(%ebp)
	movl %edx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %edx,-4(%ebp)
	movl %edx,-228(%ebp)
	movl %edx,-224(%ebp)
	cmpl $2,12(%ebp)
	je .L400
	pushl $14864
	call _m3_fault
	.align 16
.L400:
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__GetBuf
	movl %eax,%ebx
	leal -12(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	pushl %esi
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+76,%eax
	call *%eax
	pushl %ebx
	movl MI_M3Buf+72,%eax
	call *%eax
	movl %eax,%edi
	pushl %edi
	call QMachine__SplitArgs
	addl $32,%esp
	movl %eax,-232(%ebp)
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__FreeBuf
	leal -24(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl -232(%ebp),%edx
	movl %eax,-236(%ebp)
	movl (%edx),%eax
	movl 32(%eax),%eax
	pushl %edx
	call *%eax
	addl $28,%esp
	cmpl $10,%eax
	jg .L402
	pushl %edi
	movl MI_Text+56,%eax
	call *%eax
	addl $4,%esp
	cmpl $1024,%eax
	jg .L402
	pushl %esi
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Push
	jmp .L399
	.align 16
.L402:
	movl $MM_QMachine+1884,-196(%ebp)
	movl $0,-200(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-204(%ebp)
	leal -204(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -184(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L403
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__UniqueTempFile
	movl %eax,-228(%ebp)
	pushl %eax
	movl MI_FileWr+148,%eax
	call *%eax
	movl %eax,-224(%ebp)
	movl $M_QMachine_LINE_956.1,-212(%ebp)
	movl %ebp,-208(%ebp)
	addl $8,%esp
.L404:
	movl $3,-216(%ebp)
	movl RTThread__handlerStack,%eax
	leal -220(%ebp),%edx
	movl %edx,RTThread__handlerStack
	movl -232(%ebp),%edx
	movl %eax,-220(%ebp)
	movl (%edx),%eax
	movl 32(%eax),%eax
	pushl %edx
	call *%eax
	xorl %ebx,%ebx
	leal -1(%eax),%esi
	addl $4,%esp
	jmp .L405
	.align 16
.L406:
	movl -232(%ebp),%edx
	movl (%edx),%eax
	movl 44(%eax),%eax
	pushl %ebx
	pushl %edx
	call *%eax
	pushl %eax
	movl -224(%ebp),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	movl MI_Wr+60,%eax
	pushl %eax
	movl -224(%ebp),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	incl %ebx
	addl $24,%esp
.L405:
	cmpl %esi,%ebx
	jle .L406
	movl -220(%ebp),%eax
	movl %eax,RTThread__handlerStack
	movl %ebp,%ecx
	call M_QMachine_LINE_956.1
.L408:
	movl -228(%ebp),%edx
	pushl %edx
	movl -236(%ebp),%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call QMachRep__PushString
	movl -204(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L399
	.align 16
.L403:
	movl -192(%ebp),%eax
	cmpl $MI_Thread+184,%eax
	jne .L411
	pushl $MM_QMachine+1904
	jmp .L414
	.align 16
.L411:
	movl -188(%ebp),%ebx
	movl -228(%ebp),%edx
	pushl %edx
	pushl $MM_QMachine+1928
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_QMachine+644
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl %ebx
	call QMachine__OSErr
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
.L414:
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Err
.L399:
	leal -248(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe40:
	.size	 QMachine__DoArgList,.Lfe40-QMachine__DoArgList
	.align 16
	.type	 QMachine__DoCopyIfNew,@function
QMachine__DoCopyIfNew:
	pushl %ebp
	movl %esp,%ebp
	subl $384,%esp
	pushl %esi
	pushl %ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movb $0,-376(%ebp)
	cmpl $2,12(%ebp)
	je .L416
	pushl $15584
	call _m3_fault
	.align 16
.L416:
	leal -12(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-380(%ebp)
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-384(%ebp)
	addl $32,%esp
	movl -380(%ebp),%edx
	pushl %edx
	movl MI_M3File+60,%eax
	call *%eax
	addl $4,%esp
	testl %eax,%eax
	je .L418
	pushl %esi
	movl MI_Pathname+88,%eax
	call *%eax
	pushl $0
	movl %eax,%esi
	pushl %esi
	movl -380(%ebp),%edx
	pushl %edx
	movl MI_Pathname+96,%eax
	call *%eax
	movl %eax,-380(%ebp)
	addl $16,%esp
.L418:
	movl $MM_QMachine+1300,-184(%ebp)
	movl $0,-188(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-192(%ebp)
	leal -192(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -172(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L422
	movl -380(%ebp),%edx
	pushl %edx
	movl -384(%ebp),%edx
	pushl %edx
	movl MI_M3File+56,%eax
	call *%eax
	movb %al,-376(%ebp)
	movl -192(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $8,%esp
.L419:
.L422:
	movl $MM_QMachine+1300,-364(%ebp)
	movl $0,-368(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-372(%ebp)
	leal -372(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -352(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L423
	cmpb $0,-376(%ebp)
	jne .L424
	movl -380(%ebp),%edx
	pushl %edx
	movl -384(%ebp),%edx
	pushl %edx
	movl MI_M3File+48,%eax
	call *%eax
.L424:
	movl -372(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L415
	.align 16
.L423:
	movl -356(%ebp),%ebx
	movl -384(%ebp),%edx
	pushl %edx
	pushl $MM_QMachine+1964
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_QMachine+1996
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl -380(%ebp),%edx
	pushl %edx
	movl %eax,%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_QMachine+644
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%esi
	pushl %ebx
	call QMachine__OSErr
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Err
.L415:
	leal -392(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe41:
	.size	 QMachine__DoCopyIfNew,.Lfe41-QMachine__DoCopyIfNew
	.align 16
	.type	 QMachine__DoDefined,@function
QMachine__DoDefined:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L428
	pushl $15920
	call _m3_fault
	.align 16
.L428:
	leal -12(%ebp),%ebx
	pushl %ebx
	pushl %esi
	call QMachine__Pop
	pushl %ebx
	pushl %esi
	movl MI_QVal+60,%eax
	call *%eax
	pushl %eax
	pushl %esi
	call QMachine__LookUp
	addl $24,%esp
	testl %eax,%eax
	setne %al
	andl $255,%eax
	pushl %eax
	pushl %esi
	call QMachine__PushBool
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe42:
	.size	 QMachine__DoDefined,.Lfe42-QMachine__DoDefined
	.align 16
	.type	 QMachine__DoEmpty,@function
QMachine__DoEmpty:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	xorb %bl,%bl
	cmpl $1,12(%ebp)
	je .L430
	pushl $16048
	call _m3_fault
	.align 16
.L430:
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	call QMachine__Pop
	xorl %eax,%eax
	movb -12(%ebp),%al
	addl $8,%esp
	testl %eax,%eax
	jle .L431
	cmpl $1,%eax
	jle .L436
	cmpl $2,%eax
	jle .L433
	cmpl $3,%eax
	jle .L434
	cmpl $4,%eax
	jle .L435
	jmp .L431
	.align 16
.L433:
	movl MI_QValue+356,%eax
	cmpl %eax,-8(%ebp)
	sete %bl
	jmp .L436
	.align 16
.L435:
	movl -4(%ebp),%eax
	testl %eax,%eax
	je .L437
	movl -4(%eax),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_QMachine+572
	jg .L438
	movl MM_QMachine+568,%eax
	cmpl %edx,4(%eax)
	jge .L437
.L438:
	pushl $16133
	call _m3_fault
	.align 16
.L437:
	movl -4(%ebp),%edx
	movl (%edx),%eax
	movl 32(%eax),%eax
	jmp .L441
	.align 16
.L434:
	movl -4(%ebp),%eax
	testl %eax,%eax
	je .L439
	movl -4(%eax),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_QMachine+1444
	jg .L440
	movl MM_QMachine+1440,%eax
	cmpl %edx,4(%eax)
	jge .L439
.L440:
	pushl $16149
	call _m3_fault
	.align 16
.L439:
	movl -4(%ebp),%edx
	movl (%edx),%eax
	movl 16(%eax),%eax
.L441:
	pushl %edx
	call *%eax
	addl $4,%esp
	testl %eax,%eax
	sete %bl
	jmp .L436
	.align 16
.L431:
	pushl $MM_QMachine+2016
	pushl %esi
	call QMachine__Err
	addl $8,%esp
.L436:
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	pushl %esi
	call QMachine__PushBool
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe43:
	.size	 QMachine__DoEmpty,.Lfe43-QMachine__DoEmpty
	.align 16
	.type	 QMachine__DoEqual,@function
QMachine__DoEqual:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	xorb %bl,%bl
	cmpl $2,12(%ebp)
	je .L443
	pushl $16304
	call _m3_fault
	.align 16
.L443:
	leal -24(%ebp),%eax
	pushl %eax
	pushl %esi
	call QMachine__Pop
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	call QMachine__Pop
	xorl %edx,%edx
	movb -24(%ebp),%dl
	xorl %eax,%eax
	movb -12(%ebp),%al
	addl $16,%esp
	cmpl %eax,%edx
	jne .L444
	testl %edx,%edx
	jle .L445
	cmpl $1,%edx
	jle .L446
	cmpl $2,%edx
	jle .L447
	cmpl $3,%edx
	jle .L450
	cmpl $4,%edx
	jle .L449
	cmpl $5,%edx
	jle .L450
.L445:
	xorl %edx,%edx
	movl -8(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jne .L451
	movl -4(%ebp),%eax
	cmpl %eax,-16(%ebp)
	sete %al
	xorl %edx,%edx
	movb %al,%dl
.L451:
	movb %dl,%bl
	jmp .L444
	.align 16
.L446:
.L447:
	movl -8(%ebp),%eax
	cmpl %eax,-20(%ebp)
	sete %bl
	jmp .L444
	.align 16
.L449:
.L450:
	movl -4(%ebp),%eax
	cmpl %eax,-16(%ebp)
	sete %bl
.L444:
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	pushl %esi
	call QMachine__PushBool
	leal -32(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe44:
	.size	 QMachine__DoEqual,.Lfe44-QMachine__DoEqual
	.align 16
	.type	 QMachine__DoError,@function
QMachine__DoError:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	pushl %esi
	call QMachine__GetBuf
	movl %eax,%edx
	movl %edx,-4(%ebp)
	addl $4,%esp
	cmpl $0,12(%ebp)
	jg .L455
	pushl $16608
	call _m3_fault
	.align 16
.L455:
	movl 16(%esi),%eax
	movl %eax,%ebx
	subl 12(%ebp),%ebx
	decl %eax
	movl %eax,-8(%ebp)
	jmp .L456
	.align 16
.L457:
	movl 52(%esi),%eax
	testl %eax,%eax
	jne .L458
	pushl $16644
	call _m3_fault
	.align 16
.L458:
	movl %eax,%edx
	cmpl %ebx,4(%edx)
	ja .L459
	pushl $16642
	call _m3_fault
	.align 16
.L459:
	movl -4(%ebp),%ecx
	pushl %ecx
	leal (%ebx,%ebx,2),%eax
	leal 0(,%eax,4),%edi
	movl (%edx),%eax
	addl %edi,%eax
	pushl %eax
	pushl %esi
	movl MI_QVal+76,%eax
	call *%eax
	movl 52(%esi),%eax
	addl $12,%esp
	testl %eax,%eax
	jne .L460
	pushl $16660
	call _m3_fault
	.align 16
.L460:
	movl %eax,%edx
	cmpl %ebx,4(%edx)
	ja .L461
	pushl $16658
	call _m3_fault
	.align 16
.L461:
	movl (%edx),%eax
	addl %edi,%eax
	incl %ebx
	movl $0,8(%eax)
.L456:
	cmpl %ebx,-8(%ebp)
	jge .L457
	movl 12(%ebp),%ecx
	subl %ecx,16(%esi)
	movl -4(%ebp),%ecx
	pushl %ecx
	movl MI_M3Buf+72,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl %esi
	call QMachine__Err
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe45:
	.size	 QMachine__DoError,.Lfe45-QMachine__DoError
	.align 16
	.type	 QMachine__DoEscape,@function
QMachine__DoEscape:
	pushl %ebp
	movl %esp,%ebp
	subl $436,%esp
	pushl %edi
	pushl %esi
	xorl %edi,%edi
	pushl %ebx
	movl $0,-412(%ebp)
	movl $0,-408(%ebp)
	movl $0,-404(%ebp)
	movb $0,-424(%ebp)
	cmpl $1,12(%ebp)
	je .L464
	pushl $16944
	call _m3_fault
	.align 16
.L464:
	leal -412(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-428(%ebp)
	pushl %eax
	movl MI_Text+56,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,%eax
	addl %ebx,%eax
	addl $20,%esp
	cmpl $200,%eax
	jg .L465
	leal -200(%ebp),%edx
	movl %edx,-420(%ebp)
	movl $200,-416(%ebp)
	movl -428(%ebp),%edx
	pushl %edx
	leal -420(%ebp),%eax
	pushl %eax
	movl MI_Text+68,%eax
	movl %edi,%esi
	call *%eax
	decl %ebx
	movl %ebx,-432(%ebp)
	addl $8,%esp
	jmp .L466
	.align 16
.L467:
	pushl %edi
	movl -428(%ebp),%edx
	pushl %edx
	movl MI_Text+52,%eax
	call *%eax
	movl %eax,%ebx
	movb %bl,%al
	addl $8,%esp
	cmpb $92,%al
	jne .L468
	cmpl $199,%esi
	jbe .L469
	pushl $17089
	call _m3_fault
	.align 16
.L469:
	movb %al,-400(%esi,%ebp)
	incl %esi
	movb $1,-424(%ebp)
.L468:
	cmpl $199,%esi
	jbe .L470
	pushl $17137
	call _m3_fault
	.align 16
.L470:
	movb %al,-400(%esi,%ebp)
	incl %esi
	incl %edi
.L466:
	cmpl %edi,-432(%ebp)
	jge .L467
	cmpb $0,-424(%ebp)
	je .L481
	testl %esi,%esi
	jge .L473
	pushl $17185
	call _m3_fault
	.align 16
.L473:
	cmpl $200,%esi
	jle .L474
	pushl $17185
	call _m3_fault
	.align 16
.L474:
	movl %esi,-416(%ebp)
	leal -400(%ebp),%edx
	movl %edx,-420(%ebp)
	leal -420(%ebp),%eax
	pushl %eax
	movl MI_Text+76,%eax
	call *%eax
	pushl %eax
	jmp .L483
	.align 16
.L465:
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__GetBuf
	movl %eax,%edi
	xorl %esi,%esi
	decl %ebx
	movl %ebx,-436(%ebp)
	addl $4,%esp
	jmp .L477
	.align 16
.L478:
	pushl %esi
	movl -428(%ebp),%edx
	pushl %edx
	movl MI_Text+52,%eax
	call *%eax
	movl %eax,%ebx
	movb %bl,%al
	xorl %ebx,%ebx
	movb %al,%bl
	addl $8,%esp
	cmpl $92,%ebx
	jne .L479
	pushl %ebx
	pushl %edi
	movl MI_M3Buf+48,%eax
	call *%eax
	movb $1,-424(%ebp)
	addl $8,%esp
.L479:
	pushl %ebx
	pushl %edi
	movl MI_M3Buf+48,%eax
	call *%eax
	incl %esi
	addl $8,%esp
.L477:
	cmpl %esi,-436(%ebp)
	jge .L478
	pushl %edi
	movl MI_M3Buf+72,%eax
	call *%eax
	movl %eax,-428(%ebp)
	pushl %edi
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__FreeBuf
	addl $12,%esp
	cmpb $0,-424(%ebp)
	je .L481
	movl -428(%ebp),%edx
	pushl %edx
.L483:
	movl 8(%ebp),%edx
	pushl %edx
	call QMachRep__PushString
	jmp .L463
	.align 16
.L481:
	leal -412(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Push
.L463:
	leal -448(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe46:
	.size	 QMachine__DoEscape,.Lfe46-QMachine__DoEscape
	.align 16
	.type	 QMachine__DoExec,@function
QMachine__DoExec:
	pushl %ebp
	movl %esp,%ebp
	subl $104,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl $0,-88(%ebp)
	movl -88(%ebp),%edx
	movl %edx,-80(%ebp)
	movl %edx,-76(%ebp)
	movl %edx,-72(%ebp)
	movl %edx,-68(%ebp)
	movl %edx,-64(%ebp)
	testl %ebx,%ebx
	jg .L485
	pushl $MM_QMachine+2080
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $8,%esp
.L485:
	cmpl $1,%ebx
	jle .L486
	cmpl $2,%ebx
	jle .L487
	cmpl $4,%ebx
	jne .L488
	leal -12(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%edi
	movl (%edi),%eax
	movl 32(%eax),%eax
	pushl %edi
	call *%eax
	movl %eax,%esi
	addl $20,%esp
	testl %esi,%esi
	jle .L496
	leal -60(%ebp),%eax
	leal -52(%ebp),%edx
	movl %edx,-60(%ebp)
	movl $1,-56(%ebp)
	movl %esi,-52(%ebp)
	pushl %eax
	movl MM_QMachine+2140,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,-76(%ebp)
	addl $8,%esp
	testl %eax,%eax
	jne .L490
	pushl $17956
	call _m3_fault
	.align 16
.L490:
	movl -76(%ebp),%ecx
	movl -88(%ebp),%esi
	movl 4(%ecx),%ecx
	decl %ecx
	movl %ecx,-92(%ebp)
	jmp .L491
	.align 16
.L492:
	movl (%edi),%eax
	leal -60(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl %esi
	pushl %edi
	call *%eax
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $20,%esp
	cmpl $0,-76(%ebp)
	jne .L493
	pushl $17972
	call _m3_fault
	.align 16
.L493:
	movl -76(%ebp),%ecx
	cmpl %esi,4(%ecx)
	ja .L494
	pushl $17970
	call _m3_fault
	.align 16
.L494:
	movl -76(%ebp),%edx
	movl (%edx),%eax
	movl %ebx,(%eax,%esi,4)
	incl %esi
.L491:
	cmpl %esi,-92(%ebp)
	jge .L492
	jmp .L496
	.align 16
.L488:
	cmpl $4,%ebx
	jle .L496
	pushl $MM_QMachine+2152
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $8,%esp
.L496:
	leal -24(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-80(%ebp)
	addl $16,%esp
.L487:
	leal -36(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%edi
	movl (%edi),%eax
	movl 32(%eax),%eax
	pushl %edi
	call *%eax
	movl %eax,%esi
	addl $20,%esp
	testl %esi,%esi
	jle .L498
	movl (%edi),%eax
	leal -60(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl $0
	pushl %edi
	call *%eax
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-72(%ebp)
	pushl $MM_QMachine+1288
	movl -72(%ebp),%ecx
	pushl %ecx
	movl MI_Text+48,%eax
	call *%eax
	addl $28,%esp
	testl %eax,%eax
	je .L498
	movl $0,-72(%ebp)
.L498:
	cmpl $1,%esi
	jle .L500
	movl (%edi),%eax
	leal -60(%ebp),%ebx
	movl 44(%eax),%eax
	movl %eax,-104(%ebp)
	pushl %ebx
	pushl $1
	pushl %edi
	movl -104(%ebp),%edx
	call *%edx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-68(%ebp)
	pushl $MM_QMachine+1288
	movl -68(%ebp),%edx
	pushl %edx
	movl MI_Text+48,%eax
	call *%eax
	addl $28,%esp
	testl %eax,%eax
	je .L500
	movl $0,-68(%ebp)
.L500:
	cmpl $2,%esi
	jle .L502
	movl (%edi),%eax
	leal -60(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl $2
	pushl %edi
	call *%eax
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-64(%ebp)
	pushl $MM_QMachine+1288
	movl -64(%ebp),%edx
	pushl %edx
	movl MI_Text+48,%eax
	call *%eax
	addl $28,%esp
	testl %eax,%eax
	je .L502
	movl $0,-64(%ebp)
.L502:
	cmpl $3,%esi
	jle .L486
	pushl $MM_QMachine+2212
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $8,%esp
.L486:
	leal -48(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,-104(%ebp)
	movl -104(%ebp),%edi
	movl (%edi),%eax
	movl 32(%eax),%eax
	movl %eax,-104(%ebp)
	pushl %edi
	movl -104(%ebp),%edx
	call *%edx
	movl %eax,%esi
	addl $20,%esp
	testl %esi,%esi
	jg .L505
	pushl $MM_QMachine+2296
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $8,%esp
.L505:
	movl (%edi),%eax
	leal -60(%ebp),%ebx
	movl 44(%eax),%eax
	movl %eax,-104(%ebp)
	pushl %ebx
	pushl $0
	pushl %edi
	movl -104(%ebp),%edx
	call *%edx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-88(%ebp)
	leal -52(%ebp),%edx
	movl %edx,-60(%ebp)
	movl $1,-56(%ebp)
	decl %esi
	movl %esi,-52(%ebp)
	pushl %ebx
	movl MM_QMachine+2140,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,-84(%ebp)
	addl $28,%esp
	testl %eax,%eax
	jne .L506
	pushl $18548
	call _m3_fault
	.align 16
.L506:
	movl -84(%ebp),%ecx
	xorl %esi,%esi
	movl 4(%ecx),%ecx
	decl %ecx
	movl %ecx,-96(%ebp)
	jmp .L507
	.align 16
.L508:
	movl (%edi),%eax
	leal -60(%ebp),%ebx
	leal 1(%esi),%edx
	movl 44(%eax),%eax
	pushl %ebx
	movl %edx,-100(%ebp)
	pushl %edx
	pushl %edi
	call *%eax
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-104(%ebp)
	addl $20,%esp
	cmpl $0,-84(%ebp)
	jne .L509
	pushl $18564
	call _m3_fault
	.align 16
.L509:
	movl -84(%ebp),%edx
	cmpl %esi,4(%edx)
	ja .L510
	pushl $18562
	call _m3_fault
	.align 16
.L510:
	movl -84(%ebp),%ecx
	movl (%ecx),%eax
	movl -104(%ebp),%edx
	movl %edx,(%eax,%esi,4)
	movl -100(%ebp),%esi
.L507:
	cmpl %esi,-96(%ebp)
	jge .L508
	movl -76(%ebp),%ecx
	pushl %ecx
	movl -80(%ebp),%edx
	pushl %edx
	movl -64(%ebp),%ecx
	pushl %ecx
	movl -68(%ebp),%edx
	pushl %edx
	movl -72(%ebp),%ecx
	pushl %ecx
	movl -84(%ebp),%edx
	pushl %edx
	movl -88(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Exec
	movb $1,-48(%ebp)
	movl %eax,-44(%ebp)
	movl $0,-40(%ebp)
	addl $32,%esp
	leal -48(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Push
	leal -116(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe47:
	.size	 QMachine__DoExec,.Lfe47-QMachine__DoExec
	.align 16
	.type	 QMachine__Exec,@function
QMachine__Exec:
	pushl %ebp
	movl %esp,%ebp
	subl $4328,%esp
	pushl %edi
	pushl %esi
	xorl %edi,%edi
	pushl %ebx
	movl %edi,-4328(%ebp)
	movl %edi,-4112(%ebp)
	movl -4328(%ebp),%ecx
	movl %ecx,-4108(%ebp)
	movb $0,-4320(%ebp)
	movb -4320(%ebp),%cl
	movb %cl,-4324(%ebp)
	movb %cl,-4316(%ebp)
	movl $-1,-4312(%ebp)
	movl -4328(%ebp),%ecx
	movl %ecx,-8(%ebp)
	movl %ecx,-4(%ebp)
.L513:
	movl $MM_QMachine+2376,-4284(%ebp)
	movl $0,-4288(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-4292(%ebp)
	leal -4292(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -4272(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L514
	cmpl $0,20(%ebp)
	je .L515
	pushl $1
	pushl %ebx
	pushl %ebx
	pushl $1
	movl 20(%ebp),%ecx
	pushl %ecx
	movl MI_FS+48,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-4328(%ebp)
	movb $1,-4324(%ebp)
	addl $20,%esp
.L515:
	cmpl $0,24(%ebp)
	je .L516
	movl 24(%ebp),%ecx
	pushl %ecx
	movl MI_Text+56,%eax
	call *%eax
	addl $4,%esp
	cmpl $1,%eax
	jle .L517
	pushl %ebx
	movl 24(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	addl $8,%esp
	cmpl $62,%eax
	jne .L517
	pushl $1
	movl 24(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	addl $8,%esp
	cmpl $62,%eax
	jne .L517
	pushl $2147483647
	pushl $2
	movl 24(%ebp),%ecx
	pushl %ecx
	movl MI_Text+64,%eax
	call *%eax
	pushl $2
	pushl %ebx
	pushl $1
	pushl %ebx
	movl %eax,%esi
	pushl %esi
	movl MI_FS+48,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,-4112(%ebp)
	addl $32,%esp
	testl %ebx,%ebx
	je .L518
	movl -4(%ebx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_QMachine+2400
	jg .L519
	movl MM_QMachine+2396,%eax
	cmpl %edx,4(%eax)
	jge .L518
.L519:
	pushl $19157
	call _m3_fault
	.align 16
.L518:
	movl -4112(%ebp),%edx
	movl (%edx),%eax
	movl 20(%eax),%ebx
	pushl $0
	pushl $2
	pushl %edx
	call *%ebx
	addl $12,%esp
	jmp .L520
	.align 16
.L517:
	pushl $2
	pushl $0
	pushl $1
	pushl $1
	movl 24(%ebp),%ecx
	pushl %ecx
	movl MI_FS+48,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,-4112(%ebp)
	addl $20,%esp
.L520:
	movb $1,-4320(%ebp)
.L516:
	cmpl $0,28(%ebp)
	je .L521
	movl 28(%ebp),%ecx
	pushl %ecx
	movl MI_Text+56,%eax
	call *%eax
	addl $4,%esp
	cmpl $1,%eax
	jle .L522
	pushl $0
	movl 28(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	addl $8,%esp
	cmpl $62,%eax
	jne .L522
	pushl $1
	movl 28(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	addl $8,%esp
	cmpl $62,%eax
	jne .L522
	pushl $2147483647
	pushl $2
	movl 28(%ebp),%ecx
	pushl %ecx
	movl MI_Text+64,%eax
	call *%eax
	pushl $2
	pushl $0
	pushl $1
	pushl $0
	movl %eax,%ebx
	pushl %ebx
	movl MI_FS+48,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-4108(%ebp)
	addl $32,%esp
	testl %esi,%esi
	je .L523
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_QMachine+2400
	jg .L524
	movl MM_QMachine+2396,%eax
	cmpl %edx,4(%eax)
	jge .L523
.L524:
	pushl $19349
	call _m3_fault
	.align 16
.L523:
	movl -4108(%ebp),%edx
	movl (%edx),%eax
	movl 20(%eax),%esi
	pushl $0
	pushl $2
	pushl %edx
	call *%esi
	addl $12,%esp
	jmp .L525
	.align 16
.L522:
	pushl $2
	pushl $0
	pushl $1
	pushl $1
	movl 28(%ebp),%ecx
	pushl %ecx
	movl MI_FS+48,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-4108(%ebp)
	addl $20,%esp
.L525:
	movb $1,-4316(%ebp)
.L521:
	movl -4112(%ebp),%edx
	testl %edx,%edx
	je .L526
	cmpl $0,-4108(%ebp)
	jne .L527
.L526:
	movl 8(%ebp),%ecx
	movl MI_Stdio+48,%eax
	cmpl %eax,136(%ecx)
	jne .L528
	movl $0,-4296(%ebp)
	testl %edx,%edx
	jne .L529
	leal -4296(%ebp),%eax
	pushl %eax
	leal -4112(%ebp),%edx
	pushl %edx
	pushl %eax
	movl MI_Process+176,%eax
	call *%eax
	addl $12,%esp
.L529:
	cmpl $0,-4108(%ebp)
	jne .L527
	leal -4108(%ebp),%eax
	pushl %eax
	leal -4296(%ebp),%eax
	pushl %eax
	pushl %eax
	movl MI_Process+176,%eax
	call *%eax
	addl $12,%esp
	jmp .L527
	.align 16
.L528:
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	movl MI_Pipe+48,%eax
	call *%eax
	addl $8,%esp
	cmpl $0,-4112(%ebp)
	jne .L532
	movl -8(%ebp),%eax
	movl %eax,-4112(%ebp)
	movb $1,-4320(%ebp)
.L532:
	cmpl $0,-4108(%ebp)
	jne .L527
	movl -8(%ebp),%eax
	movl %eax,-4108(%ebp)
	movb $1,-4316(%ebp)
.L527:
	cmpl $0,16(%ebp)
	jne .L534
	pushl $19924
	call _m3_fault
	.align 16
.L534:
	movl -4108(%ebp),%eax
	pushl %eax
	movl -4112(%ebp),%eax
	pushl %eax
	movl -4328(%ebp),%ecx
	pushl %ecx
	movl 32(%ebp),%ecx
	pushl %ecx
	movl 36(%ebp),%ecx
	pushl %ecx
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_Process+44,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,%edi
	addl $28,%esp
	cmpb $0,-4324(%ebp)
	je .L535
	movl -4328(%ebp),%ecx
	movl (%ecx),%eax
	movl 16(%eax),%esi
	pushl %ecx
	call *%esi
	addl $4,%esp
.L535:
	cmpb $0,-4320(%ebp)
	je .L536
	movl -4112(%ebp),%edx
	movl (%edx),%eax
	movl 16(%eax),%esi
	pushl %edx
	call *%esi
	addl $4,%esp
.L536:
	cmpb $0,-4316(%ebp)
	je .L537
	movl -4108(%ebp),%edx
	cmpl %edx,-4112(%ebp)
	je .L537
	movl (%edx),%eax
	movl 16(%eax),%esi
	pushl %edx
	call *%esi
	addl $4,%esp
.L537:
	cmpl $0,-4(%ebp)
	je .L538
	movl MM_QMachine+2404,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl (%esi),%eax
	movl 20(%eax),%ebx
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl %eax,-4308(%ebp)
	addl $12,%esp
.L539:
	leal -4104(%ebp),%ebx
	movl %ebx,-4304(%ebp)
	movl $4096,-4300(%ebp)
	leal -4304(%ebp),%esi
	pushl %esi
	movl -4308(%ebp),%ecx
	pushl %ecx
	movl MI_Rd+96,%eax
	call *%eax
	addl $8,%esp
	cmpl $4096,%eax
	jne .L540
	movl %ebx,-4304(%ebp)
	movl %eax,-4300(%ebp)
	pushl %esi
	movl 8(%ebp),%ecx
	movl 136(%ecx),%eax
	pushl %eax
	movl MI_Wr+72,%eax
	call *%eax
	addl $8,%esp
	jmp .L539
	.align 16
.L540:
	testl %eax,%eax
	jge .L542
	pushl $20209
	call _m3_fault
	.align 16
.L542:
	cmpl $4096,%eax
	jle .L543
	pushl $20209
	call _m3_fault
	.align 16
.L543:
	movl %eax,-4300(%ebp)
	movl %ebx,-4304(%ebp)
	pushl %esi
	movl 8(%ebp),%ecx
	movl 136(%ecx),%eax
	pushl %eax
	movl MI_Wr+72,%eax
	call *%eax
	addl $8,%esp
	movl -4308(%ebp),%ecx
	pushl %ecx
	movl MI_Rd+116,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl 136(%ecx),%eax
	pushl %eax
	movl MI_Wr+80,%eax
	call *%eax
	addl $8,%esp
.L538:
	pushl %edi
	movl MI_Process+152,%eax
	call *%eax
	movl %eax,-4312(%ebp)
	movl -4292(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L545
	.align 16
.L514:
	cmpl $MI_OSError+44,-4280(%ebp)
	jne .L545
	movl -4276(%ebp),%eax
	pushl %eax
	call QMachine__OSErr
	pushl %eax
	pushl $MM_QMachine+2416
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_QMachine+2440
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl %eax,%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
.L545:
	leal -4340(%ebp),%esp
	movl -4312(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe48:
	.size	 QMachine__Exec,.Lfe48-QMachine__Exec
	.align 16
	.type	 QMachine__DoFile,@function
QMachine__DoFile:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 68(%ebx),%ecx
	testl %ecx,%ecx
	jne .L549
	pushl $20500
	call _m3_fault
	.align 16
.L549:
	movl 36(%ebx),%edx
	leal -1(%edx),%eax
	cmpl %eax,4(%ecx)
	ja .L550
	pushl $20498
	call _m3_fault
	.align 16
.L550:
	leal (%edx,%edx,2),%eax
	sall $2,%eax
	addl (%ecx),%eax
	movl -12(%eax),%eax
	movl 12(%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	addl $4,%esp
	cmpl $0,12(%ebp)
	je .L551
	pushl $20528
	call _m3_fault
	.align 16
.L551:
	pushl %eax
	pushl %ebx
	call QMachRep__PushString
	movl -4(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe49:
	.size	 QMachine__DoFile,.Lfe49-QMachine__DoFile
	.align 16
	.type	 QMachine__DoFormat,@function
QMachine__DoFormat:
	pushl %ebp
	movl %esp,%ebp
	subl $32,%esp
	pushl %edi
	leal -24(%ebp),%eax
	pushl %esi
	leal -16(%ebp),%ecx
	pushl %ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl %ecx,-24(%ebp)
	movl $1,-20(%ebp)
	movl 12(%ebp),%ecx
	decl %ecx
	movl %ecx,-16(%ebp)
	pushl %eax
	movl MM_QMachine+2140,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,%edi
	addl $8,%esp
	cmpl $0,12(%ebp)
	jg .L553
	pushl $20704
	call _m3_fault
	.align 16
.L553:
	movl 8(%ebp),%ecx
	xorl %esi,%esi
	movl 16(%ecx),%edx
	movl %edx,%eax
	subl 12(%ebp),%eax
	leal 1(%eax),%ebx
	decl %edx
	movl %edx,-28(%ebp)
	jmp .L554
	.align 16
.L555:
	movl 8(%ebp),%ecx
	movl 52(%ecx),%eax
	testl %eax,%eax
	jne .L556
	pushl $20756
	call _m3_fault
	.align 16
.L556:
	movl %eax,%edx
	cmpl %ebx,4(%edx)
	ja .L557
	pushl $20754
	call _m3_fault
	.align 16
.L557:
	leal (%ebx,%ebx,2),%eax
	sall $2,%eax
	movl %eax,-32(%ebp)
	addl (%edx),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edx
	addl $8,%esp
	testl %edi,%edi
	jne .L558
	pushl $20756
	call _m3_fault
	.align 16
.L558:
	cmpl %esi,4(%edi)
	ja .L559
	pushl $20754
	call _m3_fault
	.align 16
.L559:
	movl (%edi),%eax
	movl %edx,(%eax,%esi,4)
	movl 8(%ebp),%ecx
	incl %esi
	movl 52(%ecx),%eax
	testl %eax,%eax
	jne .L560
	pushl $20772
	call _m3_fault
	.align 16
.L560:
	cmpl %ebx,4(%eax)
	ja .L561
	pushl $20770
	call _m3_fault
	.align 16
.L561:
	movl -32(%ebp),%ecx
	addl (%eax),%ecx
	movl %ecx,%eax
	incl %ebx
	movl $0,8(%eax)
.L554:
	cmpl %ebx,-28(%ebp)
	jge .L555
	movl 8(%ebp),%ecx
	leal -12(%ebp),%ebx
	movl 16(%ecx),%eax
	incl %eax
	subl 12(%ebp),%eax
	movl %eax,16(%ecx)
	pushl %ebx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edx
	addl $16,%esp
	testl %edi,%edi
	jne .L563
	pushl $20852
	call _m3_fault
	.align 16
.L563:
	pushl %edi
	pushl %edx
	movl MI_Fmt+80,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachRep__PushString
	leal -44(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe50:
	.size	 QMachine__DoFormat,.Lfe50-QMachine__DoFormat
	.align 16
	.type	 QMachine__DoInclude,@function
QMachine__DoInclude:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %esi
	xorl %eax,%eax
	pushl %ebx
	movl 8(%ebp),%esi
	movl %eax,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %eax,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L565
	pushl $20944
	call _m3_fault
	.align 16
.L565:
	leal -12(%ebp),%ebx
	pushl %ebx
	pushl %esi
	call QMachine__Pop
	pushl %ebx
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	pushl %eax
	pushl %esi
	call QMachRep__Include
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe51:
	.size	 QMachine__DoInclude,.Lfe51-QMachine__DoInclude
	.align 16
	.type	 QMachRep__Include,@function
QMachRep__Include:
	pushl %ebp
	movl %esp,%ebp
	subl $368,%esp
	pushl %ebx
	movl $0,-368(%ebp)
	movl 12(%ebp),%ebx
	pushl %ebx
	movl MI_Pathname+80,%eax
	call *%eax
	addl $4,%esp
	testl %eax,%eax
	jne .L574
	movl 8(%ebp),%ebx
	movl 68(%ebx),%eax
	testl %eax,%eax
	jne .L568
	pushl $21092
	call _m3_fault
	.align 16
.L568:
	movl 8(%ebp),%ebx
	movl %eax,%edx
	movl 36(%ebx),%ecx
	leal -1(%ecx),%eax
	cmpl %eax,4(%edx)
	ja .L569
	pushl $21090
	call _m3_fault
	.align 16
.L569:
	leal (%ecx,%ecx,2),%eax
	sall $2,%eax
	addl (%edx),%eax
	movl -12(%eax),%eax
	movl 12(%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	pushl %eax
	movl MI_Pathname+84,%eax
	call *%eax
	movl -368(%ebp),%ebx
	pushl %ebx
	movl 12(%ebp),%ebx
	pushl %ebx
	pushl %eax
	movl MI_Pathname+96,%eax
	call *%eax
	movl %eax,12(%ebp)
	addl $20,%esp
.L570:
	movl $MM_QMachine+2456,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%ebx
	movl %ebx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L571
	movl 12(%ebp),%ebx
	pushl %ebx
	movl MI_Pathname+72,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	call QMachRep__CanonicalizePath
	pushl %eax
	movl MI_Pathname+76,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,12(%ebp)
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $12,%esp
	jmp .L574
	.align 16
.L571:
	pushl $MM_QMachine+2468
	movl 8(%ebp),%ebx
	pushl %ebx
	call QMachine__Err
	addl $8,%esp
.L574:
	movl $MM_QMachine+2500,-352(%ebp)
	movl $0,-356(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-360(%ebp)
	leal -360(%ebp),%ebx
	movl %ebx,RTThread__handlerStack
	leal -340(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L575
	movl 12(%ebp),%ebx
	pushl %ebx
	movl MI_QCompiler+44,%eax
	call *%eax
	movl %eax,-368(%ebp)
	movl -360(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $4,%esp
	jmp .L576
	.align 16
.L575:
	movl -344(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ebx
	pushl %ebx
	call QMachine__Err
	addl $8,%esp
.L576:
	movl 8(%ebp),%ebx
	movl 64(%ebx),%eax
	testl %eax,%eax
	jne .L578
	pushl $21332
	call _m3_fault
	.align 16
.L578:
	movl 8(%ebp),%ebx
	movl %eax,%edx
	movl 28(%ebx),%eax
	decl %eax
	cmpl %eax,4(%edx)
	ja .L579
	pushl $21330
	call _m3_fault
	.align 16
.L579:
	leal (%eax,%eax,2),%eax
	sall $4,%eax
	addl (%edx),%eax
	movl %eax,-364(%ebp)
	addl $4,%eax
	pushl %eax
	movl -368(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ebx
	pushl %ebx
	call QMachine__PushInclude
	movl -364(%ebp),%eax
	movl 36(%eax),%eax
	movl %eax,36(%ebx)
	movl -372(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe52:
	.size	 QMachRep__Include,.Lfe52-QMachRep__Include
	.align 16
	.type	 QMachine__DoNormalize,@function
QMachine__DoNormalize:
	pushl %ebp
	movl %esp,%ebp
	subl $568,%esp
	pushl %ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl $0,-556(%ebp)
	movl -556(%ebp),%edx
	movl %edx,-560(%ebp)
	cmpl $2,12(%ebp)
	je .L581
	pushl $21520
	call _m3_fault
	.align 16
.L581:
	leal -12(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-568(%ebp)
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-564(%ebp)
	addl $32,%esp
.L582:
	movl $MM_QMachine+2456,-184(%ebp)
	movl $0,-188(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-192(%ebp)
	leal -192(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -172(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L583
	movl -568(%ebp),%edx
	pushl %edx
	movl MI_Pathname+72,%eax
	call *%eax
	movl %eax,-560(%ebp)
	movl -192(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $4,%esp
	jmp .L586
	.align 16
.L583:
	pushl $0
	pushl $0
	pushl $0
	pushl $0
	movl -568(%ebp),%edx
	pushl %edx
	pushl $MM_QMachine+2512
	movl MI_Fmt+76,%eax
	call *%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Err
	addl $32,%esp
.L586:
	movl $MM_QMachine+2456,-364(%ebp)
	movl $0,-368(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-372(%ebp)
	leal -372(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -352(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L587
	movl -564(%ebp),%edx
	pushl %edx
	movl MI_Pathname+72,%eax
	call *%eax
	movl %eax,-556(%ebp)
	movl -372(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $4,%esp
	jmp .L590
	.align 16
.L587:
	pushl $0
	pushl $0
	pushl $0
	pushl $0
	movl -564(%ebp),%edx
	pushl %edx
	pushl $MM_QMachine+2512
	movl MI_Fmt+76,%eax
	call *%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Err
	addl $32,%esp
.L590:
	movl $MM_QMachine+2456,-544(%ebp)
	movl $0,-548(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-552(%ebp)
	leal -552(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -532(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L591
	movl -560(%ebp),%edx
	pushl %edx
	call QMachRep__CanonicalizePath
	pushl %eax
	movl -556(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call QMachRep__StripPrefix
	pushl %eax
	movl MI_Pathname+76,%eax
	call *%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call QMachRep__PushString
	movl -552(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L580
	.align 16
.L591:
	pushl $MM_QMachine+2560
	movl 8(%ebp),%edx
	pushl %edx
	call QMachine__Err
.L580:
	movl -572(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe53:
	.size	 QMachine__DoNormalize,.Lfe53-QMachine__DoNormalize
	.align 16
	.type	 QMachine__DoPath,@function
QMachine__DoPath:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 68(%ebx),%ecx
	testl %ecx,%ecx
	jne .L595
	pushl $21924
	call _m3_fault
	.align 16
.L595:
	movl 36(%ebx),%edx
	leal -1(%edx),%eax
	cmpl %eax,4(%ecx)
	ja .L596
	pushl $21922
	call _m3_fault
	.align 16
.L596:
	leal (%edx,%edx,2),%eax
	sall $2,%eax
	addl (%ecx),%eax
	movl -12(%eax),%eax
	movl 12(%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	addl $4,%esp
	cmpl $0,12(%ebp)
	je .L597
	pushl $21952
	call _m3_fault
	.align 16
.L597:
	pushl %eax
	movl MI_Pathname+84,%eax
	call *%eax
	pushl %eax
	pushl %ebx
	call QMachRep__PushString
	movl -4(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe54:
	.size	 QMachine__DoPath,.Lfe54-QMachine__DoPath
	.align 16
	.type	 QMachine__DoStale,@function
QMachine__DoStale:
	pushl %ebp
	movl %esp,%ebp
	subl $256,%esp
	pushl %edi
	pushl %esi
	xorl %edx,%edx
	pushl %ebx
	movl $0,-56(%ebp)
	movl $0,-52(%ebp)
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl %edx,-32(%ebp)
	movl %edx,-28(%ebp)
	movl %edx,-24(%ebp)
	movl %edx,-20(%ebp)
	movl %edx,-16(%ebp)
	movl %edx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %edx,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L599
	pushl $22160
	call _m3_fault
	.align 16
.L599:
	leal -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	leal -56(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-252(%ebp)
	addl $24,%esp
.L600:
	movl $MM_QMachine+1300,-228(%ebp)
	movl $0,-232(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-236(%ebp)
	leal -236(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -216(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L601
	leal -32(%ebp),%eax
	pushl %eax
	movl -252(%ebp),%ecx
	pushl %ecx
	movl MI_FS+184,%eax
	call *%eax
	addl $8,%esp
	cmpb $4,-44(%ebp)
	jne .L602
	movl -36(%ebp),%eax
	testl %eax,%eax
	je .L603
	movl -4(%eax),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_QMachine+572
	jg .L604
	movl MM_QMachine+568,%eax
	cmpl %edx,4(%eax)
	jge .L603
.L604:
	pushl $22277
	call _m3_fault
	.align 16
.L603:
	movl -36(%ebp),%edi
	movl (%edi),%eax
	movl 32(%eax),%eax
	pushl %edi
	call *%eax
	xorl %esi,%esi
	decl %eax
	movl %eax,-256(%ebp)
	addl $4,%esp
	jmp .L605
	.align 16
.L606:
	movl (%edi),%eax
	leal -248(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl %esi
	pushl %edi
	call *%eax
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edx
	leal -16(%ebp),%eax
	pushl %eax
	pushl %edx
	movl MI_FS+184,%eax
	call *%eax
	fldl -12(%ebp)
	addl $28,%esp
	fcompl -28(%ebp)
	fnstsw %ax
	andb $69,%ah
	decb %ah
	cmpb $64,%ah
	jae .L613
	incl %esi
.L605:
	cmpl %esi,-256(%ebp)
	jge .L606
	jmp .L609
	.align 16
.L602:
	leal -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edx
	leal -16(%ebp),%eax
	pushl %eax
	pushl %edx
	movl MI_FS+184,%eax
	call *%eax
	fldl -12(%ebp)
	addl $16,%esp
	fcompl -28(%ebp)
	fnstsw %ax
	andb $69,%ah
	decb %ah
	cmpb $64,%ah
	jb .L609
.L613:
	pushl $1
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushBool
	movl -236(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L598
	.align 16
.L609:
	movl -236(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L611
	.align 16
.L601:
	pushl $1
	jmp .L614
	.align 16
.L611:
	pushl $0
.L614:
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushBool
.L598:
	leal -268(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe55:
	.size	 QMachine__DoStale,.Lfe55-QMachine__DoStale
	.align 16
	.type	 QMachine__DoUnlink,@function
QMachine__DoUnlink:
	pushl %ebp
	movl %esp,%ebp
	subl $192,%esp
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L616
	pushl $22720
	call _m3_fault
	.align 16
.L616:
	leal -12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Pop
	addl $8,%esp
.L617:
	movl $MM_QMachine+1300,-184(%ebp)
	movl $0,-188(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-192(%ebp)
	leal -192(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -172(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L618
	leal -12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl %eax
	movl MI_FS+64,%eax
	call *%eax
	movb $1,%dl
	movl -192(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $12,%esp
	jmp .L619
	.align 16
.L618:
	xorb %dl,%dl
.L619:
	xorl %eax,%eax
	movb %dl,%al
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__PushBool
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe56:
	.size	 QMachine__DoUnlink,.Lfe56-QMachine__DoUnlink
	.align 16
	.type	 QMachine__DoWrite,@function
QMachine__DoWrite:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
.L622:
	movl $MM_QMachine+2500,-4(%ebp)
	movl $4,-8(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-12(%ebp)
	leal -12(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	pushl %edi
	call QMachine__CurWr
	movl %eax,-16(%ebp)
	pushl %edi
	call QMachine__GetBuf
	movl -16(%ebp),%ecx
	pushl %ecx
	movl %eax,%esi
	pushl %esi
	movl MI_M3Buf+84,%eax
	call *%eax
	movl 16(%edi),%eax
	movl %eax,%ebx
	subl 12(%ebp),%ebx
	decl %eax
	movl %eax,-20(%ebp)
	addl $16,%esp
	jmp .L623
	.align 16
.L624:
	movl 52(%edi),%eax
	testl %eax,%eax
	jne .L625
	pushl $22996
	call _m3_fault
	.align 16
.L625:
	movl %eax,%edx
	cmpl %ebx,4(%edx)
	ja .L626
	pushl $22994
	call _m3_fault
	.align 16
.L626:
	pushl %esi
	leal (%ebx,%ebx,2),%eax
	sall $2,%eax
	movl %eax,-24(%ebp)
	addl (%edx),%eax
	pushl %eax
	pushl %edi
	movl MI_QVal+76,%eax
	call *%eax
	movl 52(%edi),%eax
	addl $12,%esp
	testl %eax,%eax
	jne .L627
	pushl $23012
	call _m3_fault
	.align 16
.L627:
	movl %eax,%edx
	cmpl %ebx,4(%edx)
	ja .L628
	pushl $23010
	call _m3_fault
	.align 16
.L628:
	movl -24(%ebp),%eax
	addl (%edx),%eax
	incl %ebx
	movl $0,8(%eax)
.L623:
	cmpl %ebx,-20(%ebp)
	jge .L624
	movl 12(%ebp),%ecx
	subl %ecx,16(%edi)
	movl -16(%ebp),%ecx
	pushl %ecx
	pushl %esi
	movl MI_M3Buf+80,%eax
	call *%eax
	pushl $0
	pushl %esi
	movl MI_M3Buf+84,%eax
	call *%eax
	pushl %esi
	pushl %edi
	call QMachine__FreeBuf
	movl -16(%ebp),%ecx
	pushl %ecx
	movl MI_Wr+80,%eax
	call *%eax
.L630:
	movl -12(%ebp),%eax
	leal -36(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe57:
	.size	 QMachine__DoWrite,.Lfe57-QMachine__DoWrite
	.align 16
	.type	 QMachine__DoTrace,@function
QMachine__DoTrace:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	cmpl $0,12(%ebp)
	je .L632
	pushl $23184
	call _m3_fault
	.align 16
.L632:
	cmpb $0,80(%edx)
	sete %al
	movb %al,80(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe58:
	.size	 QMachine__DoTrace,.Lfe58-QMachine__DoTrace
	.align 16
	.type	 QMachine__DoLookUp,@function
QMachine__DoLookUp:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L634
	pushl $23296
	call _m3_fault
	.align 16
.L634:
	movl (%esi),%eax
	leal -12(%ebp),%edi
	movl 28(%eax),%ebx
	pushl %edi
	pushl %esi
	call *%ebx
	movl (%esi),%eax
	movl 28(%eax),%ebx
	leal -24(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl (%esi),%eax
	movl 20(%eax),%ebx
	movl -20(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl %eax,%edx
	movl %edx,%ecx
	addl $24,%esp
	testl %ecx,%ecx
	jne .L635
	movl (%esi),%eax
	movl 24(%eax),%edx
	pushl %edi
	jmp .L638
	.align 16
.L635:
	movl (%esi),%eax
	movl 24(%eax),%edx
	leal 12(%ecx),%eax
	pushl %eax
.L638:
	pushl %esi
	call *%edx
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe59:
	.size	 QMachine__DoLookUp,.Lfe59-QMachine__DoLookUp
	.align 16
	.type	 QMachine__GetBuf,@function
QMachine__GetBuf:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 92(%edx),%eax
	testl %eax,%eax
	jle .L640
	decl %eax
	movl %eax,92(%edx)
	cmpl $9,%eax
	jbe .L641
	pushl $23617
	call _m3_fault
	.align 16
.L641:
	leal 96(%edx,%eax,4),%edx
	movl (%edx),%eax
	movl $0,(%edx)
	jmp .L642
	.align 16
.L640:
	movl MI_M3Buf+44,%eax
	call *%eax
.L642:
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe60:
	.size	 QMachine__GetBuf,.Lfe60-QMachine__GetBuf
	.align 16
	.type	 QMachine__FreeBuf,@function
QMachine__FreeBuf:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 92(%edx),%eax
	cmpl $9,%eax
	jg .L643
	jbe .L645
	pushl $23777
	call _m3_fault
	.align 16
.L645:
	movl %ecx,96(%edx,%eax,4)
	incl 92(%edx)
.L643:
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe61:
	.size	 QMachine__FreeBuf,.Lfe61-QMachine__FreeBuf
	.align 16
	.type	 QMachine__CleanUp,@function
QMachine__CleanUp:
	pushl %ebp
	movl %esp,%ebp
	subl $188,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 76(%ebx),%eax
	testl %eax,%eax
	je .L646
	movl %eax,%edx
	movl (%edx),%eax
	movl 32(%eax),%ecx
	pushl %edx
	call *%ecx
	movl %eax,-188(%ebp)
	addl $4,%esp
	jmp .L648
	.align 16
.L649:
	movl 8(%ebp),%ebx
	movl 76(%ebx),%ecx
	movl (%ecx),%eax
	movl 24(%eax),%edx
	pushl %ecx
	call *%edx
	movl %eax,-184(%ebp)
	addl $4,%esp
.L650:
	movl $MM_QMachine+1300,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%ebx
	movl %ebx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L652
	movl -184(%ebp),%ebx
	pushl %ebx
	movl MI_FS+64,%eax
	call *%eax
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $4,%esp
.L651:
.L652:
	decl -188(%ebp)
.L648:
	cmpl $0,-188(%ebp)
	jg .L649
.L646:
	movl -192(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe62:
	.size	 QMachine__CleanUp,.Lfe62-QMachine__CleanUp
	.align 16
	.type	 QMachine__Root,@function
QMachine__Root:
	pushl %ebp
	movl %esp,%ebp
	pushl $MM_QMachine+2600
	movl MI_Env+44,%eax
	call *%eax
	addl $4,%esp
	testl %eax,%eax
	jne .L656
	movl $MM_QMachine+2620,%eax
	jmp .L657
	.align 16
.L656:
	pushl $MM_QMachine+2640
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $8,%esp
.L657:
	pushl $MM_QMachine+2656
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe63:
	.size	 QMachine__Root,.Lfe63-QMachine__Root
	.align 16
	.type	 QMachine__UniqueTempFile,@function
QMachine__UniqueTempFile:
	pushl %ebp
	movl %esp,%ebp
	subl $208,%esp
	pushl %ebx
	movl $0,-208(%ebp)
	movl -208(%ebp),%ecx
	movl %ecx,-4(%ebp)
	movl %ecx,-204(%ebp)
	call QMachine__Root
	movl %eax,%ebx
	movl %ebx,-208(%ebp)
	testl %ebx,%ebx
	jne .L659
	pushl $MM_QMachine+2672
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $8,%esp
.L659:
	movl %ebx,-4(%ebp)
.L661:
	movl $MM_QMachine+1300,-176(%ebp)
	movl $0,-180(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-184(%ebp)
	leal -184(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -164(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L664
	leal -200(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_FS+184,%eax
	call *%eax
	movl -184(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $8,%esp
	jmp .L663
	.align 16
.L662:
	jmp .L664
	.align 16
.L663:
	incl -204(%ebp)
	pushl $MM_QMachine+2720
	movl -208(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl $10
	movl -204(%ebp),%ecx
	pushl %ecx
	movl MI_Fmt+52,%eax
	call *%eax
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,-4(%ebp)
	addl $24,%esp
	jmp .L661
	.align 16
.L664:
	movl 8(%ebp),%ecx
	cmpl $0,76(%ecx)
	jne .L666
	movl MM_QMachine+2732,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	movl (%edx),%eax
	movl 4(%eax),%eax
	pushl $5
	pushl %edx
	call *%eax
	movl %eax,%ebx
	movl 8(%ebp),%ecx
	addl $12,%esp
	movl %ebx,76(%ecx)
.L666:
	movl 8(%ebp),%ecx
	movl 76(%ecx),%edx
	movl (%edx),%eax
	movl 12(%eax),%ebx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%ebx
	movl -4(%ebp),%eax
	movl -212(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe64:
	.size	 QMachine__UniqueTempFile,.Lfe64-QMachine__UniqueTempFile
	.align 16
	.type	 QMachine__Err,@function
QMachine__Err:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%ebx
	pushl %edi
	call QMachine__GetBuf
	pushl $MM_QMachine+2744
	movl %eax,%esi
	pushl %esi
	movl MI_M3Buf+52,%eax
	call *%eax
	pushl $MM_QMachine+2772
	pushl %esi
	movl MI_M3Buf+52,%eax
	call *%eax
	pushl %ebx
	pushl %esi
	movl MI_M3Buf+52,%eax
	call *%eax
	pushl $MM_QMachine+940
	pushl %esi
	movl MI_M3Buf+52,%eax
	call *%eax
	addl $36,%esp
	pushl $MM_QMachine+2800
	pushl %esi
	movl MI_M3Buf+52,%eax
	call *%eax
	leal 4(%edi),%eax
	pushl %eax
	pushl %esi
	call QMachine__DumpFrame
	movl 28(%edi),%ebx
	decl %ebx
	addl $16,%esp
	jmp .L668
	.align 16
.L669:
	movl 64(%edi),%eax
	testl %eax,%eax
	jne .L670
	pushl $24948
	call _m3_fault
	.align 16
.L670:
	movl %eax,%edx
	cmpl %ebx,4(%edx)
	ja .L671
	pushl $24946
	call _m3_fault
	.align 16
.L671:
	leal (%ebx,%ebx,2),%eax
	sall $4,%eax
	addl (%edx),%eax
	addl $4,%eax
	pushl %eax
	pushl %esi
	call QMachine__DumpFrame
	decl %ebx
	addl $8,%esp
.L668:
	testl %ebx,%ebx
	jge .L669
	pushl %esi
	movl MI_M3Buf+72,%eax
	call *%eax
	pushl %esi
	movl %eax,%ebx
	pushl %edi
	call QMachine__FreeBuf
	pushl %ebx
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	leal -12(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe65:
	.size	 QMachine__Err,.Lfe65-QMachine__Err
	.align 16
	.type	 QMachine__DumpFrame,@function
QMachine__DumpFrame:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 12(%ebp),%eax
	movl 8(%ebp),%ebx
	movl 36(%eax),%eax
	testl %eax,%eax
	jne .L676
	pushl $13
	pushl $MM_QMachine+1288
	pushl %ebx
	call QMachine__Out
	addl $12,%esp
	jmp .L675
	.align 16
.L676:
	movl 8(%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	pushl $13
	pushl %eax
	pushl %ebx
	call QMachine__Out
	addl $16,%esp
.L675:
	pushl $MM_QMachine+852
	pushl %ebx
	movl MI_M3Buf+52,%eax
	call *%eax
	movl 12(%ebp),%eax
	addl $8,%esp
	movl 28(%eax),%eax
	testl %eax,%eax
	jle .L677
	pushl $10
	pushl %eax
	movl MI_Fmt+52,%eax
	call *%eax
	pushl $-6
	pushl %eax
	pushl %ebx
	call QMachine__Out
	addl $20,%esp
	jmp .L678
	.align 16
.L677:
	pushl $-6
	pushl $MM_QMachine+2848
	pushl %ebx
	call QMachine__Out
	addl $12,%esp
.L678:
	pushl $MM_QMachine+852
	pushl %ebx
	movl MI_M3Buf+52,%eax
	call *%eax
	movl 12(%ebp),%eax
	addl $8,%esp
	movl (%eax),%eax
	testl %eax,%eax
	jne .L679
	pushl $MM_QMachine+2864
	pushl %ebx
	movl MI_M3Buf+52,%eax
	call *%eax
	addl $8,%esp
	jmp .L680
	.align 16
.L679:
	movl 12(%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	pushl %eax
	pushl %ebx
	movl MI_M3Buf+52,%eax
	call *%eax
	addl $12,%esp
.L680:
	pushl $10
	pushl %ebx
	movl MI_M3Buf+48,%eax
	call *%eax
	movl -4(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe66:
	.size	 QMachine__DumpFrame,.Lfe66-QMachine__DumpFrame
	.align 16
	.type	 QMachine__Out,@function
QMachine__Out:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	pushl %edi
	movl MI_Text+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $4,%esp
	testl %esi,%esi
	jge .L682
	negl %esi
	jmp .L683
	.align 16
.L684:
	pushl $32
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_M3Buf+48,%eax
	call *%eax
	incl %ebx
	addl $8,%esp
.L683:
	cmpl %esi,%ebx
	jl .L684
	pushl %edi
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_M3Buf+52,%eax
	call *%eax
	jmp .L681
	.align 16
.L682:
	pushl %edi
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_M3Buf+52,%eax
	call *%eax
	jmp .L690
	.align 16
.L688:
	pushl $32
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_M3Buf+48,%eax
	call *%eax
	incl %ebx
.L690:
	addl $8,%esp
	cmpl %esi,%ebx
	jl .L688
.L681:
	leal -12(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe67:
	.size	 QMachine__Out,.Lfe67-QMachine__Out
	.align 16
	.type	 QMachine__OSErr,@function
QMachine__OSErr:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	xorl %ebx,%ebx
	jmp .L692
	.align 16
.L693:
	testl %ebx,%ebx
	jne .L694
	movl $MM_QMachine+2888,%ebx
	jmp .L695
	.align 16
.L694:
	pushl $MM_QMachine+2904
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
.L695:
	movl 4(%esi),%eax
	pushl %eax
	movl MI_Atom+48,%eax
	call *%eax
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl 8(%esi),%esi
	addl $12,%esp
.L692:
	testl %esi,%esi
	jne .L693
	leal -8(%ebp),%esp
	movl %ebx,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe68:
	.size	 QMachine__OSErr,.Lfe68-QMachine__OSErr
	.align 16
	.type	 QMachRep__CanonicalizePath,@function
QMachRep__CanonicalizePath:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-4(%ebp)
	movl (%esi),%eax
	movl 32(%eax),%edx
	pushl %esi
	call *%edx
	xorl %ebx,%ebx
	leal -1(%eax),%edi
	addl $4,%esp
	jmp .L698
	.align 16
.L699:
	movl (%esi),%eax
	movl 44(%eax),%edx
	pushl %ebx
	pushl %esi
	call *%edx
	movl %eax,%edx
	movl %edx,-4(%ebp)
	movl MI_Pathname+116,%eax
	pushl %eax
	pushl %edx
	movl MI_Text+48,%eax
	call *%eax
	addl $16,%esp
	testl %eax,%eax
	jne .L703
	movl MI_Pathname+112,%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_Text+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L703
	incl %ebx
.L698:
	cmpl %edi,%ebx
	jle .L699
	xorb %cl,%cl
	testb %cl,%cl
	jne .L703
	movl %esi,%eax
	jmp .L712
	.align 16
.L703:
	movl MM_QMachine+2732,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	movl (%edx),%eax
	movl 4(%eax),%eax
	movl %eax,-16(%ebp)
	pushl $5
	pushl %edx
	movl -16(%ebp),%ecx
	call *%ecx
	movl %eax,%ebx
	movl (%esi),%eax
	xorl %edi,%edi
	movl 32(%eax),%edx
	pushl %esi
	call *%edx
	movl %edi,-8(%ebp)
	decl %eax
	movl %eax,-12(%ebp)
	addl $16,%esp
	jmp .L704
	.align 16
.L705:
	movl (%esi),%eax
	movl -8(%ebp),%ecx
	movl 44(%eax),%edx
	pushl %ecx
	pushl %esi
	call *%edx
	movl %eax,-16(%ebp)
	movl %eax,-4(%ebp)
	movl MI_Pathname+116,%eax
	pushl %eax
	movl -16(%ebp),%ecx
	pushl %ecx
	movl MI_Text+48,%eax
	call *%eax
	addl $16,%esp
	testl %eax,%eax
	jne .L707
	movl MI_Pathname+112,%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_Text+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L708
	testl %edi,%edi
	jle .L709
	movl (%ebx),%eax
	movl 20(%eax),%eax
	movl %eax,-16(%ebp)
	pushl %ebx
	movl -16(%ebp),%ecx
	decl %edi
	call *%ecx
	addl $4,%esp
	jmp .L707
	.align 16
.L709:
	movl (%ebx),%eax
	movl 12(%eax),%edx
	leal -4(%ebp),%eax
	pushl %eax
	jmp .L713
	.align 16
.L708:
	movl (%ebx),%eax
	movl 12(%eax),%edx
	leal -4(%ebp),%eax
	pushl %eax
	incl %edi
.L713:
	pushl %ebx
	call *%edx
	addl $8,%esp
.L707:
	incl -8(%ebp)
.L704:
	movl -12(%ebp),%ecx
	cmpl %ecx,-8(%ebp)
	jle .L705
	movl %ebx,%eax
.L712:
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe69:
	.size	 QMachRep__CanonicalizePath,.Lfe69-QMachRep__CanonicalizePath
	.align 16
	.type	 QMachRep__StripPrefix,@function
QMachRep__StripPrefix:
	pushl %ebp
	movl %esp,%ebp
	subl $184,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
.L715:
	movl $MM_QMachine+2456,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L716
	movl 16(%ebp),%ecx
	pushl %ecx
	movl MI_Pathname+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl MI_Pathname+80,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L717
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_Pathname+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
	movl MI_Pathname+80,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	testl %ebx,%ebx
	jne .L718
.L717:
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
.L728:
	movl 16(%ebp),%eax
	jmp .L726
	.align 16
.L718:
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L719
	.align 16
.L716:
	pushl $MM_QMachine+2924
	movl 8(%ebp),%ecx
	pushl %ecx
	call QMachine__Err
	addl $8,%esp
.L719:
	movl 12(%ebp),%ecx
	movl (%ecx),%eax
	movl 32(%eax),%ebx
	pushl %ecx
	call *%ebx
	movl 16(%ebp),%ecx
	movl %eax,%ebx
	movl (%ecx),%eax
	movl 32(%eax),%edx
	pushl %ecx
	call *%edx
	addl $8,%esp
	cmpl %eax,%ebx
	jg .L728
	movl 12(%ebp),%ecx
	movl (%ecx),%eax
	movl 32(%eax),%edx
	pushl %ecx
	call *%edx
	xorl %esi,%esi
	leal -1(%eax),%edi
	addl $4,%esp
	jmp .L722
	.align 16
.L723:
	movl 12(%ebp),%ecx
	movl (%ecx),%eax
	movl 44(%eax),%edx
	pushl %esi
	pushl %ecx
	call *%edx
	movl 16(%ebp),%ecx
	movl %eax,%ebx
	movl (%ecx),%eax
	movl 44(%eax),%eax
	pushl %esi
	pushl %ecx
	call *%eax
	pushl %eax
	pushl %ebx
	movl MI_Text+48,%eax
	call *%eax
	addl $24,%esp
	testl %eax,%eax
	je .L728
	incl %esi
.L722:
	cmpl %edi,%esi
	jle .L723
	movl 12(%ebp),%ecx
	movl (%ecx),%eax
	movl 32(%eax),%ebx
	pushl %ecx
	call *%ebx
	pushl $2147483647
	movl %eax,%ebx
	pushl %ebx
	movl 16(%ebp),%ecx
	pushl %ecx
	movl MI_TextSeq+152,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,%ebx
	movl (%ebx),%eax
	movl 16(%eax),%edx
	movl $0,-184(%ebp)
	leal -184(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	movl %ebx,%eax
.L726:
	leal -196(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe70:
	.size	 QMachRep__StripPrefix,.Lfe70-QMachRep__StripPrefix
	.align 16
	.type	 QMachine__SplitArgs,@function
QMachine__SplitArgs:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl MM_QMachine+2732,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	movl (%edx),%eax
	movl 4(%eax),%ecx
	pushl $5
	pushl %edx
	call *%ecx
	movl %eax,-8(%ebp)
	pushl %esi
	movl MI_Text+56,%eax
	xorl %ebx,%ebx
	call *%eax
	movl %eax,-12(%ebp)
	addl $16,%esp
	jmp .L730
	.align 16
.L733:
	incl %ebx
	cmpl %ebx,-12(%ebp)
	jle .L737
.L748:
	testl %esi,%esi
	jne .L735
	pushl $26932
	call _m3_fault
	.align 16
.L735:
	movl %esi,%edx
	cmpl %ebx,4(%edx)
	ja .L736
	pushl $26930
	call _m3_fault
	.align 16
.L736:
	movl (%edx),%eax
	movb (%ebx,%eax),%al
	andl $255,%eax
	cmpb $0,MI_QScanner+44(%eax)
	jne .L733
.L737:
	movl %ebx,%ecx
	jmp .L738
	.align 16
.L739:
	incl %ebx
.L738:
	cmpl %ebx,-12(%ebp)
	jle .L743
	testl %esi,%esi
	jne .L741
	pushl $26964
	call _m3_fault
	.align 16
.L741:
	movl %esi,%edx
	cmpl %ebx,4(%edx)
	ja .L742
	pushl $26962
	call _m3_fault
	.align 16
.L742:
	movl (%edx),%eax
	movb (%ebx,%eax),%al
	andl $255,%eax
	cmpb $0,MI_QScanner+44(%eax)
	je .L739
.L743:
	cmpl %ecx,%ebx
	jle .L730
	testl %ecx,%ecx
	jge .L745
	pushl $26977
	call _m3_fault
	.align 16
.L745:
	movl %ebx,%eax
	subl %ecx,%eax
	jns .L746
	pushl $26977
	call _m3_fault
	.align 16
.L746:
	pushl %eax
	pushl %ecx
	pushl %esi
	movl MI_Text+64,%eax
	call *%eax
	movl -8(%ebp),%edi
	movl %eax,%edx
	movl (%edi),%eax
	movl 12(%eax),%ecx
	movl %edx,-4(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%ecx
	addl $20,%esp
.L730:
	cmpl %ebx,-12(%ebp)
	jg .L748
	leal -24(%ebp),%esp
	movl -8(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe71:
	.size	 QMachine__SplitArgs,.Lfe71-QMachine__SplitArgs
	.align 16
	.type	 M_QMachine_t7aa9cb97_LINK,@function
M_QMachine_t7aa9cb97_LINK:
	pushl %ebp
	movl %esp,%ebp
	movl MM_QMachine+4660,%eax
	movl %ebp,%esp
	movl 52(%eax),%edx
	movl MM_QMachine+148,%eax
	movl %eax,4(%edx)
	movl MM_QMachine+152,%eax
	movl %eax,8(%edx)
	movl MM_QMachine+188,%eax
	movl %eax,12(%edx)
	movl MM_QMachine+192,%eax
	movl %eax,16(%edx)
	movl MM_QMachine+216,%eax
	movl %eax,20(%edx)
	movl MM_QMachine+224,%eax
	movl %eax,24(%edx)
	movl MM_QMachine+232,%eax
	movl %eax,28(%edx)
	movl MM_QMachine+464,%eax
	movl %eax,32(%edx)
	movl MM_QMachine+452,%eax
	movl %eax,36(%edx)
	movl MM_QMachine+184,%eax
	movl %eax,40(%edx)
	movl MM_QMachine+252,%eax
	movl %eax,44(%edx)
	popl %ebp
	ret
.Lfe72:
	.size	 M_QMachine_t7aa9cb97_LINK,.Lfe72-M_QMachine_t7aa9cb97_LINK
	.align 16
	.type	 _m3_fault,@function
_m3_fault:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	pushl %eax
	pushl $MM_QMachine
	movl MI_RTHooks+108,%eax
	call *%eax
	.align 16
.Lfe73:
	.size	 _m3_fault,.Lfe73-_m3_fault
.globl MM_QMachine
.data
	.align 4
	.type	 MM_QMachine,@object
	.size	 MM_QMachine,4692
MM_QMachine:
	.long MM_QMachine+4516
	.long MM_QMachine+44
	.long MM_QMachine+512
	.long MM_QMachine+500
	.zero	4
	.long MM_QMachine+3652
	.zero	4
	.long MM_QMachine+4508
	.long MM_QMachine+4508
	.zero	16
	.long 2057948055
.byte 62
.byte 153
.byte 203
.byte 120
.byte 169
.byte 82
.byte 98
.byte 2
	.long 1
	.zero	4
	.long 0
	.long 1
	.zero	4
	.long 0
	.zero	20
	.long MM_QMachine+4655
	.zero	4
	.long M_QMachine_t7aa9cb97_LINK
	.long 1025392381
	.zero	12
	.long MM_QMachine+4668
	.long MM_QMachine+4679
	.zero	4
	.long QMachine__Init
	.long QMachine__Evaluate
	.long QMachine__Eval
	.long QMachine__TraceInstruction
	.long QMachine__PushFrame
	.long QMachine__ExpandFrames
	.long QMachine__DoCall
	.long QMachine__PopFrame
	.long QMachine__CheckReturn
	.long QMachine__Call
	.long QMachine__Get
	.long QMachine__Put
	.long QMachine__PushScope
	.long QMachine__ExpandScopes
	.long QMachine__PopScope
	.long QMachine__Define
	.long QMachine__DefineGlobal
	.long QMachine__LookUp
	.long QMachine__NewBinding
	.long QMachine__Push
	.long QMachine__ExpandStack
	.long QMachine__Pop
	.long QMachine__PushBool
	.long QMachine__PushOutput
	.long QMachine__ExpandOutput
	.long QMachine__PopOutput
	.long QMachine__CurWr
	.long QMachine__PushLoop
	.long QMachine__ExpandLoops
	.long QMachine__IterateLoop
	.long QMachine__PopLoop
	.long QMachine__PushInclude
	.long QMachine__ExpandIncludes
	.long QMachine__PopInclude
	.zero	76
	.long QMachine__InitBuiltins
	.long QMachine__NewBuiltin
	.long QMachine__DoArgList
	.long QMachine__DoCopyIfNew
	.long QMachine__DoDefined
	.long QMachine__DoEmpty
	.long QMachine__DoEqual
	.long QMachine__DoError
	.long QMachine__DoEscape
	.long QMachine__DoExec
	.long QMachine__Exec
	.long QMachine__DoFile
	.long QMachine__DoFormat
	.long QMachine__DoInclude
	.long QMachine__DoNormalize
	.long QMachine__DoPath
	.long QMachine__DoStale
	.long QMachine__DoUnlink
	.long QMachine__DoWrite
	.long QMachine__DoTrace
	.long QMachine__DoLookUp
	.long QMachine__GetBuf
	.long QMachine__FreeBuf
	.long QMachine__CleanUp
	.long QMachine__Root
	.long QMachine__UniqueTempFile
	.long QMachine__Err
	.long QMachine__DumpFrame
	.long QMachine__Out
	.long QMachine__OSErr
	.long QMachine__SplitArgs
	.long QMachRep__CanonicalizePath
	.long QMachRep__StripPrefix
	.long QMachRep__Include
	.long QMachRep__PushString
	.long 588878224
	.long 2057948055
	.zero	4
	.long MM_QMachine+520
	.long -1299621907
	.long MM_QMachine+528
	.long 802853858
	.long MM_QMachine+536
	.long 896518719
	.long MM_QMachine+544
	.long -795636215
	.long MM_QMachine+552
	.long 1911541039
	.long MM_QMachine+560
	.long 2008032031
	.long MM_QMachine+568
	.long 1969248738
	.long MM_QMachine+576
	.long 971574223
	.long MM_QMachine+584
	.long 1486429962
	.long MM_QMachine+1148
	.long 2071951508
	.long 2
	.long MM_QMachine+604
	.long 36
	.ascii	"table does not contain entry for: \""
	.zero	1
	.long 2
	.long MM_QMachine+652
	.long 2
	.ascii	"\""
	.zero	3
	.long 2
	.long MM_QMachine+668
	.long 32
	.ascii	"array subscript out of bounds: "
	.zero	1
	.long 2
	.long MM_QMachine+712
	.long 21
	.ascii	"undefined variable: "
	.zero	4
	.long 2
	.long MM_QMachine+748
	.long 37
	.ascii	"cannot assign to readonly variable: "
	.zero	4
	.long 2
	.long MM_QMachine+800
	.long 8
	.ascii	"****** "
	.zero	1
	.long 2
	.long MM_QMachine+820
	.long 9
	.ascii	" ******\n"
	.zero	4
	.long 2
	.long MM_QMachine+844
	.long 2
	.ascii	"."
	.zero	3
	.long 2
	.long MM_QMachine+860
	.long 3
	.ascii	"  "
	.zero	2
	.long 2
	.long MM_QMachine+876
	.long 4
	.ascii	"  ("
	.zero	1
	.long 2
	.long MM_QMachine+892
	.long 4
	.ascii	") \""
	.zero	1
	.long 2
	.long MM_QMachine+908
	.long 7
	.ascii	"  pc+("
	.zero	2
	.long 2
	.long MM_QMachine+928
	.long 6
	.ascii	") => "
	.zero	3
	.long 2
	.long MM_QMachine+948
	.long 2
	.ascii	"\n"
	.zero	3
	.long 2
	.long MM_QMachine+964
	.long 47
	.ascii	"wrong number of parameters passed to procedure"
	.zero	2
	.long 2
	.long MM_QMachine+1024
	.long 38
	.ascii	"return not in a function or procedure"
	.zero	3
	.long 2
	.long MM_QMachine+1076
	.long 33
	.ascii	"expected return value is missing"
	.zero	4
	.long 2
	.long MM_QMachine+1124
	.long 24
	.ascii	"unexpected return value"
	.zero	1
	.long MM_QMachine+1156
	.long -1146351025
	.long MM_QMachine+1440
	.long -1536436520
	.long 2
	.long MM_QMachine+1176
	.long 27
	.ascii	"duplicate symbol defined: "
	.zero	2
	.long 2
	.long MM_QMachine+1216
	.long 41
	.ascii	"cannot redefine readonly global symbol: "
	.zero	4
	.long 2
	.long MM_QMachine+1272
	.long 12
	.ascii	"empty stack"
	.zero	1
	.long 2
	.long MM_QMachine+1296
	.long 1
	.zero	4
	.long MI_OSError+44
	.zero	4
	.long 2
	.long MM_QMachine+1320
	.long 17
	.ascii	"unable to open \""
	.zero	4
	.long 2
	.long MM_QMachine+1352
	.long 14
	.ascii	"\" for writing"
	.zero	3
	.long MI_Thread+184
	.long MI_Wr+44
	.zero	4
	.long 2
	.long MM_QMachine+1392
	.long 18
	.ascii	"unable to close \""
	.zero	3
	.long 2
	.long MM_QMachine+1424
	.long 15
	.ascii	"\": interrupted"
	.zero	2
	.long MM_QMachine+1876
	.long -1174334778
	.long 2
	.long MM_QMachine+1460
	.long 43
	.ascii	"\"foreach\" not applied to an array or table"
	.zero	2
	.long 2
	.long MM_QMachine+1516
	.long 8
	.ascii	"arglist"
	.zero	1
	.long 2
	.long MM_QMachine+1536
	.long 6
	.ascii	"cp_if"
	.zero	3
	.long 2
	.long MM_QMachine+1556
	.long 8
	.ascii	"defined"
	.zero	1
	.long 2
	.long MM_QMachine+1576
	.long 6
	.ascii	"empty"
	.zero	3
	.long 2
	.long MM_QMachine+1596
	.long 6
	.ascii	"equal"
	.zero	3
	.long 2
	.long MM_QMachine+1616
	.long 6
	.ascii	"error"
	.zero	3
	.long 2
	.long MM_QMachine+1636
	.long 7
	.ascii	"escape"
	.zero	2
	.long 2
	.long MM_QMachine+1656
	.long 5
	.ascii	"exec"
	.zero	4
	.long 2
	.long MM_QMachine+1676
	.long 5
	.ascii	"file"
	.zero	4
	.long 2
	.long MM_QMachine+1696
	.long 7
	.ascii	"format"
	.zero	2
	.long 2
	.long MM_QMachine+1716
	.long 8
	.ascii	"include"
	.zero	1
	.long 2
	.long MM_QMachine+1736
	.long 10
	.ascii	"normalize"
	.zero	3
	.long 2
	.long MM_QMachine+1760
	.long 5
	.ascii	"path"
	.zero	4
	.long 2
	.long MM_QMachine+1780
	.long 6
	.ascii	"stale"
	.zero	3
	.long 2
	.long MM_QMachine+1800
	.long 12
	.ascii	"unlink_file"
	.zero	1
	.long 2
	.long MM_QMachine+1824
	.long 6
	.ascii	"write"
	.zero	3
	.long 2
	.long MM_QMachine+1844
	.long 12
	.ascii	"TRACE_INSTR"
	.zero	1
	.long 2
	.long MM_QMachine+1868
	.long 7
	.ascii	"lookup"
	.zero	2
	.long MM_QMachine+2140
	.long 54026910
	.long MI_OSError+44
	.long MI_Thread+184
	.long MI_Wr+44
	.zero	4
	.long 2
	.long MM_QMachine+1912
	.long 12
	.ascii	"interrupted"
	.zero	1
	.long 2
	.long MM_QMachine+1936
	.long 21
	.ascii	"unable to write on \""
	.zero	4
	.long 2
	.long MM_QMachine+1972
	.long 17
	.ascii	"unable to copy \""
	.zero	4
	.long 2
	.long MM_QMachine+2004
	.long 7
	.ascii	"\" to \""
	.zero	2
	.long 2
	.long MM_QMachine+2024
	.long 49
	.ascii	"\"empty\" not applied to a string, table, or array"
	.zero	4
	.long 2
	.long MM_QMachine+2088
	.long 49
	.ascii	"exec failed: must supply at least one argument!\n"
	.zero	4
	.long MM_QMachine+2396
	.long -244065135
	.long 2
	.long MM_QMachine+2160
	.long 46
	.ascii	"exec failed: exec takes at most 4 arguments!\n"
	.zero	3
	.long 2
	.long MM_QMachine+2220
	.long 70
	.ascii	"exec failed: the argument \"io\" must be an array of at most"
	.ascii	" 3 lements!"
	.zero	3
	.long 2
	.long MM_QMachine+2304
	.long 72
	.ascii	"exec failed: the argument \"cmd\" must be an array of at lea"
	.ascii	"st 1 element!"
	.zero	1
	.long MI_OSError+44
	.long MI_Rd+64
	.long MI_Thread+184
	.long MI_Wr+44
	.zero	4
	.long MM_QMachine+2404
	.long 860659424
	.long MM_QMachine+2732
	.long 1045706454
	.long 2
	.long MM_QMachine+2424
	.long 12
	.ascii	"exec failed"
	.zero	1
	.long 2
	.long MM_QMachine+2448
	.long 6
	.ascii	" *** "
	.zero	3
	.long MI_Pathname+44
	.zero	4
	.long 2
	.long MM_QMachine+2476
	.long 24
	.ascii	"invalid path in include"
	.zero	1
	.long MI_Quake+44
	.zero	4
	.long 2
	.long MM_QMachine+2520
	.long 33
	.ascii	"invalid path (\"%s\") in normalize"
	.zero	4
	.long 2
	.long MM_QMachine+2568
	.long 26
	.ascii	"invalid path in normalize"
	.zero	3
	.long 2
	.long MM_QMachine+2608
	.long 5
	.ascii	"TEMP"
	.zero	4
	.long 2
	.long MM_QMachine+2628
	.long 6
	.ascii	"/tmp/"
	.zero	3
	.long 2
	.long MM_QMachine+2648
	.long 2
	.ascii	"\\"
	.zero	3
	.long 2
	.long MM_QMachine+2664
	.long 3
	.ascii	"qk"
	.zero	2
	.long 2
	.long MM_QMachine+2680
	.long 34
	.ascii	"Unable to create a temporary file"
	.zero	3
	.long 2
	.long MM_QMachine+2728
	.long 2
	.ascii	"_"
	.zero	3
	.long MM_QMachine+4660
	.long -2012935793
	.long 2
	.long MM_QMachine+2752
	.long 14
	.ascii	"quake error: "
	.zero	3
	.long 2
	.long MM_QMachine+2780
	.long 16
	.ascii	"runtime error: "
	.zero	1
	.long 2
	.long MM_QMachine+2808
	.long 34
	.ascii	"\n--procedure--  -line-  -file---\n"
	.zero	3
	.long 2
	.long MM_QMachine+2856
	.long 3
	.ascii	"--"
	.zero	2
	.long 2
	.long MM_QMachine+2872
	.long 10
	.ascii	"<builtin>"
	.zero	3
	.long 2
	.long MM_QMachine+2896
	.long 3
	.ascii	": "
	.zero	2
	.long 2
	.long MM_QMachine+2912
	.long 8
	.ascii	"  ***  "
	.zero	1
	.long 2
	.long MM_QMachine+2932
	.long 48
	.ascii	"internal error: invalid pathname in StripPrefix"
	.zero	1
	.ascii	"SplitArgs"
	.zero	1
	.ascii	"StripPrefix"
	.zero	1
	.ascii	"CanonicalizePath"
	.zero	1
	.ascii	"OSErr"
	.zero	1
	.ascii	"Out"
	.zero	1
	.ascii	"DumpFrame"
	.zero	1
	.ascii	"Err"
	.zero	1
	.ascii	"UniqueTempFile"
	.zero	1
	.ascii	"Root"
	.zero	1
	.ascii	"CleanUp"
	.zero	1
	.ascii	"FreeBuf"
	.zero	1
	.ascii	"GetBuf"
	.zero	1
	.ascii	"DoLookUp"
	.zero	1
	.ascii	"DoTrace"
	.zero	1
	.ascii	"DoWrite"
	.zero	1
	.ascii	"DoUnlink"
	.zero	1
	.ascii	"DoStale"
	.zero	1
	.ascii	"DoPath"
	.zero	1
	.ascii	"DoNormalize"
	.zero	1
	.ascii	"Include"
	.zero	1
	.ascii	"DoInclude"
	.zero	1
	.ascii	"DoFormat"
	.zero	1
	.ascii	"DoFile"
	.zero	1
	.ascii	"Exec"
	.zero	1
	.ascii	"DoExec"
	.zero	1
	.ascii	"DoEscape"
	.zero	1
	.ascii	"DoError"
	.zero	1
	.ascii	"DoEqual"
	.zero	1
	.ascii	"DoEmpty"
	.zero	1
	.ascii	"DoDefined"
	.zero	1
	.ascii	"DoCopyIfNew"
	.zero	1
	.ascii	"DoArgList"
	.zero	1
	.ascii	"M_QMachine_LINE_956"
	.zero	1
	.ascii	"NewBuiltin"
	.zero	1
	.ascii	"InitBuiltins"
	.zero	1
	.ascii	"PopInclude"
	.zero	1
	.ascii	"ExpandIncludes"
	.zero	1
	.ascii	"PushInclude"
	.zero	1
	.ascii	"PopLoop"
	.zero	1
	.ascii	"IterateLoop"
	.zero	1
	.ascii	"ExpandLoops"
	.zero	1
	.ascii	"PushLoop"
	.zero	1
	.ascii	"CurWr"
	.zero	1
	.ascii	"PopOutput"
	.zero	1
	.ascii	"ExpandOutput"
	.zero	1
	.ascii	"PushOutput"
	.zero	1
	.ascii	"PushBool"
	.zero	1
	.ascii	"PushString"
	.zero	1
	.ascii	"Pop"
	.zero	1
	.ascii	"ExpandStack"
	.zero	1
	.ascii	"Push"
	.zero	1
	.ascii	"NewBinding"
	.zero	1
	.ascii	"LookUp"
	.zero	1
	.ascii	"DefineGlobal"
	.zero	1
	.ascii	"Define"
	.zero	1
	.ascii	"PopScope"
	.zero	1
	.ascii	"ExpandScopes"
	.zero	1
	.ascii	"PushScope"
	.zero	1
	.ascii	"Put"
	.zero	1
	.ascii	"Get"
	.zero	1
	.ascii	"Call"
	.zero	1
	.ascii	"CheckReturn"
	.zero	1
	.ascii	"PopFrame"
	.zero	1
	.ascii	"DoCall"
	.zero	1
	.ascii	"M_QMachine_LINE_441"
	.zero	1
	.ascii	"ExpandFrames"
	.zero	1
	.ascii	"PushFrame"
	.zero	1
	.ascii	"TraceInstruction"
	.zero	1
	.ascii	"Eval"
	.zero	1
	.ascii	"Evaluate"
	.zero	1
	.ascii	"Init"
	.zero	1
	.long QMachine__SplitArgs
	.long MM_QMachine+2980
	.zero	4
	.long QMachRep__StripPrefix
	.long MM_QMachine+2990
	.long MI_QMachRep+672
	.long QMachRep__CanonicalizePath
	.long MM_QMachine+3002
	.long MI_QMachRep+668
	.long QMachine__OSErr
	.long MM_QMachine+3019
	.zero	4
	.long QMachine__Out
	.long MM_QMachine+3025
	.zero	4
	.long QMachine__DumpFrame
	.long MM_QMachine+3029
	.zero	4
	.long QMachine__Err
	.long MM_QMachine+3039
	.zero	4
	.long QMachine__UniqueTempFile
	.long MM_QMachine+3043
	.zero	4
	.long QMachine__Root
	.long MM_QMachine+3058
	.zero	4
	.long QMachine__CleanUp
	.long MM_QMachine+3063
	.zero	4
	.long QMachine__FreeBuf
	.long MM_QMachine+3071
	.zero	4
	.long QMachine__GetBuf
	.long MM_QMachine+3079
	.zero	4
	.long QMachine__DoLookUp
	.long MM_QMachine+3086
	.zero	4
	.long QMachine__DoTrace
	.long MM_QMachine+3095
	.zero	4
	.long QMachine__DoWrite
	.long MM_QMachine+3103
	.zero	4
	.long QMachine__DoUnlink
	.long MM_QMachine+3111
	.zero	4
	.long QMachine__DoStale
	.long MM_QMachine+3120
	.zero	4
	.long QMachine__DoPath
	.long MM_QMachine+3128
	.zero	4
	.long QMachine__DoNormalize
	.long MM_QMachine+3135
	.zero	4
	.long QMachRep__Include
	.long MM_QMachine+3147
	.long MI_QMachRep+676
	.long QMachine__DoInclude
	.long MM_QMachine+3155
	.zero	4
	.long QMachine__DoFormat
	.long MM_QMachine+3165
	.zero	4
	.long QMachine__DoFile
	.long MM_QMachine+3174
	.zero	4
	.long QMachine__Exec
	.long MM_QMachine+3181
	.zero	4
	.long QMachine__DoExec
	.long MM_QMachine+3186
	.zero	4
	.long QMachine__DoEscape
	.long MM_QMachine+3193
	.zero	4
	.long QMachine__DoError
	.long MM_QMachine+3202
	.zero	4
	.long QMachine__DoEqual
	.long MM_QMachine+3210
	.zero	4
	.long QMachine__DoEmpty
	.long MM_QMachine+3218
	.zero	4
	.long QMachine__DoDefined
	.long MM_QMachine+3226
	.zero	4
	.long QMachine__DoCopyIfNew
	.long MM_QMachine+3236
	.zero	4
	.long QMachine__DoArgList
	.long MM_QMachine+3248
	.zero	4
	.long M_QMachine_LINE_956.1
	.long MM_QMachine+3258
	.zero	4
	.long QMachine__NewBuiltin
	.long MM_QMachine+3278
	.zero	4
	.long QMachine__InitBuiltins
	.long MM_QMachine+3289
	.zero	4
	.long QMachine__PopInclude
	.long MM_QMachine+3302
	.zero	4
	.long QMachine__ExpandIncludes
	.long MM_QMachine+3313
	.zero	4
	.long QMachine__PushInclude
	.long MM_QMachine+3328
	.zero	4
	.long QMachine__PopLoop
	.long MM_QMachine+3340
	.zero	4
	.long QMachine__IterateLoop
	.long MM_QMachine+3348
	.zero	4
	.long QMachine__ExpandLoops
	.long MM_QMachine+3360
	.zero	4
	.long QMachine__PushLoop
	.long MM_QMachine+3372
	.zero	4
	.long QMachine__CurWr
	.long MM_QMachine+3381
	.zero	4
	.long QMachine__PopOutput
	.long MM_QMachine+3387
	.zero	4
	.long QMachine__ExpandOutput
	.long MM_QMachine+3397
	.zero	4
	.long QMachine__PushOutput
	.long MM_QMachine+3410
	.zero	4
	.long QMachine__PushBool
	.long MM_QMachine+3421
	.zero	4
	.long QMachRep__PushString
	.long MM_QMachine+3430
	.long MI_QMachRep+680
	.long QMachine__Pop
	.long MM_QMachine+3441
	.zero	4
	.long QMachine__ExpandStack
	.long MM_QMachine+3445
	.zero	4
	.long QMachine__Push
	.long MM_QMachine+3457
	.zero	4
	.long QMachine__NewBinding
	.long MM_QMachine+3462
	.zero	4
	.long QMachine__LookUp
	.long MM_QMachine+3473
	.zero	4
	.long QMachine__DefineGlobal
	.long MM_QMachine+3480
	.zero	4
	.long QMachine__Define
	.long MM_QMachine+3493
	.zero	4
	.long QMachine__PopScope
	.long MM_QMachine+3500
	.zero	4
	.long QMachine__ExpandScopes
	.long MM_QMachine+3509
	.zero	4
	.long QMachine__PushScope
	.long MM_QMachine+3522
	.zero	4
	.long QMachine__Put
	.long MM_QMachine+3532
	.zero	4
	.long QMachine__Get
	.long MM_QMachine+3536
	.zero	4
	.long QMachine__Call
	.long MM_QMachine+3540
	.zero	4
	.long QMachine__CheckReturn
	.long MM_QMachine+3545
	.zero	4
	.long QMachine__PopFrame
	.long MM_QMachine+3557
	.zero	4
	.long QMachine__DoCall
	.long MM_QMachine+3566
	.zero	4
	.long M_QMachine_LINE_441.0
	.long MM_QMachine+3573
	.zero	4
	.long QMachine__ExpandFrames
	.long MM_QMachine+3593
	.zero	4
	.long QMachine__PushFrame
	.long MM_QMachine+3606
	.zero	4
	.long QMachine__TraceInstruction
	.long MM_QMachine+3616
	.zero	4
	.long QMachine__Eval
	.long MM_QMachine+3633
	.zero	4
	.long QMachine__Evaluate
	.long MM_QMachine+3638
	.zero	4
	.long QMachine__Init
	.long MM_QMachine+3647
	.zero	8
.byte 43
.byte 32
.byte 1
.byte 1
.byte 4
.byte 26
.byte 18
.byte 0
	.ascii	"/home/ftp/tmp/pm3/tmp/pm3-1.1.15/language/modula3/m3compiler"
	.ascii	"/m3bootstrap/LINUXLIBC6/pm3-LINUXLIBC6/boot-LINUXLIBC6/m3qua"
	.ascii	"ke/src/QMachine.m3"
	.zero	1
.byte 1
.byte 10
.byte 0
	.zero	6
	.long 2057948055
	.ascii	"QMachine.T"
	.zero	1
	.ascii	"QMachine.T"
	.zero	3
	.ident	"GCC: (GNU) cygnus-2.7.2-960712"
