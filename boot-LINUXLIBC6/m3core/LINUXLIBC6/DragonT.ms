	.file	"DragonT.mc"
	.version	"01.01"
/ SRC Modula-3 version cygnus-2.7.2-960712 (i486--linuxelf) compiled by GNU C version egcs-2.91.66 19990314/Linux (egcs-1.1.2 release).
/ options passed:  -fno-strength-reduce -O2
/ options enabled:  -fdefer-pop -fcse-follow-jumps -fcse-skip-blocks
/ -fexpensive-optimizations -fthread-jumps -fpeephole -fforce-mem
/ -ffunction-cse -finline -fkeep-static-consts -fcaller-saves
/ -fpcc-struct-return -frerun-cse-after-loop -fschedule-insns2 -fcommon
/ -fverbose-asm -fgnu-linker -m80387 -mhard-float -mno-soft-float -mieee-fp
/ -mfp-ret-in-387 -mschedule-prologue -mcpu=i486 -march=i486

gcc2_compiled.:
.text
	.align 16
	.type	 DragonT__F__cutoffAdjust.0,@function
DragonT__F__cutoffAdjust.0:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl %ecx,-4(%ebp)
	movl -4(%ebp),%edi
	movl -48(%edi),%edx
	movl -52(%edi),%eax
	movl 20(%edx),%esi
	subl %eax,%esi
	movl -32(%edi),%eax
	movl %eax,-12(%ebp)
	movl -28(%edi),%eax
	movl %eax,-8(%ebp)
	js .L12
	movl $1,%ebx
	movl %esi,-16(%ebp)
	jmp .L4
	.align 16
.L5:
	leal -12(%ebp),%eax
	pushl %eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+100,%eax
	call *%eax
	incl %ebx
	addl $12,%esp
.L4:
	cmpl %ebx,-16(%ebp)
	jge .L5
	testl %esi,%esi
	jg .L7
.L12:
	movl $1,%ebx
	negl %esi
	jmp .L8
	.align 16
.L9:
	leal -12(%ebp),%eax
	pushl %eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+104,%eax
	call *%eax
	incl %ebx
	addl $12,%esp
.L8:
	cmpl %esi,%ebx
	jle .L9
.L7:
	leal -24(%edi),%eax
	pushl %eax
	pushl %eax
	leal -12(%ebp),%esi
	pushl %esi
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+88,%eax
	call *%eax
	leal -16(%edi),%ebx
	pushl %ebx
	pushl %ebx
	pushl %esi
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+88,%eax
	call *%eax
	addl $32,%esp
	pushl %esi
	pushl %ebx
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+84,%eax
	call *%eax
	testl %eax,%eax
	jne .L2
	movb $1,-57(%edi)
.L2:
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe1:
	.size	 DragonT__F__cutoffAdjust.0,.Lfe1-DragonT__F__cutoffAdjust.0
	.align 16
	.type	 DragonT__F__fixup.1,@function
DragonT__F__fixup.1:
	pushl %ebp
	movl %esp,%ebp
	subl $40,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl %ecx,-4(%ebp)
	movl -4(%ebp),%edi
	leal -12(%ebp),%ebx
	pushl %ebx
	movl -48(%edi),%eax
	movl 12(%eax),%eax
	decl %eax
	pushl %eax
	pushl $MI_DragonInt+60
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+92,%eax
	call *%eax
	pushl %ebx
	leal -8(%edi),%eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+84,%eax
	call *%eax
	addl $28,%esp
	testl %eax,%eax
	jne .L14
	leal -16(%edi),%eax
	pushl %eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	leal -40(%edi),%eax
	pushl %eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	leal -32(%edi),%eax
	pushl %eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	addl $36,%esp
.L14:
	movl $0,-52(%edi)
	jmp .L15
	.align 16
.L16:
	decl -52(%edi)
	pushl %ebx
	pushl %ebx
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+100,%eax
	call *%eax
	leal -24(%edi),%eax
	pushl %eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+100,%eax
	call *%eax
	leal -16(%edi),%eax
	pushl %eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+100,%eax
	call *%eax
	addl $36,%esp
.L15:
	leal -12(%ebp),%ebx
	pushl %ebx
	leal -32(%edi),%eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+104,%eax
	call *%eax
	pushl %ebx
	leal -40(%edi),%ebx
	pushl %ebx
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+84,%eax
	call *%eax
	addl $24,%esp
	testl %eax,%eax
	jl .L16
	jmp .L19
	.align 16
.L20:
	movl -40(%ebp),%esi
	pushl %esi
	pushl %esi
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+100,%eax
	call *%eax
	incl -52(%edi)
	addl $12,%esp
.L19:
	leal -12(%ebp),%ebx
	pushl %ebx
	leal -40(%edi),%eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	leal -20(%ebp),%esi
	movl %esi,-32(%ebp)
	pushl %esi
	leal -16(%edi),%eax
	pushl %eax
	pushl %ebx
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+76,%eax
	call *%eax
	leal -28(%ebp),%ebx
	pushl %ebx
	leal -32(%edi),%esi
	movl %esi,-40(%ebp)
	pushl %esi
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	addl $40,%esp
	pushl %ebx
	movl -32(%ebp),%esi
	pushl %esi
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+84,%eax
	call *%eax
	addl $12,%esp
	testl %eax,%eax
	jge .L20
	movl -48(%edi),%edx
	xorl %eax,%eax
	movb 16(%edx),%al
	testl %eax,%eax
	jle .L22
	cmpl $1,%eax
	jle .L28
	cmpl $2,%eax
	jle .L24
.L22:
	movl -52(%edi),%eax
	movl %eax,20(%edx)
	jmp .L25
	.align 16
.L24:
	movl -52(%edi),%eax
	addl %eax,20(%edx)
.L28:
	movl %edi,%ecx
	call DragonT__F__cutoffAdjust.0
.L25:
	leal -28(%ebp),%ebx
	pushl %ebx
	leal -40(%edi),%eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	leal -20(%ebp),%esi
	pushl %esi
	leal -16(%edi),%eax
	pushl %eax
	pushl %ebx
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+76,%eax
	call *%eax
	leal -12(%ebp),%ebx
	pushl %ebx
	leal -32(%edi),%eax
	pushl %eax
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	addl $40,%esp
	pushl %ebx
	pushl %esi
	movl -56(%edi),%eax
	pushl %eax
	movl MI_DragonInt+84,%eax
	call *%eax
	addl $12,%esp
	testl %eax,%eax
	jge .L19
	leal -52(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe2:
	.size	 DragonT__F__fixup.1,.Lfe2-DragonT__F__fixup.1
	.align 16
	.type	 DragonT__F,@function
DragonT__F:
	pushl %ebp
	movl %esp,%ebp
	subl $116,%esp
	pushl %edi
	pushl %esi
	xorb %al,%al
	pushl %ebx
	movl 16(%ebp),%edi
	leal 8(%ebp),%ebx
	movl %ebx,-48(%ebp)
	movb %al,-57(%ebp)
	movb %al,-96(%ebp)
	movl $0,-56(%ebp)
	movb -96(%ebp),%bl
	movb %bl,-57(%ebp)
	testl %edi,%edi
	jne .L29
	cmpl $0,12(%ebp)
	jne .L29
	movl 36(%ebp),%esi
	movl $1,(%esi)
	movl 40(%ebp),%ebx
	movl 12(%ebp),%esi
	movl %esi,(%ebx)
	movl 32(%ebp),%eax
	cmpl $0,4(%eax)
	jne .L30
	pushl $1346
	call _m3_fault
	.align 16
.L30:
	movl (%eax),%eax
	movb -96(%ebp),%bl
	movb %bl,(%eax)
	jmp .L1
	.align 16
.L29:
	movl MI_DragonInt+44,%eax
	call *%eax
	movl %eax,-56(%ebp)
	leal -8(%ebp),%esi
	movl %esi,-116(%ebp)
	pushl %esi
	pushl %edi
	movl 12(%ebp),%ebx
	pushl %ebx
	pushl %eax
	movl MI_DragonInt+68,%eax
	call *%eax
	movl 36(%ebp),%esi
	leal -40(%ebp),%eax
	xorl %edi,%edi
	movl %edi,%edx
	movl $0,(%esi)
	pushl %eax
	movl 8(%ebp),%eax
	subl 20(%ebp),%eax
	testl %eax,%eax
	jle .L31
	movl %eax,%edx
.L31:
	pushl %edx
	movl -116(%ebp),%ebx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+92,%eax
	call *%eax
	addl $32,%esp
	leal -32(%ebp),%eax
	movl %edi,%edx
	pushl %eax
	movl 20(%ebp),%eax
	subl 8(%ebp),%eax
	testl %eax,%eax
	jle .L33
	movl %eax,%edx
.L33:
	pushl %edx
	pushl $MI_DragonInt+60
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+92,%eax
	call *%eax
	leal -24(%ebp),%esi
	movl %esi,-112(%ebp)
	pushl %esi
	movl 8(%ebp),%eax
	subl 20(%ebp),%eax
	movl %edi,%edx
	testl %eax,%eax
	jle .L35
	movl %eax,%edx
.L35:
	pushl %edx
	pushl $MI_DragonInt+60
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+92,%eax
	call *%eax
	addl $32,%esp
	leal -16(%ebp),%eax
	pushl %eax
	movl -112(%ebp),%ebx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+72,%eax
	call *%eax
	movl %ebp,%ecx
	call DragonT__F__fixup.1
	addl $12,%esp
.L37:
	decl -52(%ebp)
	leal -68(%ebp),%edi
	pushl %edi
	leal -40(%ebp),%esi
	movl %esi,-100(%ebp)
	pushl %esi
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+100,%eax
	call *%eax
	pushl %esi
	leal -44(%ebp),%eax
	leal -32(%ebp),%ebx
	pushl %eax
	movl %ebx,-104(%ebp)
	pushl %ebx
	pushl %edi
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+108,%eax
	call *%eax
	addl $32,%esp
	leal -24(%ebp),%esi
	movl %esi,-112(%ebp)
	pushl %esi
	pushl %esi
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+100,%eax
	call *%eax
	leal -16(%ebp),%ebx
	movl %ebx,-108(%ebp)
	pushl %ebx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+100,%eax
	call *%eax
	pushl %edi
	movl -100(%ebp),%esi
	pushl %esi
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	addl $36,%esp
	movl -112(%ebp),%ebx
	pushl %ebx
	pushl %edi
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+84,%eax
	call *%eax
	shrl $31,%eax
	movb %al,-96(%ebp)
	leal -76(%ebp),%esi
	movl %esi,-116(%ebp)
	pushl %esi
	movl -104(%ebp),%ebx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	movl -108(%ebp),%esi
	pushl %esi
	movl -116(%ebp),%ebx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+84,%eax
	call *%eax
	addl $36,%esp
	testl %eax,%eax
	jge .L38
	movb $1,%dl
	jmp .L39
	.align 16
.L38:
	cmpb $0,-57(%ebp)
	je .L40
	pushl %edi
	movl -100(%ebp),%esi
	pushl %esi
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	leal -84(%ebp),%ebx
	movl %ebx,-112(%ebp)
	pushl %ebx
	movl -108(%ebp),%esi
	pushl %esi
	movl -116(%ebp),%ebx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+80,%eax
	call *%eax
	movl -112(%ebp),%esi
	pushl %esi
	pushl %edi
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+84,%eax
	call *%eax
	notl %eax
	movl %eax,%edx
	shrl $31,%edx
	addl $40,%esp
	jmp .L39
	.align 16
.L40:
	leal -84(%ebp),%ebx
	movl %ebx,-112(%ebp)
	pushl %ebx
	movl -100(%ebp),%esi
	pushl %esi
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	pushl %edi
	movl -108(%ebp),%ebx
	pushl %ebx
	movl -116(%ebp),%esi
	pushl %esi
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+80,%eax
	call *%eax
	pushl %edi
	movl -112(%ebp),%ebx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+84,%eax
	call *%eax
	addl $40,%esp
	testl %eax,%eax
	setg %dl
.L39:
	movl 36(%ebp),%esi
	cmpl $0,(%esi)
	jne .L41
	movl 40(%ebp),%ebx
	movl -52(%ebp),%eax
	movl %eax,(%ebx)
.L41:
	cmpb $0,-96(%ebp)
	jne .L65
	testb %dl,%dl
	jne .L44
	movl 28(%ebp),%eax
	cmpl %eax,-52(%ebp)
	je .L44
	movl 36(%ebp),%esi
	movl 32(%ebp),%eax
	movl (%esi),%ecx
	cmpl %ecx,4(%eax)
	ja .L45
	pushl $1906
	call _m3_fault
	.align 16
.L45:
	movl -44(%ebp),%edx
	cmpl $9,%edx
	jbe .L46
	pushl $1905
	call _m3_fault
	.align 16
.L46:
	movl (%eax),%eax
	addl %ecx,%eax
	movb %dl,(%eax)
	movl 36(%ebp),%ebx
	incl (%ebx)
	jmp .L37
	.align 16
.L44:
	cmpb $0,-96(%ebp)
	je .L47
.L65:
	testb %dl,%dl
	jne .L66
	movl 36(%ebp),%esi
	movl 32(%ebp),%eax
	movl (%esi),%ecx
	cmpl %ecx,4(%eax)
	ja .L48
	pushl $1986
	call _m3_fault
	.align 16
.L48:
	movl -44(%ebp),%edx
	cmpl $9,%edx
	jbe .L63
	pushl $1985
	call _m3_fault
	.align 16
.L47:
	testb %dl,%dl
	je .L51
.L66:
	cmpb $0,-96(%ebp)
	jne .L51
	movl 36(%ebp),%ebx
	movl 32(%ebp),%eax
	movl (%ebx),%ecx
	cmpl %ecx,4(%eax)
	ja .L52
	pushl $2018
	call _m3_fault
	.align 16
.L52:
	movl -44(%ebp),%edx
	incl %edx
	cmpl $9,%edx
	jbe .L63
	pushl $2017
	call _m3_fault
	.align 16
.L51:
	leal -92(%ebp),%ebx
	pushl %ebx
	leal -40(%ebp),%eax
	pushl %eax
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+96,%eax
	call *%eax
	leal -32(%ebp),%eax
	pushl %eax
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+84,%eax
	call *%eax
	addl $24,%esp
	cmpl $-1,%eax
	jle .L54
	testl %eax,%eax
	jle .L55
	cmpl $1,%eax
	jle .L56
.L54:
	movl 36(%ebp),%esi
	movl 32(%ebp),%eax
	movl (%esi),%ecx
	cmpl %ecx,4(%eax)
	ja .L57
	pushl $2066
	call _m3_fault
	.align 16
.L57:
	movl -44(%ebp),%edx
	cmpl $9,%edx
	jbe .L63
	pushl $2065
	call _m3_fault
	.align 16
.L55:
	movl 36(%ebp),%ebx
	movl 32(%ebp),%eax
	movl (%ebx),%ecx
	cmpl %ecx,4(%eax)
	ja .L60
	pushl $2082
	call _m3_fault
	.align 16
.L60:
	movl -44(%ebp),%edx
	cmpl $9,%edx
	jbe .L63
	pushl $2081
	call _m3_fault
	.align 16
.L56:
	movl 36(%ebp),%esi
	movl 32(%ebp),%eax
	movl (%esi),%ecx
	cmpl %ecx,4(%eax)
	ja .L62
	pushl $2098
	call _m3_fault
	.align 16
.L62:
	movl -44(%ebp),%edx
	incl %edx
	cmpl $9,%edx
	jbe .L63
	pushl $2097
	call _m3_fault
	.align 16
.L63:
	movl (%eax),%eax
	addl %ecx,%eax
	movb %dl,(%eax)
	movl 36(%ebp),%ebx
	incl (%ebx)
	movl -56(%ebp),%eax
	pushl %eax
	movl MI_DragonInt+48,%eax
	call *%eax
.L1:
	leal -128(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe3:
	.size	 DragonT__F,.Lfe3-DragonT__F
	.align 16
	.type	 _m3_fault,@function
_m3_fault:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	pushl %eax
	pushl $MM_DragonT
	movl MI_RTHooks+108,%eax
	call *%eax
	.align 16
.Lfe4:
	.size	 _m3_fault,.Lfe4-_m3_fault
.globl MM_DragonT
.data
	.align 4
	.type	 MM_DragonT,@object
	.size	 MM_DragonT,268
MM_DragonT:
	.long MM_DragonT+116
	.zero	16
	.long MM_DragonT+76
	.zero	20
	.long DragonT__F
	.ascii	"F"
	.zero	1
	.ascii	"F.fixup"
	.zero	1
	.ascii	"F.cutoffAdjust"
	.zero	4
	.long DragonT__F
	.long MM_DragonT+48
	.long MI_DragonT+44
	.long DragonT__F__fixup.1
	.long MM_DragonT+50
	.zero	4
	.long DragonT__F__cutoffAdjust.0
	.long MM_DragonT+58
	.zero	8
	.ascii	"/home/ftp/tmp/pm3/tmp/pm3-1.1.15/language/modula3/m3compiler"
	.ascii	"/m3bootstrap/LINUXLIBC6/pm3-LINUXLIBC6/boot-LINUXLIBC6/m3cor"
	.ascii	"e/src/float/Common/DragonT.m3"
	.zero	3
	.ident	"GCC: (GNU) cygnus-2.7.2-960712"
