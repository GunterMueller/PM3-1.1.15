	.file	"BldQuake.mc"
	.version	"01.01"
/ SRC Modula-3 version cygnus-2.7.2-960712 (i486--linuxelf) compiled by GNU C version egcs-2.91.66 19990314/Linux (egcs-1.1.2 release).
/ options passed:  -fno-strength-reduce -O2
/ options enabled:  -fdefer-pop -fcse-follow-jumps -fcse-skip-blocks
/ -fexpensive-optimizations -fthread-jumps -fpeephole -fforce-mem
/ -ffunction-cse -finline -fkeep-static-consts -fcaller-saves
/ -fpcc-struct-return -frerun-cse-after-loop -fschedule-insns2 -fcommon
/ -fverbose-asm -fgnu-linker -m80387 -mhard-float -mno-soft-float -mieee-fp
/ -mfp-ret-in-387 -mschedule-prologue -mcpu=i486 -march=i486

gcc2_compiled.:
.text
	.align 16
	.type	 BldQuake__Init,@function
BldQuake__Init:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	movl $MM_BldQuake+1192,%edx
	pushl %ebx
	movl 12(%ebp),%ebx
	movl MM_BldQuake+1192,%eax
	movl %eax,-12(%ebp)
	movl 4(%edx),%eax
	movl %eax,-8(%ebp)
	movl 8(%edx),%eax
	movl %eax,-4(%ebp)
	call BldQuake__InitProcs
	movl %eax,%esi
	movl MM_BldQuake+1232,%eax
	movl %esi,-20(%ebp)
	movl 52(%eax),%eax
	movl 4(%eax),%esi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%esi
	movl 8(%ebp),%edi
	movl (%edi),%eax
	movl 44(%eax),%ebx
	pushl %edi
	call *%ebx
	movl %eax,%esi
	pushl %esi
	movl MI_M3Driver+200,%eax
	call *%eax
	addl $16,%esp
	cmpl $0,-20(%ebp)
	jne .L2
	pushl $900
	call _m3_fault
	.align 16
.L2:
	movl -20(%ebp),%ecx
	movl $0,-28(%ebp)
	movl 4(%ecx),%ecx
	decl %ecx
	movl %ecx,-24(%ebp)
	jmp .L3
	.align 16
.L4:
	cmpl $0,-20(%ebp)
	jne .L5
	pushl $916
	call _m3_fault
	.align 16
.L5:
	movl -20(%ebp),%esi
	movl -28(%ebp),%edi
	cmpl %edi,4(%esi)
	ja .L6
	pushl $914
	call _m3_fault
	.align 16
.L6:
	movl (%esi),%eax
	movl -28(%ebp),%ecx
	movl 8(%ebp),%edi
	movl (%eax,%ecx,8),%eax
	movl %eax,-4(%ebp)
	movl (%edi),%eax
	movl -20(%ebp),%ebx
	movl 16(%eax),%esi
	cmpl %ecx,4(%ebx)
	ja .L8
	pushl $930
	call _m3_fault
	.align 16
.L8:
	movl (%ebx),%eax
	movl -28(%ebp),%ecx
	movl (%eax,%ecx,8),%edx
	testl %edx,%edx
	jne .L9
	pushl $932
	call _m3_fault
	.align 16
.L9:
	movl (%edx),%edx
	testl %edx,%edx
	jne .L12
	pushl $932
	call _m3_fault
	.align 16
.L12:
	movl -28(%ebp),%edi
	movb 4(%eax,%edi,8),%al
	andl $255,%eax
	pushl %eax
	leal -12(%ebp),%eax
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%esi
	incl %edi
	movl %edi,-28(%ebp)
	addl $16,%esp
.L3:
	movl -24(%ebp),%edi
	cmpl %edi,-28(%ebp)
	jle .L4
	movl 8(%ebp),%ecx
	movl 20(%ebp),%edi
	movl %edi,348(%ecx)
	movl 24(%ebp),%edi
	movl %edi,352(%ecx)
	movl 16(%ebp),%edi
	movl %edi,332(%ecx)
	movl %edi,336(%ecx)
	movl MM_BldQuake+1240,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl 8(%ebp),%ecx
	movl %eax,%ebx
	movl %ebx,344(%ecx)
	movl MM_BldQuake+1248,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl (%esi),%eax
	movl 24(%eax),%ebx
	pushl $0
	pushl %esi
	call *%ebx
	movl 8(%ebp),%edi
	movl %eax,%esi
	movl %esi,356(%edi)
	movl MM_BldQuake+1248,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $10
	pushl %ebx
	call *%esi
	movl %eax,%ebx
	addl $36,%esp
	movl %ebx,360(%edi)
	pushl $0
	movl 332(%edi),%eax
	pushl %eax
	movl MI_M3ID+44,%eax
	movl %ebx,%esi
	call *%eax
	movl %eax,%edx
	movl (%esi),%eax
	movl 8(%eax),%ebx
	movl %edx,-16(%ebp)
	movl 8(%ebp),%eax
	addl $348,%eax
	pushl %eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl MM_BldQuake+1248,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $10
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,364(%edi)
	addl $32,%esp
	movl MM_BldQuake+1256,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $10
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,368(%edi)
	movl MM_BldQuake+1264,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $10
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,372(%edi)
	movl MM_BldQuake+1272,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,376(%edi)
	addl $36,%esp
	movl MM_BldQuake+1280,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 4(%eax),%esi
	pushl $5
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,380(%edi)
	movl MM_BldQuake+1272,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,384(%edi)
	movl MM_BldQuake+1280,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 4(%eax),%esi
	pushl $5
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,388(%edi)
	addl $36,%esp
	movl MM_BldQuake+1272,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,396(%edi)
	movl MM_BldQuake+1272,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,400(%edi)
	movl MM_BldQuake+1272,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,404(%edi)
	addl $36,%esp
	movl MM_BldQuake+1272,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,408(%edi)
	movl MM_BldQuake+1272,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,412(%edi)
	movl MM_BldQuake+1248,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,416(%edi)
	addl $36,%esp
	movl MM_BldQuake+1272,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,420(%edi)
	movl MM_BldQuake+1280,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 4(%eax),%esi
	pushl $5
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,424(%edi)
	movl MM_BldQuake+1288,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,428(%edi)
	addl $36,%esp
	movl MM_BldQuake+1272,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%esi
	movl %esi,432(%edi)
	movl MI_M3Buf+44,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,436(%edi)
	movl MM_BldQuake+1272,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl (%esi),%eax
	movl 24(%eax),%ebx
	pushl $0
	pushl %esi
	call *%ebx
	movl %eax,%esi
	movl %esi,440(%edi)
	movl MM_BldQuake+1288,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 24(%eax),%esi
	pushl $0
	pushl %ebx
	call *%esi
	movl %eax,%ebx
	movl %ebx,444(%edi)
	addl $36,%esp
	movl MM_BldQuake+1288,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl (%esi),%eax
	movl 24(%eax),%ebx
	pushl $0
	pushl %esi
	call *%ebx
	movl %eax,%esi
	movl %esi,448(%edi)
	movl MM_BldQuake+1280,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 4(%eax),%esi
	pushl $5
	pushl %ebx
	call *%esi
	movl %eax,%ebx
	movl %ebx,452(%edi)
	movl MM_BldQuake+1280,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl (%esi),%eax
	movl 4(%eax),%ebx
	pushl $5
	pushl %esi
	call *%ebx
	movl %eax,%esi
	movl %esi,456(%edi)
	addl $36,%esp
	movl MM_BldQuake+1280,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 4(%eax),%esi
	pushl $5
	pushl %ebx
	call *%esi
	movl %eax,%ebx
	movl %ebx,492(%edi)
	movl $0,180(%edi)
	movl $0,184(%edi)
	movl $0,188(%edi)
	movl $0,192(%edi)
	movb $0,196(%edi)
	leal -40(%ebp),%esp
	movl 8(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe1:
	.size	 BldQuake__Init,.Lfe1-BldQuake__Init
	.align 16
	.type	 BldQuake__DoPkg,@function
BldQuake__DoPkg:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L15
	pushl $1680
	call _m3_fault
	.align 16
.L15:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L16
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L17
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L16
.L17:
	pushl $1717
	call _m3_fault
	.align 16
.L16:
	pushl %esi
	pushl %edi
	call BldQuake__Pkg
	pushl %eax
	pushl %edi
	movl MI_QMachRep+680,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe2:
	.size	 BldQuake__DoPkg,.Lfe2-BldQuake__DoPkg
	.align 16
	.type	 BldQuake__Pkg,@function
BldQuake__Pkg:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-4(%ebp)
	pushl $0
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl 360(%ecx),%ebx
	movl %eax,%edi
	movl (%ebx),%eax
	leal -4(%ebp),%esi
	movl 4(%eax),%edx
	movl %edi,-8(%ebp)
	pushl %esi
	leal -8(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $20,%esp
	testl %eax,%eax
	jne .L19
	movl 8(%ebp),%ecx
	movl 140(%ecx),%eax
	movl %eax,-4(%ebp)
	movl 364(%ecx),%edx
	movl (%edx),%eax
	movl 4(%eax),%ebx
	movl %edi,-12(%ebp)
	pushl %esi
	leal -12(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%ebx
	movl 8(%ebp),%ecx
	movl 204(%ecx),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 8(%ebp),%ecx
	movl %edx,-4(%ebp)
	movl 360(%ecx),%edx
	movl (%edx),%eax
	movl 8(%eax),%ebx
	movl %edi,-16(%ebp)
	pushl %esi
	leal -16(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%ebx
.L19:
	movl -4(%ebp),%eax
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe3:
	.size	 BldQuake__Pkg,.Lfe3-BldQuake__Pkg
	.align 16
	.type	 BldQuake__DoM3include,@function
BldQuake__DoM3include:
	pushl %ebp
	movl %esp,%ebp
	subl $56,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L22
	pushl $2032
	call _m3_fault
	.align 16
.L22:
	movl 8(%ebp),%edx
	movl (%edx),%eax
	leal -12(%ebp),%edx
	movl 28(%eax),%edi
	movl %edx,-52(%ebp)
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call *%edi
	movl 8(%ebp),%edx
	movl (%edx),%eax
	leal -24(%ebp),%edx
	movl 28(%eax),%edi
	movl %edx,-56(%ebp)
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call *%edi
	movl 8(%ebp),%edx
	movl (%edx),%eax
	leal -36(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %edx
	call *%edi
	movl 8(%ebp),%edx
	movl (%edx),%eax
	leal -48(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %edx
	call *%edi
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	movl -56(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -52(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	pushl %eax
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%edx
	pushl %edx
	call BldQuake__M3include
	leal -68(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe4:
	.size	 BldQuake__DoM3include,.Lfe4-BldQuake__DoM3include
	.align 16
	.type	 BldQuake__M3include,@function
BldQuake__M3include:
	pushl %ebp
	movl %esp,%ebp
	subl $184,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	testl %ecx,%ecx
	je .L24
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L25
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L24
.L25:
	pushl $2229
	call _m3_fault
	.align 16
.L24:
	movl %ecx,-184(%ebp)
.L26:
	movl $MM_BldQuake+1304,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%edi
	movl %edi,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L27
	movl 12(%ebp),%edi
	pushl %edi
	movl -184(%ebp),%edi
	pushl %edi
	movl MI_QMachRep+676,%eax
	call *%eax
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L23
	.align 16
.L27:
	movl -164(%ebp),%ebx
	movl 16(%ebp),%edi
	pushl %edi
	pushl $MM_BldQuake+1316
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+1352
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl -184(%ebp),%edi
	movl %eax,%edx
	movl 200(%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+1368
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	movl 20(%ebp),%edi
	pushl %edi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+1404
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 24(%ebp),%edi
	pushl %edi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+1432
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%esi
	pushl %edi
	movl -184(%ebp),%edi
	pushl %edi
	call BldQuake__Pkg
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+1448
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 200(%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	addl $32,%esp
	movl 200(%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %ebx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
.L23:
	leal -196(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe5:
	.size	 BldQuake__M3include,.Lfe5-BldQuake__M3include
	.align 16
	.type	 BldQuake__DoLocation,@function
BldQuake__DoLocation:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L31
	pushl $2496
	call _m3_fault
	.align 16
.L31:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L32
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L33
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L32
.L33:
	pushl $2549
	call _m3_fault
	.align 16
.L32:
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QMachRep+680,%eax
	call *%eax
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe6:
	.size	 BldQuake__DoLocation,.Lfe6-BldQuake__DoLocation
	.align 16
	.type	 BldQuake__Location,@function
BldQuake__Location:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	pushl $0
	pushl %ebx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-28(%ebp)
	addl $8,%esp
	cmpl %eax,MM_BldQuake+44
	jne .L35
	movl 8(%ebp),%ecx
	movl 368(%ecx),%esi
	movl %eax,-16(%ebp)
	movl 16(%ebp),%eax
	movl %eax,-12(%ebp)
	movl (%esi),%eax
	movl 8(%eax),%edi
	leal -16(%ebp),%eax
	pushl %eax
	leal 16(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edi
	movl 16(%ebp),%eax
	jmp .L42
	.align 16
.L35:
	movl 8(%ebp),%ecx
	movl 372(%ecx),%edi
	movl (%edi),%eax
	movl -28(%ebp),%ecx
	movl 4(%eax),%esi
	movl %ecx,-20(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -20(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%esi
	addl $12,%esp
	testl %eax,%eax
	jne .L36
	movl 16(%ebp),%eax
	pushl %eax
	movl MI_Pathname+80,%eax
	call *%eax
	addl $4,%esp
	testl %eax,%eax
	je .L37
	movl 16(%ebp),%eax
	movl %eax,-4(%ebp)
	jmp .L38
	.align 16
.L37:
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Pkg
	movl 8(%ebp),%ecx
	movl %eax,%esi
	movl 204(%ecx),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edi
	movl 16(%ebp),%eax
	pushl %eax
	pushl %edi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-4(%ebp)
	addl $24,%esp
.L38:
	movl MM_BldQuake+1288,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl (%esi),%eax
	movl 24(%eax),%edi
	pushl $5
	pushl %esi
	call *%edi
	movl %eax,%esi
	movl %esi,%edx
	movl %esi,-8(%ebp)
	movl (%edx),%eax
	leal -4(%ebp),%ebx
	movl 8(%eax),%esi
	pushl %ebx
	leal 16(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%esi
	movl 8(%ebp),%ecx
	movl 372(%ecx),%esi
	movl (%esi),%eax
	movl -28(%ebp),%ecx
	movl 8(%eax),%edi
	movl %ecx,-24(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -24(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edi
	movl 8(%ebp),%ecx
	movl 16(%ebp),%eax
	movl 368(%ecx),%edi
	movl -28(%ebp),%ecx
	movl %ecx,-16(%ebp)
	movl %eax,-12(%ebp)
	movl (%edi),%eax
	addl $36,%esp
	movl 8(%eax),%esi
	leal -16(%ebp),%eax
	pushl %eax
	pushl %ebx
	pushl %edi
	call *%esi
	jmp .L39
	.align 16
.L36:
	movl -8(%ebp),%edx
	movl (%edx),%eax
	movl 4(%eax),%esi
	leal -4(%ebp),%eax
	pushl %eax
	leal 16(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%esi
	addl $12,%esp
	testl %eax,%eax
	jne .L39
	movl 16(%ebp),%eax
	pushl %eax
	movl MI_Pathname+80,%eax
	call *%eax
	addl $4,%esp
	testl %eax,%eax
	je .L40
	movl 16(%ebp),%eax
	movl %eax,-4(%ebp)
	jmp .L41
	.align 16
.L40:
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Pkg
	movl 8(%ebp),%ecx
	movl %eax,%esi
	movl 204(%ecx),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edi
	movl 16(%ebp),%eax
	pushl %eax
	pushl %edi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-4(%ebp)
	addl $24,%esp
.L41:
	movl -8(%ebp),%edx
	movl (%edx),%eax
	leal -4(%ebp),%ebx
	movl 8(%eax),%esi
	pushl %ebx
	leal 16(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%esi
	movl 8(%ebp),%ecx
	movl 16(%ebp),%eax
	movl 368(%ecx),%esi
	movl -28(%ebp),%ecx
	movl %ecx,-16(%ebp)
	movl %eax,-12(%ebp)
	movl (%esi),%eax
	movl 8(%eax),%edi
	leal -16(%ebp),%eax
	pushl %eax
	pushl %ebx
	pushl %esi
	call *%edi
.L39:
	movl -4(%ebp),%eax
.L42:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe7:
	.size	 BldQuake__Location,.Lfe7-BldQuake__Location
	.align 16
	.type	 BldQuake__DoLocPkg,@function
BldQuake__DoLocPkg:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L44
	pushl $3296
	call _m3_fault
	.align 16
.L44:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L45
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L46
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L45
.L46:
	pushl $3333
	call _m3_fault
	.align 16
.L45:
	pushl %esi
	pushl %edi
	call BldQuake__LocPkg
	pushl %eax
	pushl %edi
	movl MI_QMachRep+680,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe8:
	.size	 BldQuake__DoLocPkg,.Lfe8-BldQuake__DoLocPkg
	.align 16
	.type	 BldQuake__LocPkg,@function
BldQuake__LocPkg:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl 368(%eax),%edx
	movl (%edx),%eax
	subl $8,%esp
	movl 4(%eax),%ecx
	leal -8(%ebp),%eax
	pushl %eax
	leal 12(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%ecx
	addl $12,%esp
	testl %eax,%eax
	je .L49
	movl -8(%ebp),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,%ecx
.L49:
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe9:
	.size	 BldQuake__LocPkg,.Lfe9-BldQuake__LocPkg
	.align 16
	.type	 BldQuake__DoLocSubdir,@function
BldQuake__DoLocSubdir:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L51
	pushl $3568
	call _m3_fault
	.align 16
.L51:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L52
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L53
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L52
.L53:
	pushl $3605
	call _m3_fault
	.align 16
.L52:
	pushl %esi
	pushl %edi
	call BldQuake__LocSubdir
	pushl %eax
	pushl %edi
	movl MI_QMachRep+680,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe10:
	.size	 BldQuake__DoLocSubdir,.Lfe10-BldQuake__DoLocSubdir
	.align 16
	.type	 BldQuake__LocSubdir,@function
BldQuake__LocSubdir:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl 368(%eax),%edx
	movl (%edx),%eax
	subl $8,%esp
	movl 4(%eax),%ecx
	leal -8(%ebp),%eax
	pushl %eax
	leal 12(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%ecx
	movl -4(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe11:
	.size	 BldQuake__LocSubdir,.Lfe11-BldQuake__LocSubdir
	.align 16
	.type	 BldQuake__DoPathOf,@function
BldQuake__DoPathOf:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L56
	pushl $3840
	call _m3_fault
	.align 16
.L56:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L57
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L58
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L57
.L58:
	pushl $3877
	call _m3_fault
	.align 16
.L57:
	pushl %esi
	pushl %edi
	call BldQuake__PathOf
	pushl %eax
	pushl %edi
	movl MI_QMachRep+680,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe12:
	.size	 BldQuake__DoPathOf,.Lfe12-BldQuake__DoPathOf
	.align 16
	.type	 BldQuake__PathOf,@function
BldQuake__PathOf:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 68(%esi),%eax
	testl %eax,%eax
	jne .L60
	pushl $3940
	call _m3_fault
	.align 16
.L60:
	movl %eax,%edx
	movl 36(%esi),%ecx
	leal -1(%ecx),%eax
	cmpl %eax,4(%edx)
	ja .L61
	pushl $3938
	call _m3_fault
	.align 16
.L61:
	leal (%ecx,%ecx,2),%eax
	sall $2,%eax
	addl (%edx),%eax
	movl -12(%eax),%eax
	movl 12(%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl MI_Pathname+84,%eax
	call *%eax
	movl %eax,%ebx
	movl 472(%esi),%eax
	pushl %eax
	pushl %ebx
	movl MI_Text+48,%eax
	call *%eax
	addl $16,%esp
	testl %eax,%eax
	jne .L62
	movl %ebx,472(%esi)
	pushl %esi
	call BldQuake__PkgSubdir
	movl %eax,%ebx
	movl %ebx,-4(%ebp)
	pushl %ebx
	movl MI_Pathname+80,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L63
	movl 204(%esi),%eax
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,476(%esi)
	addl $8,%esp
	jmp .L62
	.align 16
.L63:
	movl 332(%esi),%eax
	pushl %eax
	pushl %esi
	call BldQuake__Pkg
	movl %eax,%edx
	movl 204(%esi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl -4(%ebp),%edi
	pushl %edi
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 204(%esi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,476(%esi)
	addl $32,%esp
.L62:
	movl 12(%ebp),%edi
	pushl %edi
	movl 476(%esi),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	leal -16(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe13:
	.size	 BldQuake__PathOf,.Lfe13-BldQuake__PathOf
	.align 16
	.type	 BldQuake__DoNormalize,@function
BldQuake__DoNormalize:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L66
	pushl $4256
	call _m3_fault
	.align 16
.L66:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L67
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L68
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L67
.L68:
	pushl $4309
	call _m3_fault
	.align 16
.L67:
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Normalize
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QMachRep+680,%eax
	call *%eax
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe14:
	.size	 BldQuake__DoNormalize,.Lfe14-BldQuake__DoNormalize
	.align 16
	.type	 BldQuake__Normalize,@function
BldQuake__Normalize:
	pushl %ebp
	movl %esp,%ebp
	subl $180,%esp
	pushl %ebx
.L70:
	movl $MM_BldQuake+1460,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L71
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_Pathname+72,%eax
	call *%eax
	movl %eax,%ebx
	movl 16(%ebp),%ecx
	pushl %ecx
	movl MI_Pathname+72,%eax
	call *%eax
	pushl %eax
	movl MI_QMachRep+668,%eax
	call *%eax
	pushl %eax
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QMachRep+672,%eax
	call *%eax
	pushl %eax
	movl MI_Pathname+76,%eax
	call *%eax
	movl %eax,%edx
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	movl %edx,%eax
	jmp .L69
	.align 16
.L71:
	pushl $MM_BldQuake+1472
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
.L69:
	movl -184(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe15:
	.size	 BldQuake__Normalize,.Lfe15-BldQuake__Normalize
	.align 16
	.type	 BldQuake__DoPkgSubdir,@function
BldQuake__DoPkgSubdir:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ebx
	cmpl $0,12(%ebp)
	je .L75
	pushl $4624
	call _m3_fault
	.align 16
.L75:
	testl %ebx,%ebx
	je .L76
	movl -4(%ebx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L77
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L76
.L77:
	pushl $4645
	call _m3_fault
	.align 16
.L76:
	pushl %ebx
	call BldQuake__PkgSubdir
	pushl %eax
	pushl %ebx
	movl MI_QMachRep+680,%eax
	call *%eax
	movl -4(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe16:
	.size	 BldQuake__DoPkgSubdir,.Lfe16-BldQuake__DoPkgSubdir
	.align 16
	.type	 BldQuake__PkgSubdir,@function
BldQuake__PkgSubdir:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 68(%esi),%ecx
	testl %ecx,%ecx
	jne .L79
	pushl $4708
	call _m3_fault
	.align 16
.L79:
	movl 36(%esi),%edx
	leal -1(%edx),%eax
	cmpl %eax,4(%ecx)
	ja .L80
	pushl $4706
	call _m3_fault
	.align 16
.L80:
	leal (%edx,%edx,2),%eax
	sall $2,%eax
	addl (%ecx),%eax
	movl -12(%eax),%eax
	movl 12(%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	pushl %eax
	movl MI_Pathname+84,%eax
	call *%eax
	movl %eax,%ebx
	movl 480(%esi),%eax
	pushl %eax
	pushl %ebx
	movl MI_Text+48,%eax
	call *%eax
	addl $16,%esp
	testl %eax,%eax
	jne .L81
	movl %ebx,480(%esi)
	pushl %ebx
	movl 348(%esi),%eax
	pushl %eax
	pushl %esi
	call BldQuake__Normalize
	movl %eax,484(%esi)
.L81:
	leal -8(%ebp),%esp
	movl 484(%esi),%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe17:
	.size	 BldQuake__PkgSubdir,.Lfe17-BldQuake__PkgSubdir
	.align 16
	.type	 BldQuake__DoProgramName,@function
BldQuake__DoProgramName:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L83
	pushl $4944
	call _m3_fault
	.align 16
.L83:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L84
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L85
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L84
.L85:
	pushl $4981
	call _m3_fault
	.align 16
.L84:
	pushl %esi
	pushl %edi
	call BldQuake__ProgramName
	pushl %eax
	pushl %edi
	movl MI_QMachRep+680,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe18:
	.size	 BldQuake__DoProgramName,.Lfe18-BldQuake__DoProgramName
	.align 16
	.type	 BldQuake__ProgramName,@function
BldQuake__ProgramName:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 240(%eax),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe19:
	.size	 BldQuake__ProgramName,.Lfe19-BldQuake__ProgramName
	.align 16
	.type	 BldQuake__DoLibraryName,@function
BldQuake__DoLibraryName:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L88
	pushl $5152
	call _m3_fault
	.align 16
.L88:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L89
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L90
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L89
.L90:
	pushl $5189
	call _m3_fault
	.align 16
.L89:
	pushl %esi
	pushl %edi
	call BldQuake__LibraryName
	pushl %eax
	pushl %edi
	movl MI_QMachRep+680,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe20:
	.size	 BldQuake__DoLibraryName,.Lfe20-BldQuake__DoLibraryName
	.align 16
	.type	 BldQuake__LibraryName,@function
BldQuake__LibraryName:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	pushl %eax
	movl 232(%ebx),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 236(%ebx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl -4(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe21:
	.size	 BldQuake__LibraryName,.Lfe21-BldQuake__LibraryName
	.align 16
	.type	 BldQuake__Do_ImportTemplate,@function
BldQuake__Do_ImportTemplate:
	pushl %ebp
	movl %esp,%ebp
	subl $40,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L93
	pushl $5424
	call _m3_fault
	.align 16
.L93:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-40(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -40(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	cmpl $0,8(%ebp)
	je .L94
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L95
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L94
.L95:
	pushl $5493
	call _m3_fault
	.align 16
.L94:
	pushl %esi
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_ImportTemplate
	leal -52(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe22:
	.size	 BldQuake__Do_ImportTemplate,.Lfe22-BldQuake__Do_ImportTemplate
	.align 16
	.type	 BldQuake__U_ImportTemplate,@function
BldQuake__U_ImportTemplate:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 16(%ebp),%esi
	movl 20(%ebp),%edi
	pushl %esi
	pushl %ebx
	call BldQuake__Pkg
	movl %eax,%edx
	movl 204(%ebx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %edi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 204(%ebx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %esi
	pushl %edi
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl %eax
	pushl %ebx
	call BldQuake__M3include
	leal -12(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe23:
	.size	 BldQuake__U_ImportTemplate,.Lfe23-BldQuake__U_ImportTemplate
	.align 16
	.type	 BldQuake__Do_ImportM3Lib,@function
BldQuake__Do_ImportM3Lib:
	pushl %ebp
	movl %esp,%ebp
	subl $40,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L98
	pushl $5664
	call _m3_fault
	.align 16
.L98:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-40(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -40(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	cmpl $0,8(%ebp)
	je .L99
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L100
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L99
.L100:
	pushl $5733
	call _m3_fault
	.align 16
.L99:
	pushl %esi
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_ImportM3Lib
	leal -52(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe24:
	.size	 BldQuake__Do_ImportM3Lib,.Lfe24-BldQuake__Do_ImportM3Lib
	.align 16
	.type	 BldQuake__U_ImportM3Lib,@function
BldQuake__U_ImportM3Lib:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 20(%ebp),%esi
	pushl $0
	movl 12(%ebp),%eax
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ebx
	movl 8(%ebp),%ecx
	movl MM_BldQuake+1512,%eax
	movl 376(%ecx),%ecx
	movl %ecx,-12(%ebp)
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%edi)
	movb $1,4(%edi)
	movb $0,5(%edi)
	movl -12(%ebp),%ecx
	movl (%ecx),%eax
	movl 8(%eax),%esi
	movl %ebx,-4(%ebp)
	movl %edi,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%esi
	movl 8(%ebp),%ecx
	movl 380(%ecx),%esi
	movl (%esi),%eax
	addl $36,%esp
	movl 16(%eax),%edx
	leal 12(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe25:
	.size	 BldQuake__U_ImportM3Lib,.Lfe25-BldQuake__U_ImportM3Lib
	.align 16
	.type	 BldQuake__Do_ImportOtherLib,@function
BldQuake__Do_ImportOtherLib:
	pushl %ebp
	movl %esp,%ebp
	subl $40,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L103
	pushl $5968
	call _m3_fault
	.align 16
.L103:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-40(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -40(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	cmpl $0,8(%ebp)
	je .L104
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L105
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L104
.L105:
	pushl $6037
	call _m3_fault
	.align 16
.L104:
	pushl %esi
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_ImportOtherLib
	leal -52(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe26:
	.size	 BldQuake__Do_ImportOtherLib,.Lfe26-BldQuake__Do_ImportOtherLib
	.align 16
	.type	 BldQuake__U_ImportOtherLib,@function
BldQuake__U_ImportOtherLib:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	pushl $0
	movl 12(%ebp),%eax
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,-20(%ebp)
	movl 384(%ecx),%ebx
	movl (%ebx),%eax
	movl -20(%ebp),%ecx
	movl 4(%eax),%edi
	movl %ecx,-8(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edi
	addl $20,%esp
	testl %eax,%eax
	jne .L106
	movl 8(%ebp),%ecx
	movl 384(%ecx),%edi
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	pushl %esi
	movl %eax,%ebx
	pushl $MM_BldQuake+1524
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%ebx)
	movb $1,4(%ebx)
	movb 20(%ebp),%cl
	movb %cl,5(%ebx)
	movl (%edi),%eax
	movl -20(%ebp),%ecx
	movl 8(%eax),%esi
	movl %ecx,-12(%ebp)
	movl %ebx,-16(%ebp)
	leal -16(%ebp),%eax
	pushl %eax
	leal -12(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%esi
	movl 8(%ebp),%ecx
	movl 388(%ecx),%esi
	movl (%esi),%eax
	movl 12(%eax),%edx
	leal 12(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
.L106:
	leal -32(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe27:
	.size	 BldQuake__U_ImportOtherLib,.Lfe27-BldQuake__U_ImportOtherLib
	.align 16
	.type	 BldQuake__Do_MapAddInterface,@function
BldQuake__Do_MapAddInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L109
	pushl $6368
	call _m3_fault
	.align 16
.L109:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-52(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-56(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -48(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,-60(%ebp)
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	movl -56(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -52(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%esi
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L110
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L111
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L110
.L111:
	pushl $6453
	call _m3_fault
	.align 16
.L110:
	pushl %esi
	pushl %ebx
	pushl %edi
	movl -60(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_MapAddInterface
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe28:
	.size	 BldQuake__Do_MapAddInterface,.Lfe28-BldQuake__Do_MapAddInterface
	.align 16
	.type	 BldQuake__U_MapAddInterface,@function
BldQuake__U_MapAddInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 20(%ebp),%ebx
	movl 8(%ebp),%ecx
	movl MM_BldQuake+1512,%eax
	movl 396(%ecx),%esi
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edi
	pushl %ebx
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%edi)
	movb 24(%ebp),%cl
	movb %cl,4(%edi)
	movb $0,5(%edi)
	movl (%esi),%eax
	movl 12(%ebp),%ecx
	movl 8(%eax),%edx
	movl %ecx,-4(%ebp)
	movl %edi,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe29:
	.size	 BldQuake__U_MapAddInterface,.Lfe29-BldQuake__U_MapAddInterface
	.align 16
	.type	 BldQuake__Do_MapAddGenericInterface,@function
BldQuake__Do_MapAddGenericInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $232,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L114
	pushl $6704
	call _m3_fault
	.align 16
.L114:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	movl 28(%eax),%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%ebx
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	movl 28(%eax),%ebx
	leal -24(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%ebx
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	movl 28(%eax),%ebx
	leal -36(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%ebx
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	movl 28(%eax),%ebx
	leal -48(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%ebx
	addl $32,%esp
.L115:
	movl $MM_BldQuake+1548,-220(%ebp)
	movl $0,-224(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-228(%ebp)
	leal -228(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -208(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L116
	leal -36(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	leal -24(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	leal -12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%esi
	leal -48(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,-232(%ebp)
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L117
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L118
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L117
.L118:
	pushl $6805
	call _m3_fault
	.align 16
.L117:
	pushl $0
	movl -232(%ebp),%ecx
	pushl %ecx
	pushl %esi
	pushl %edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_MapAddGenericInterface
	movl -228(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L113
	.align 16
.L116:
	pushl $MM_BldQuake+1560
	call BldQuake__CErr
.L113:
	leal -244(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe30:
	.size	 BldQuake__Do_MapAddGenericInterface,.Lfe30-BldQuake__Do_MapAddGenericInterface
	.align 16
	.type	 BldQuake__U_MapAddGenericInterface,@function
BldQuake__U_MapAddGenericInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 24(%ebp),%edi
	movl 28(%ebp),%esi
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,%ebx
	movl %ebx,-12(%ebp)
	addl $12,%esp
	testl %esi,%esi
	jne .L122
	pushl %edi
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,%esi
	addl $4,%esp
	jmp .L123
	.align 16
.L122:
	testl %edi,%edi
	jne .L123
	pushl %edi
	pushl %esi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	addl $8,%esp
.L123:
	movl 8(%ebp),%ecx
	movl 204(%ecx),%eax
	pushl %eax
	movl -12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %esi
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $1
	movl %eax,%esi
	pushl %esi
	pushl $0
	movl MI_M3Driver+316,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl MM_BldQuake+1512,%eax
	movl 404(%ecx),%esi
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%ebx)
	movb 20(%ebp),%cl
	movb %cl,4(%ebx)
	movb $0,5(%ebx)
	movl (%esi),%eax
	movl 8(%eax),%edx
	movl %edi,-4(%ebp)
	movl %ebx,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe31:
	.size	 BldQuake__U_MapAddGenericInterface,.Lfe31-BldQuake__U_MapAddGenericInterface
	.align 16
	.type	 BldQuake__Do_MapAddModule,@function
BldQuake__Do_MapAddModule:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L126
	pushl $7264
	call _m3_fault
	.align 16
.L126:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-52(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-56(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -48(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,-60(%ebp)
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	movl -56(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -52(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%esi
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L127
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L128
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L127
.L128:
	pushl $7349
	call _m3_fault
	.align 16
.L127:
	pushl %esi
	pushl %ebx
	pushl %edi
	movl -60(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_MapAddModule
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe32:
	.size	 BldQuake__Do_MapAddModule,.Lfe32-BldQuake__Do_MapAddModule
	.align 16
	.type	 BldQuake__U_MapAddModule,@function
BldQuake__U_MapAddModule:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 20(%ebp),%ebx
	movl 8(%ebp),%ecx
	movl MM_BldQuake+1512,%eax
	movl 400(%ecx),%esi
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edi
	pushl %ebx
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%edi)
	movb 24(%ebp),%cl
	movb %cl,4(%edi)
	movb $0,5(%edi)
	movl (%esi),%eax
	movl 12(%ebp),%ecx
	movl 8(%eax),%edx
	movl %ecx,-4(%ebp)
	movl %edi,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe33:
	.size	 BldQuake__U_MapAddModule,.Lfe33-BldQuake__U_MapAddModule
	.align 16
	.type	 BldQuake__Do_MapAddGenericModule,@function
BldQuake__Do_MapAddGenericModule:
	pushl %ebp
	movl %esp,%ebp
	subl $232,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L131
	pushl $7600
	call _m3_fault
	.align 16
.L131:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	movl 28(%eax),%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%ebx
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	movl 28(%eax),%ebx
	leal -24(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%ebx
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	movl 28(%eax),%ebx
	leal -36(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%ebx
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	movl 28(%eax),%ebx
	leal -48(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%ebx
	addl $32,%esp
.L132:
	movl $MM_BldQuake+1548,-220(%ebp)
	movl $0,-224(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-228(%ebp)
	leal -228(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -208(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L133
	leal -36(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	leal -24(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	leal -12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%esi
	leal -48(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,-232(%ebp)
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L134
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L135
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L134
.L135:
	pushl $7701
	call _m3_fault
	.align 16
.L134:
	pushl $0
	movl -232(%ebp),%ecx
	pushl %ecx
	pushl %esi
	pushl %edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_MapAddGenericModule
	movl -228(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L130
	.align 16
.L133:
	pushl $MM_BldQuake+1600
	call BldQuake__CErr
.L130:
	leal -244(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe34:
	.size	 BldQuake__Do_MapAddGenericModule,.Lfe34-BldQuake__Do_MapAddGenericModule
	.align 16
	.type	 BldQuake__U_MapAddGenericModule,@function
BldQuake__U_MapAddGenericModule:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 24(%ebp),%edi
	movl 28(%ebp),%esi
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,%ebx
	movl %ebx,-12(%ebp)
	addl $12,%esp
	testl %esi,%esi
	jne .L139
	pushl %edi
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,%esi
	addl $4,%esp
	jmp .L140
	.align 16
.L139:
	testl %edi,%edi
	jne .L140
	pushl %edi
	pushl %esi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	addl $8,%esp
.L140:
	movl 8(%ebp),%ecx
	movl 204(%ecx),%eax
	pushl %eax
	movl -12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %esi
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $1
	movl %eax,%esi
	pushl %esi
	pushl $0
	movl MI_M3Driver+316,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl MM_BldQuake+1512,%eax
	movl 408(%ecx),%esi
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%ebx)
	movb 20(%ebp),%cl
	movb %cl,4(%ebx)
	movb $0,5(%ebx)
	movl (%esi),%eax
	movl 8(%eax),%edx
	movl %edi,-4(%ebp)
	movl %ebx,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe35:
	.size	 BldQuake__U_MapAddGenericModule,.Lfe35-BldQuake__U_MapAddGenericModule
	.align 16
	.type	 BldQuake__Do_MapAddC,@function
BldQuake__Do_MapAddC:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L143
	pushl $8160
	call _m3_fault
	.align 16
.L143:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-52(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-56(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -48(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,-60(%ebp)
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	movl -56(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -52(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%esi
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L144
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L145
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L144
.L145:
	pushl $8245
	call _m3_fault
	.align 16
.L144:
	pushl %esi
	pushl %ebx
	pushl %edi
	movl -60(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_MapAddC
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe36:
	.size	 BldQuake__Do_MapAddC,.Lfe36-BldQuake__Do_MapAddC
	.align 16
	.type	 BldQuake__U_MapAddC,@function
BldQuake__U_MapAddC:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 20(%ebp),%ebx
	movl 8(%ebp),%ecx
	movl MM_BldQuake+1512,%eax
	movl 412(%ecx),%esi
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edi
	pushl %ebx
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%edi)
	movb 24(%ebp),%cl
	movb %cl,4(%edi)
	movb $0,5(%edi)
	movl (%esi),%eax
	movl 12(%ebp),%ecx
	movl 8(%eax),%edx
	movl %ecx,-4(%ebp)
	movl %edi,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe37:
	.size	 BldQuake__U_MapAddC,.Lfe37-BldQuake__U_MapAddC
	.align 16
	.type	 BldQuake__Do_MapAddH,@function
BldQuake__Do_MapAddH:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L148
	pushl $8512
	call _m3_fault
	.align 16
.L148:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-52(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-56(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -48(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,-60(%ebp)
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	movl -56(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -52(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%esi
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L149
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L150
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L149
.L150:
	pushl $8597
	call _m3_fault
	.align 16
.L149:
	pushl $0
	pushl %esi
	pushl %ebx
	pushl %edi
	movl -60(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_MapAddH
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe38:
	.size	 BldQuake__Do_MapAddH,.Lfe38-BldQuake__Do_MapAddH
	.align 16
	.type	 BldQuake__U_MapAddH,@function
BldQuake__U_MapAddH:
	pushl %ebp
	movl %esp,%ebp
	subl $204,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 20(%ebp),%edi
.L152:
	movl $5,-8(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-12(%ebp)
	leal -12(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	pushl %edi
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,%esi
	movl %esi,-4(%ebp)
	addl $12,%esp
	cmpl $0,28(%ebp)
	jne .L153
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,28(%ebp)
	addl $4,%esp
.L153:
	movl 8(%ebp),%ecx
	movl MM_BldQuake+1512,%eax
	movl 420(%ecx),%esi
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	pushl %edi
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,%edx
	movl %edx,(%ebx)
	movb 24(%ebp),%cl
	movb %cl,4(%ebx)
	movb $0,5(%ebx)
	movl (%esi),%eax
	movl 12(%ebp),%ecx
	movl 8(%eax),%edi
	movl %ecx,-16(%ebp)
	movl %ebx,-20(%ebp)
	leal -20(%ebp),%eax
	pushl %eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edi
	movl 8(%ebp),%ecx
	movl 424(%ecx),%edi
	movl 204(%ecx),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $36,%esp
	movl 28(%ebp),%ecx
	pushl %ecx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl (%edi),%eax
	movl 12(%eax),%ebx
	movl %edx,-24(%ebp)
	leal -24(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%ebx
	movl 8(%ebp),%ecx
	movl 428(%ecx),%ebx
	movl (%ebx),%eax
	movl 8(%eax),%edx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $28,%esp
	cmpb $0,24(%ebp)
	jne .L159
.L155:
	movl $MM_BldQuake+1548,-196(%ebp)
	movl $0,-200(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-204(%ebp)
	leal -204(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -184(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L156
	pushl $1
	movl 28(%ebp),%ecx
	pushl %ecx
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -204(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L159
	.align 16
.L156:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
.L159:
	movl -12(%ebp),%eax
	leal -216(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe39:
	.size	 BldQuake__U_MapAddH,.Lfe39-BldQuake__U_MapAddH
	.align 16
	.type	 BldQuake__Do_MapAddS,@function
BldQuake__Do_MapAddS:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L161
	pushl $8992
	call _m3_fault
	.align 16
.L161:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-52(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-56(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -48(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,-60(%ebp)
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	movl -56(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -52(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%esi
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L162
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L163
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L162
.L163:
	pushl $9077
	call _m3_fault
	.align 16
.L162:
	pushl %esi
	pushl %ebx
	pushl %edi
	movl -60(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_MapAddS
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe40:
	.size	 BldQuake__Do_MapAddS,.Lfe40-BldQuake__Do_MapAddS
	.align 16
	.type	 BldQuake__U_MapAddS,@function
BldQuake__U_MapAddS:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 20(%ebp),%ebx
	movl 8(%ebp),%ecx
	movl MM_BldQuake+1512,%eax
	movl 432(%ecx),%esi
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edi
	pushl %ebx
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%edi)
	movb 24(%ebp),%cl
	movb %cl,4(%edi)
	movb $0,5(%edi)
	movl (%esi),%eax
	movl 12(%ebp),%ecx
	movl 8(%eax),%edx
	movl %ecx,-4(%ebp)
	movl %edi,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe41:
	.size	 BldQuake__U_MapAddS,.Lfe41-BldQuake__U_MapAddS
	.align 16
	.type	 BldQuake__DoIncludeDir,@function
BldQuake__DoIncludeDir:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L166
	pushl $9344
	call _m3_fault
	.align 16
.L166:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L167
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L168
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L167
.L168:
	pushl $9381
	call _m3_fault
	.align 16
.L167:
	pushl %esi
	pushl %edi
	call BldQuake__IncludeDir
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe42:
	.size	 BldQuake__DoIncludeDir,.Lfe42-BldQuake__DoIncludeDir
	.align 16
	.type	 BldQuake__IncludeDir,@function
BldQuake__IncludeDir:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	movl 68(%esi),%ecx
	testl %ecx,%ecx
	jne .L170
	pushl $9460
	call _m3_fault
	.align 16
.L170:
	movl 36(%esi),%edx
	leal -1(%edx),%eax
	cmpl %eax,4(%ecx)
	ja .L171
	pushl $9458
	call _m3_fault
	.align 16
.L171:
	leal (%edx,%edx,2),%eax
	sall $2,%eax
	addl (%ecx),%eax
	movl -12(%eax),%eax
	movl 12(%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	pushl %eax
	movl MI_Pathname+84,%eax
	call *%eax
	movl %eax,%edx
	movl 204(%esi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %ebx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 204(%esi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl $MM_BldQuake+1672
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
	movl MI_M3File+64,%eax
	call *%eax
	addl $12,%esp
	testl %eax,%eax
	jne .L172
	pushl %ebx
	pushl $MM_BldQuake+1696
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $16,%esp
.L172:
	pushl %ebx
	pushl %esi
	movl MI_QMachRep+676,%eax
	call *%eax
	leal -8(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe43:
	.size	 BldQuake__IncludeDir,.Lfe43-BldQuake__IncludeDir
	.align 16
	.type	 BldQuake__DoIncludePkg,@function
BldQuake__DoIncludePkg:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L174
	pushl $9648
	call _m3_fault
	.align 16
.L174:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L175
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L176
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L175
.L176:
	pushl $9685
	call _m3_fault
	.align 16
.L175:
	pushl %esi
	pushl %edi
	call BldQuake__IncludePkg
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe44:
	.size	 BldQuake__DoIncludePkg,.Lfe44-BldQuake__DoIncludePkg
	.align 16
	.type	 BldQuake__IncludePkg,@function
BldQuake__IncludePkg:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	movl 332(%ebx),%ecx
	movl %ecx,-8(%ebp)
	movl 348(%ebx),%ecx
	movl %ecx,-4(%ebp)
	movl %eax,332(%ebx)
	pushl %eax
	pushl %ebx
	call BldQuake__Pkg
	pushl %eax
	pushl $MM_BldQuake+1208
	pushl %ebx
	call BldQuake__Normalize
	movl %eax,%edx
	movl %edx,348(%ebx)
	movl 204(%ebx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl $MM_BldQuake+1724,%edi
	pushl %edi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	addl $36,%esp
	movl 204(%ebx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl $MM_BldQuake+1672,%esi
	pushl %esi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 332(%ebx),%eax
	pushl %eax
	pushl %edi
	pushl %esi
	pushl %edx
	pushl %ebx
	call BldQuake__M3include
	movl -8(%ebp),%ecx
	movl %ecx,332(%ebx)
	movl -4(%ebp),%ecx
	leal -20(%ebp),%esp
	movl %ecx,348(%ebx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe45:
	.size	 BldQuake__IncludePkg,.Lfe45-BldQuake__IncludePkg
	.align 16
	.type	 BldQuake__DoImportObj,@function
BldQuake__DoImportObj:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L179
	pushl $9984
	call _m3_fault
	.align 16
.L179:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L180
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L181
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L180
.L181:
	pushl $10021
	call _m3_fault
	.align 16
.L180:
	pushl %esi
	pushl %edi
	call BldQuake__ImportObj
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe46:
	.size	 BldQuake__DoImportObj,.Lfe46-BldQuake__DoImportObj
	.align 16
	.type	 BldQuake__ImportObj,@function
BldQuake__ImportObj:
	pushl %ebp
	movl %esp,%ebp
	subl $184,%esp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edx
	call BldQuake__PathOf
	movl %eax,-184(%ebp)
	addl $8,%esp
.L183:
	movl $MM_BldQuake+1548,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L184
	pushl $1
	movl -184(%ebp),%ecx
	pushl %ecx
	pushl %eax
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L182
	.align 16
.L184:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
.L182:
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe47:
	.size	 BldQuake__ImportObj,.Lfe47-BldQuake__ImportObj
	.align 16
	.type	 BldQuake__DoImport,@function
BldQuake__DoImport:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L188
	pushl $10272
	call _m3_fault
	.align 16
.L188:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L189
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L190
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L189
.L190:
	pushl $10309
	call _m3_fault
	.align 16
.L189:
	pushl %esi
	pushl %edi
	call BldQuake__Import
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe48:
	.size	 BldQuake__DoImport,.Lfe48-BldQuake__DoImport
	.align 16
	.type	 BldQuake__Import,@function
BldQuake__Import:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%ecx
	pushl $0
	movl 352(%eax),%edx
	pushl %edx
	pushl %ecx
	pushl %eax
	call BldQuake__ImportVersion
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe49:
	.size	 BldQuake__Import,.Lfe49-BldQuake__Import
	.align 16
	.type	 BldQuake__DoImportVersion,@function
BldQuake__DoImportVersion:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L193
	pushl $10480
	call _m3_fault
	.align 16
.L193:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%esi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,%ebx
	addl $8,%esp
	cmpl $0,8(%ebp)
	je .L194
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L195
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L194
.L195:
	pushl $10533
	call _m3_fault
	.align 16
.L194:
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__ImportVersion
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe50:
	.size	 BldQuake__DoImportVersion,.Lfe50-BldQuake__DoImportVersion
	.align 16
	.type	 BldQuake__ImportVersion,@function
BldQuake__ImportVersion:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl 336(%esi),%eax
	pushl %eax
	pushl %edi
	movl MI_Text+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L197
	pushl %edi
	pushl $MM_BldQuake+1740
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+1352
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 200(%esi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	movl 200(%esi),%eax
	pushl %eax
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%edx
	pushl %edx
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $8,%esp
.L197:
	movl 20(%ebp),%eax
	testl %eax,%eax
	jne .L198
	pushl %eax
	pushl %edi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,20(%ebp)
	addl $8,%esp
.L198:
	movl 356(%esi),%edx
	movl (%edx),%eax
	movl 8(%eax),%ecx
	leal 16(%ebp),%eax
	pushl %eax
	leal 20(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%ecx
	addl $12,%esp
	testl %eax,%eax
	jne .L196
	pushl %edi
	pushl %esi
	call BldQuake__Pkg
	movl %eax,%ecx
	movl 204(%esi),%eax
	pushl %eax
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 16(%ebp),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 204(%esi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	movl $MM_BldQuake+1792,%ebx
	pushl %ebx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edi
	movl 16(%ebp),%eax
	pushl %eax
	pushl %ebx
	pushl %edx
	pushl %esi
	call BldQuake__M3include
.L196:
	leal -12(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe51:
	.size	 BldQuake__ImportVersion,.Lfe51-BldQuake__ImportVersion
	.align 16
	.type	 BldQuake__DoImportLib,@function
BldQuake__DoImportLib:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L201
	pushl $10832
	call _m3_fault
	.align 16
.L201:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L202
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L203
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L202
.L203:
	pushl $10885
	call _m3_fault
	.align 16
.L202:
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__ImportLib
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe52:
	.size	 BldQuake__DoImportLib,.Lfe52-BldQuake__DoImportLib
	.align 16
	.type	 BldQuake__ImportLib,@function
BldQuake__ImportLib:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl 16(%ebp),%eax
	pushl $1
	pushl %eax
	pushl %edx
	pushl %ecx
	call BldQuake__U_ImportOtherLib
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe53:
	.size	 BldQuake__ImportLib,.Lfe53-BldQuake__ImportLib
	.align 16
	.type	 BldQuake__DoPgmObject,@function
BldQuake__DoPgmObject:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L206
	pushl $11088
	call _m3_fault
	.align 16
.L206:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L207
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L208
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L207
.L208:
	pushl $11141
	call _m3_fault
	.align 16
.L207:
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PgmObject
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe54:
	.size	 BldQuake__DoPgmObject,.Lfe54-BldQuake__DoPgmObject
	.align 16
	.type	 BldQuake__PgmObject,@function
BldQuake__PgmObject:
	pushl %ebp
	movl %esp,%ebp
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe55:
	.size	 BldQuake__PgmObject,.Lfe55-BldQuake__PgmObject
	.align 16
	.type	 BldQuake__DoDeriveds,@function
BldQuake__DoDeriveds:
	pushl %ebp
	movl %esp,%ebp
	subl $48,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L211
	pushl $11424
	call _m3_fault
	.align 16
.L211:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %ecx
	call *%esi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	movl 28(%eax),%esi
	leal -24(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%esi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-44(%ebp)
	leal -28(%ebp),%ecx
	movl %ecx,-36(%ebp)
	movl -44(%ebp),%ecx
	movl $1,-32(%ebp)
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 32(%eax),%esi
	pushl %ecx
	call *%esi
	movl %eax,-28(%ebp)
	pushl %ebx
	movl MM_BldQuake+1812,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl -44(%ebp),%ecx
	movl %eax,-40(%ebp)
	movl (%ecx),%eax
	addl $36,%esp
	movl 32(%eax),%eax
	pushl %ecx
	call *%eax
	xorl %edi,%edi
	decl %eax
	movl %eax,-48(%ebp)
	addl $4,%esp
	jmp .L212
	.align 16
.L213:
	movl -44(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl %edi
	pushl %ecx
	call *%eax
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $20,%esp
	cmpl $0,-40(%ebp)
	jne .L214
	pushl $11524
	call _m3_fault
	.align 16
.L214:
	movl -40(%ebp),%ecx
	cmpl %edi,4(%ecx)
	ja .L215
	pushl $11522
	call _m3_fault
	.align 16
.L215:
	movl -40(%ebp),%ecx
	movl (%ecx),%eax
	movl %esi,(%eax,%edi,4)
	incl %edi
.L212:
	cmpl %edi,-48(%ebp)
	jge .L213
	leal -24(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $8,%esp
	cmpl $0,8(%ebp)
	je .L217
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L218
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L217
.L218:
	pushl $11557
	call _m3_fault
	.align 16
.L217:
	cmpl $0,-40(%ebp)
	jne .L219
	pushl $11556
	call _m3_fault
	.align 16
.L219:
	movl -40(%ebp),%ecx
	pushl %ecx
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Deriveds
	leal -60(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe56:
	.size	 BldQuake__DoDeriveds,.Lfe56-BldQuake__DoDeriveds
	.align 16
	.type	 BldQuake__Deriveds,@function
BldQuake__Deriveds:
	pushl %ebp
	movl %esp,%ebp
	subl $32,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
.L221:
	movl $MM_BldQuake+1304,-16(%ebp)
	movl $4,-20(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-24(%ebp)
	leal -24(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	xorl %ebx,%ebx
	movl %ebx,-12(%ebp)
	movl %ebx,-8(%ebp)
	movl %ebx,-4(%ebp)
	movl (%edi),%eax
	movl 44(%eax),%eax
	pushl %edi
	call *%eax
	movl %eax,-28(%ebp)
	pushl %ebx
	pushl $MM_BldQuake+1824
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edx
	movl (%edi),%eax
	leal -12(%ebp),%esi
	movl 12(%eax),%eax
	pushl %esi
	pushl %edx
	pushl %edi
	call *%eax
	addl $24,%esp
	testl %eax,%eax
	je .L233
	pushl %ebx
	pushl $MM_BldQuake+1844
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edx
	movl (%edi),%eax
	movl 12(%eax),%eax
	pushl %esi
	pushl %edx
	pushl %edi
	call *%eax
	addl $20,%esp
	testl %eax,%eax
	je .L223
	movl 16(%ebp),%eax
	movl 4(%eax),%esi
	decl %esi
	jmp .L224
	.align 16
.L225:
	movl 16(%ebp),%eax
	cmpl %ebx,4(%eax)
	ja .L226
	pushl $11746
	call _m3_fault
	.align 16
.L226:
	movl (%eax),%eax
	movl (%eax,%ebx,4),%eax
	pushl %eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %edi
	movl MI_BldHooks+44,%eax
	call *%eax
	incl %ebx
	addl $16,%esp
.L224:
	cmpl %esi,%ebx
	jle .L225
	jmp .L233
	.align 16
.L223:
	pushl $MM_BldQuake+1864
	movl -28(%ebp),%ecx
	pushl %ecx
	movl MI_Wr+68,%eax
	call *%eax
	movl 16(%ebp),%eax
	movl %ebx,%esi
	addl $8,%esp
	movl 4(%eax),%eax
	decl %eax
	movl %eax,-32(%ebp)
	jmp .L229
	.align 16
.L230:
	movl 16(%ebp),%eax
	cmpl %esi,4(%eax)
	ja .L231
	pushl $11826
	call _m3_fault
	.align 16
.L231:
	movl (%eax),%eax
	movl (%eax,%esi,4),%eax
	pushl %eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
	pushl $MM_BldQuake+1884
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl -28(%ebp),%ecx
	pushl %ecx
	movl MI_Wr+68,%eax
	call *%eax
	pushl %ebx
	pushl %edi
	movl MI_BldHooks+44,%eax
	call *%eax
	incl %esi
	addl $32,%esp
.L229:
	cmpl %esi,-32(%ebp)
	jge .L230
	movl 200(%edi),%eax
	pushl %eax
	movl -28(%ebp),%ecx
	pushl %ecx
	movl MI_Wr+68,%eax
	call *%eax
.L233:
	movl -24(%ebp),%eax
	leal -44(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe57:
	.size	 BldQuake__Deriveds,.Lfe57-BldQuake__Deriveds
	.align 16
	.type	 BldQuake__DoPgmSource,@function
BldQuake__DoPgmSource:
	pushl %ebp
	movl %esp,%ebp
	subl $192,%esp
	pushl %ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L235
	pushl $12048
	call _m3_fault
	.align 16
.L235:
	movl 8(%ebp),%ebx
	movl (%ebx),%eax
	movl 28(%eax),%ecx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%ecx
	addl $8,%esp
.L236:
	movl $MM_BldQuake+1548,-184(%ebp)
	movl $0,-188(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-192(%ebp)
	leal -192(%ebp),%ebx
	movl %ebx,RTThread__handlerStack
	leal -172(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L237
	leal -12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ebx
	pushl %ebx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ecx
	addl $8,%esp
	testl %ebx,%ebx
	je .L238
	movl -4(%ebx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L239
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L238
.L239:
	pushl $12101
	call _m3_fault
	.align 16
.L238:
	pushl %ecx
	movl 8(%ebp),%ebx
	pushl %ebx
	call BldQuake__PathOf
	pushl $1
	pushl %eax
	pushl $0
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -192(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L234
	.align 16
.L237:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
.L234:
	movl -196(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe58:
	.size	 BldQuake__DoPgmSource,.Lfe58-BldQuake__DoPgmSource
	.align 16
	.type	 BldQuake__DoInterface,@function
BldQuake__DoInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L243
	pushl $12272
	call _m3_fault
	.align 16
.L243:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L244
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L245
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L244
.L245:
	pushl $12309
	call _m3_fault
	.align 16
.L244:
	pushl $1
	pushl %esi
	pushl %edi
	call BldQuake__Interface
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe59:
	.size	 BldQuake__DoInterface,.Lfe59-BldQuake__DoInterface
	.align 16
	.type	 BldQuake__DoINTERFACE,@function
BldQuake__DoINTERFACE:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L247
	pushl $12432
	call _m3_fault
	.align 16
.L247:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L248
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L249
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L248
.L249:
	pushl $12469
	call _m3_fault
	.align 16
.L248:
	pushl $0
	pushl %esi
	pushl %edi
	call BldQuake__Interface
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe60:
	.size	 BldQuake__DoINTERFACE,.Lfe60-BldQuake__DoINTERFACE
	.align 16
	.type	 BldQuake__Interface,@function
BldQuake__Interface:
	pushl %ebp
	movl %esp,%ebp
	subl $204,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movb 16(%ebp),%bl
	pushl $MM_BldQuake+1900
	movl 12(%ebp),%edi
	pushl %edi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $0
	movl %eax,%esi
	pushl %esi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-200(%ebp)
	movl 8(%ebp),%edi
	movl MM_BldQuake+1512,%eax
	movl 396(%edi),%esi
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,-204(%ebp)
	pushl %edi
	call BldQuake__PkgSubdir
	pushl %eax
	movl 332(%edi),%eax
	pushl %eax
	pushl %edi
	call BldQuake__Location
	movl -204(%ebp),%edx
	addl $36,%esp
	movl %eax,(%edx)
	movb %bl,4(%edx)
	movb $1,5(%edx)
	movl (%esi),%eax
	movl -200(%ebp),%edi
	movl 8(%eax),%ecx
	movl %edi,-4(%ebp)
	movl %edx,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ecx
	movl 8(%ebp),%edi
	movl 224(%edi),%eax
	pushl %eax
	movl 12(%ebp),%edi
	pushl %edi
	movl 8(%ebp),%edi
	pushl %edi
	call BldQuake__PgmObject
	addl $24,%esp
.L251:
	movl $MM_BldQuake+1548,-180(%ebp)
	movl $0,-184(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-188(%ebp)
	leal -188(%ebp),%edi
	movl %edi,RTThread__handlerStack
	leal -168(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L252
	pushl $MM_BldQuake+1900
	movl 12(%ebp),%edi
	pushl %edi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	pushl %ecx
	movl 8(%ebp),%edi
	pushl %edi
	call BldQuake__PathOf
	pushl $1
	movl %eax,%edx
	pushl %edx
	pushl %ebx
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -188(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $28,%esp
	jmp .L253
	.align 16
.L252:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
	addl $4,%esp
.L253:
	movl 8(%ebp),%edi
	addl $244,%edi
	movl %edi,-196(%ebp)
	movl $4,-192(%ebp)
	leal -196(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%edi
	pushl %edi
	movl 8(%ebp),%edi
	pushl %edi
	call BldQuake__Deriveds
	leal -216(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe61:
	.size	 BldQuake__Interface,.Lfe61-BldQuake__Interface
	.align 16
	.type	 BldQuake__Implementation,@function
BldQuake__Implementation:
	pushl %ebp
	movl %esp,%ebp
	subl $200,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	pushl $MM_BldQuake+1916
	movl 12(%ebp),%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $0
	movl %eax,%ebx
	pushl %ebx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	movl 8(%ebp),%esi
	movl MM_BldQuake+1512,%eax
	movl 400(%esi),%ebx
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,-200(%ebp)
	pushl %esi
	call BldQuake__PkgSubdir
	pushl %eax
	movl 332(%esi),%eax
	pushl %eax
	pushl %esi
	call BldQuake__Location
	movl -200(%ebp),%edx
	movl %eax,(%edx)
	movb $1,4(%edx)
	movb $1,5(%edx)
	movl (%ebx),%eax
	addl $36,%esp
	movl 8(%eax),%ecx
	movl %edi,-4(%ebp)
	movl %edx,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%ecx
	movl 228(%esi),%eax
	pushl %eax
	movl 12(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%esi
	pushl %esi
	call BldQuake__PgmObject
	addl $24,%esp
.L256:
	movl $MM_BldQuake+1548,-180(%ebp)
	movl $0,-184(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-188(%ebp)
	leal -188(%ebp),%esi
	movl %esi,RTThread__handlerStack
	leal -168(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L257
	pushl $MM_BldQuake+1916
	movl 12(%ebp),%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	pushl %ecx
	movl 8(%ebp),%esi
	pushl %esi
	call BldQuake__PathOf
	pushl $1
	movl %eax,%edx
	pushl %edx
	pushl %ebx
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -188(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $28,%esp
	jmp .L258
	.align 16
.L257:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
	addl $4,%esp
.L258:
	movl 8(%ebp),%esi
	addl $260,%esi
	movl %esi,-196(%ebp)
	movl $4,-192(%ebp)
	leal -196(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%esi
	pushl %esi
	call BldQuake__Deriveds
	leal -212(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe62:
	.size	 BldQuake__Implementation,.Lfe62-BldQuake__Implementation
	.align 16
	.type	 BldQuake__DoImplementation,@function
BldQuake__DoImplementation:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L261
	pushl $13184
	call _m3_fault
	.align 16
.L261:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L262
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L263
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L262
.L263:
	pushl $13221
	call _m3_fault
	.align 16
.L262:
	pushl %esi
	pushl %edi
	call BldQuake__Implementation
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe63:
	.size	 BldQuake__DoImplementation,.Lfe63-BldQuake__DoImplementation
	.align 16
	.type	 BldQuake__DoModule,@function
BldQuake__DoModule:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L265
	pushl $13344
	call _m3_fault
	.align 16
.L265:
	movl (%esi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%eax
	pushl %ebx
	pushl %esi
	call *%eax
	pushl %ebx
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $16,%esp
	testl %esi,%esi
	je .L266
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L267
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L266
.L267:
	pushl $13397
	call _m3_fault
	.align 16
.L266:
	pushl $1
	pushl %ebx
	pushl %esi
	call BldQuake__Interface
	addl $12,%esp
	testl %esi,%esi
	je .L268
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L269
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L268
.L269:
	pushl $13413
	call _m3_fault
	.align 16
.L268:
	pushl %ebx
	pushl %esi
	call BldQuake__Implementation
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe64:
	.size	 BldQuake__DoModule,.Lfe64-BldQuake__DoModule
	.align 16
	.type	 BldQuake__DoMODULE,@function
BldQuake__DoMODULE:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L271
	pushl $13520
	call _m3_fault
	.align 16
.L271:
	movl (%esi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%eax
	pushl %ebx
	pushl %esi
	call *%eax
	pushl %ebx
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $16,%esp
	testl %esi,%esi
	je .L272
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L273
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L272
.L273:
	pushl $13573
	call _m3_fault
	.align 16
.L272:
	pushl $0
	pushl %ebx
	pushl %esi
	call BldQuake__Interface
	addl $12,%esp
	testl %esi,%esi
	je .L274
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L275
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L274
.L275:
	pushl $13589
	call _m3_fault
	.align 16
.L274:
	pushl %ebx
	pushl %esi
	call BldQuake__Implementation
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe65:
	.size	 BldQuake__DoMODULE,.Lfe65-BldQuake__DoMODULE
	.align 16
	.type	 BldQuake__HSource,@function
BldQuake__HSource:
	pushl %ebp
	movl %esp,%ebp
	subl $208,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%esi
	pushl $MM_BldQuake+1208
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PathOf
	movl %eax,-204(%ebp)
	movl %eax,-4(%ebp)
	pushl $MM_BldQuake+1932
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,-200(%ebp)
	movl 420(%ecx),%ecx
	movl %ecx,-204(%ebp)
	pushl $0
	movl -200(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-208(%ebp)
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PkgSubdir
	addl $32,%esp
	movl %eax,%esi
	pushl %esi
	movl 8(%ebp),%ecx
	movl 332(%ecx),%eax
	pushl %eax
	pushl %ecx
	call BldQuake__Location
	movl %eax,%edx
	movl %edx,(%edi)
	movb $0,4(%edi)
	movb $1,5(%edi)
	movl -204(%ebp),%ecx
	movl (%ecx),%eax
	movl -208(%ebp),%ecx
	movl 8(%eax),%ebx
	movl %ecx,-8(%ebp)
	movl %edi,-12(%ebp)
	leal -12(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	movl -204(%ebp),%ecx
	pushl %ecx
	call *%ebx
	movl 8(%ebp),%ecx
	movl 424(%ecx),%ebx
	movl 204(%ecx),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	movl -200(%ebp),%ecx
	pushl %ecx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl (%ebx),%eax
	movl 12(%eax),%esi
	movl %edx,-16(%ebp)
	leal -16(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%esi
	movl 8(%ebp),%ecx
	movl 428(%ecx),%esi
	movl (%esi),%eax
	movl 8(%eax),%edx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl %esi
	call *%edx
	addl $28,%esp
.L277:
	movl $MM_BldQuake+1548,-188(%ebp)
	movl $0,-192(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-196(%ebp)
	leal -196(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -176(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L278
	pushl $1
	movl -200(%ebp),%ecx
	pushl %ecx
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -196(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L276
	.align 16
.L278:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
.L276:
	leal -220(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe66:
	.size	 BldQuake__HSource,.Lfe66-BldQuake__HSource
	.align 16
	.type	 BldQuake__DoHSource,@function
BldQuake__DoHSource:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L282
	pushl $13968
	call _m3_fault
	.align 16
.L282:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L283
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L284
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L283
.L284:
	pushl $14005
	call _m3_fault
	.align 16
.L283:
	pushl %esi
	pushl %edi
	call BldQuake__HSource
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe67:
	.size	 BldQuake__DoHSource,.Lfe67-BldQuake__DoHSource
	.align 16
	.type	 BldQuake__CSource,@function
BldQuake__CSource:
	pushl %ebp
	movl %esp,%ebp
	subl $216,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	pushl $MM_BldQuake+1948
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-212(%ebp)
	pushl $MM_BldQuake+1208
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PathOf
	movl %eax,%edi
	movl 8(%ebp),%ecx
	movl %edi,-4(%ebp)
	movl 412(%ecx),%edi
	pushl $0
	movl -212(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-216(%ebp)
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PkgSubdir
	addl $32,%esp
	pushl %eax
	movl 8(%ebp),%ecx
	movl 332(%ecx),%eax
	pushl %eax
	pushl %ecx
	call BldQuake__Location
	movl %esi,%edx
	movl %eax,%ebx
	movl %ebx,(%edx)
	movb $1,4(%edx)
	movb $1,5(%edx)
	movl (%edi),%eax
	movl -216(%ebp),%ecx
	movl 8(%eax),%esi
	movl %ecx,-8(%ebp)
	movl %edx,-12(%ebp)
	leal -12(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%esi
	movl 8(%ebp),%ecx
	movl 416(%ecx),%esi
	pushl $0
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-216(%ebp)
	addl $32,%esp
	movl -212(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PathOf
	movl %eax,%edx
	movl (%esi),%eax
	movl -216(%ebp),%ecx
	movl 8(%eax),%ebx
	movl %ecx,-16(%ebp)
	movl %edx,-20(%ebp)
	leal -20(%ebp),%eax
	pushl %eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl 8(%ebp),%ecx
	movl 428(%ecx),%ebx
	movl (%ebx),%eax
	movl 8(%eax),%edx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $32,%esp
.L286:
	movl $MM_BldQuake+1548,-192(%ebp)
	movl $0,-196(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-200(%ebp)
	leal -200(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -180(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L287
	movl -212(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PathOf
	pushl $1
	movl %eax,%edx
	pushl %edx
	pushl %ebx
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -200(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $20,%esp
	jmp .L288
	.align 16
.L287:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
	addl $4,%esp
.L288:
	movl 8(%ebp),%ecx
	movl 220(%ecx),%eax
	pushl %eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PgmObject
	movl 8(%ebp),%ecx
	addl $276,%ecx
	movl %ecx,-208(%ebp)
	movl $2,-204(%ebp)
	leal -208(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Deriveds
	leal -228(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe68:
	.size	 BldQuake__CSource,.Lfe68-BldQuake__CSource
	.align 16
	.type	 BldQuake__DoCSource,@function
BldQuake__DoCSource:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L291
	pushl $14416
	call _m3_fault
	.align 16
.L291:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L292
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L293
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L292
.L293:
	pushl $14453
	call _m3_fault
	.align 16
.L292:
	pushl %esi
	pushl %edi
	call BldQuake__CSource
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe69:
	.size	 BldQuake__DoCSource,.Lfe69-BldQuake__DoCSource
	.align 16
	.type	 BldQuake__SSource,@function
BldQuake__SSource:
	pushl %ebp
	movl %esp,%ebp
	subl $200,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	pushl $MM_BldQuake+1964
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,-200(%ebp)
	movl 432(%ecx),%ebx
	pushl $0
	movl -200(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PkgSubdir
	pushl %eax
	movl 8(%ebp),%ecx
	movl 332(%ecx),%eax
	pushl %eax
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%esi)
	movb $1,4(%esi)
	movb $1,5(%esi)
	movl (%ebx),%eax
	addl $36,%esp
	movl 8(%eax),%edx
	movl %edi,-4(%ebp)
	movl %esi,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $12,%esp
.L295:
	movl $MM_BldQuake+1548,-180(%ebp)
	movl $0,-184(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-188(%ebp)
	leal -188(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -168(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L296
	movl -200(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PathOf
	pushl $1
	movl %eax,%edx
	pushl %edx
	pushl %ebx
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -188(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $20,%esp
	jmp .L297
	.align 16
.L296:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
	addl $4,%esp
.L297:
	movl 8(%ebp),%ecx
	movl 220(%ecx),%eax
	pushl %eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PgmObject
	movl 8(%ebp),%ecx
	addl $284,%ecx
	movl %ecx,-196(%ebp)
	movl $1,-192(%ebp)
	leal -196(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Deriveds
	leal -212(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe70:
	.size	 BldQuake__SSource,.Lfe70-BldQuake__SSource
	.align 16
	.type	 BldQuake__DoSSource,@function
BldQuake__DoSSource:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L300
	pushl $14848
	call _m3_fault
	.align 16
.L300:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L301
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L302
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L301
.L302:
	pushl $14885
	call _m3_fault
	.align 16
.L301:
	pushl %esi
	pushl %edi
	call BldQuake__SSource
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe71:
	.size	 BldQuake__DoSSource,.Lfe71-BldQuake__DoSSource
	.align 16
	.type	 BldQuake__GenericIntf,@function
BldQuake__GenericIntf:
	pushl %ebp
	movl %esp,%ebp
	subl $188,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 404(%ecx),%ebx
	pushl $MM_BldQuake+1980
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $0
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PkgSubdir
	pushl %eax
	movl 8(%ebp),%ecx
	movl 332(%ecx),%eax
	pushl %eax
	pushl %ecx
	call BldQuake__Location
	movl %esi,%edx
	movl %eax,(%edx)
	movb 16(%ebp),%cl
	movb %cl,4(%edx)
	movb $1,5(%edx)
	movl (%ebx),%eax
	addl $36,%esp
	movl 8(%eax),%esi
	movl %edi,-4(%ebp)
	movl %edx,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%esi
	addl $12,%esp
.L304:
	movl $MM_BldQuake+1548,-180(%ebp)
	movl $0,-184(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-188(%ebp)
	leal -188(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -168(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L305
	pushl $MM_BldQuake+1980
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PathOf
	pushl $1
	movl %eax,%edx
	pushl %edx
	pushl %ebx
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -188(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L303
	.align 16
.L305:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
.L303:
	leal -200(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe72:
	.size	 BldQuake__GenericIntf,.Lfe72-BldQuake__GenericIntf
	.align 16
	.type	 BldQuake__GenericImpl,@function
BldQuake__GenericImpl:
	pushl %ebp
	movl %esp,%ebp
	subl $188,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 408(%ecx),%ebx
	pushl $MM_BldQuake+1996
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $0
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PkgSubdir
	pushl %eax
	movl 8(%ebp),%ecx
	movl 332(%ecx),%eax
	pushl %eax
	pushl %ecx
	call BldQuake__Location
	movl %esi,%edx
	movl %eax,(%edx)
	movb 16(%ebp),%cl
	movb %cl,4(%edx)
	movb $1,5(%edx)
	movl (%ebx),%eax
	addl $36,%esp
	movl 8(%eax),%esi
	movl %edi,-4(%ebp)
	movl %edx,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%esi
	addl $12,%esp
.L309:
	movl $MM_BldQuake+1548,-180(%ebp)
	movl $0,-184(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-188(%ebp)
	leal -188(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -168(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L310
	pushl $MM_BldQuake+1996
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PathOf
	pushl $1
	movl %eax,%edx
	pushl %edx
	pushl %ebx
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -188(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L308
	.align 16
.L310:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
.L308:
	leal -200(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe73:
	.size	 BldQuake__GenericImpl,.Lfe73-BldQuake__GenericImpl
	.align 16
	.type	 BldQuake__DoGenericInterface,@function
BldQuake__DoGenericInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L314
	pushl $15504
	call _m3_fault
	.align 16
.L314:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L315
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L316
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L315
.L316:
	pushl $15541
	call _m3_fault
	.align 16
.L315:
	pushl $1
	pushl %esi
	pushl %edi
	call BldQuake__GenericIntf
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe74:
	.size	 BldQuake__DoGenericInterface,.Lfe74-BldQuake__DoGenericInterface
	.align 16
	.type	 BldQuake__DoGENERIC_INTERFACE,@function
BldQuake__DoGENERIC_INTERFACE:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L318
	pushl $15648
	call _m3_fault
	.align 16
.L318:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L319
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L320
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L319
.L320:
	pushl $15685
	call _m3_fault
	.align 16
.L319:
	pushl $0
	pushl %esi
	pushl %edi
	call BldQuake__GenericIntf
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe75:
	.size	 BldQuake__DoGENERIC_INTERFACE,.Lfe75-BldQuake__DoGENERIC_INTERFACE
	.align 16
	.type	 BldQuake__DoGenericImplementation,@function
BldQuake__DoGenericImplementation:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L322
	pushl $15792
	call _m3_fault
	.align 16
.L322:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L323
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L324
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L323
.L324:
	pushl $15829
	call _m3_fault
	.align 16
.L323:
	pushl $1
	pushl %esi
	pushl %edi
	call BldQuake__GenericImpl
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe76:
	.size	 BldQuake__DoGenericImplementation,.Lfe76-BldQuake__DoGenericImplementation
	.align 16
	.type	 BldQuake__DoGENERIC_IMPLEMENTATION,@function
BldQuake__DoGENERIC_IMPLEMENTATION:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L326
	pushl $15936
	call _m3_fault
	.align 16
.L326:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L327
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L328
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L327
.L328:
	pushl $15973
	call _m3_fault
	.align 16
.L327:
	pushl $0
	pushl %esi
	pushl %edi
	call BldQuake__GenericImpl
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe77:
	.size	 BldQuake__DoGENERIC_IMPLEMENTATION,.Lfe77-BldQuake__DoGENERIC_IMPLEMENTATION
	.align 16
	.type	 BldQuake__DoGenericModule,@function
BldQuake__DoGenericModule:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L330
	pushl $16096
	call _m3_fault
	.align 16
.L330:
	movl (%esi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%eax
	pushl %ebx
	pushl %esi
	call *%eax
	pushl %ebx
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $16,%esp
	testl %esi,%esi
	je .L331
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L332
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L331
.L332:
	pushl $16149
	call _m3_fault
	.align 16
.L331:
	pushl $1
	pushl %ebx
	pushl %esi
	call BldQuake__GenericIntf
	addl $12,%esp
	testl %esi,%esi
	je .L333
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L334
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L333
.L334:
	pushl $16165
	call _m3_fault
	.align 16
.L333:
	pushl $1
	pushl %ebx
	pushl %esi
	call BldQuake__GenericImpl
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe78:
	.size	 BldQuake__DoGenericModule,.Lfe78-BldQuake__DoGenericModule
	.align 16
	.type	 BldQuake__DoGENERIC_MODULE,@function
BldQuake__DoGENERIC_MODULE:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L336
	pushl $16272
	call _m3_fault
	.align 16
.L336:
	movl (%esi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%eax
	pushl %ebx
	pushl %esi
	call *%eax
	pushl %ebx
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $16,%esp
	testl %esi,%esi
	je .L337
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L338
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L337
.L338:
	pushl $16325
	call _m3_fault
	.align 16
.L337:
	pushl $0
	pushl %ebx
	pushl %esi
	call BldQuake__GenericIntf
	addl $12,%esp
	testl %esi,%esi
	je .L339
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L340
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L339
.L340:
	pushl $16341
	call _m3_fault
	.align 16
.L339:
	pushl $0
	pushl %ebx
	pushl %esi
	call BldQuake__GenericImpl
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe79:
	.size	 BldQuake__DoGENERIC_MODULE,.Lfe79-BldQuake__DoGENERIC_MODULE
	.align 16
	.type	 BldQuake__BuildGenericIntf,@function
BldQuake__BuildGenericIntf:
	pushl %ebp
	movl %esp,%ebp
	subl $204,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	pushl $MM_BldQuake+1900
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-200(%ebp)
	movl $MM_BldQuake+1208,-196(%ebp)
	movl 8(%ebp),%ecx
	addl $8,%esp
	cmpb $0,489(%ecx)
	je .L342
.L343:
	movl $MM_BldQuake+2036,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L344
	pushl $1
	pushl $MM_BldQuake+2012
	movl MI_Utils+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edi
	movl 200(%ecx),%eax
	pushl %eax
	pushl $MM_BldQuake+2056
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl 200(%ecx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $32,%esp
	cmpb $0,28(%ebp)
	je .L345
	pushl $MM_BldQuake+2096
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $8,%esp
.L345:
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl $MM_BldQuake+2116
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2140
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 16(%ebp),%ecx
	pushl %ecx
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2156
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	movl 20(%ebp),%ecx
	movl (%ecx),%eax
	movl 32(%eax),%eax
	pushl %ecx
	call *%eax
	movl %ebx,%esi
	decl %eax
	movl %eax,-204(%ebp)
	addl $12,%esp
	jmp .L346
	.align 16
.L347:
	movl 20(%ebp),%ecx
	movl (%ecx),%eax
	leal -192(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl %esi
	pushl %ecx
	call *%eax
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl %eax
	movl -196(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	movl $MM_BldQuake+2172,-196(%ebp)
	incl %esi
	addl $36,%esp
.L346:
	cmpl %esi,-204(%ebp)
	jge .L347
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl $MM_BldQuake+2188
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2208
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl 200(%ecx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $32,%esp
	pushl $MM_BldQuake+2012
	pushl %edi
	movl MI_Utils+52,%eax
	call *%eax
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $8,%esp
	jmp .L349
	.align 16
.L344:
	pushl $MM_BldQuake+2012
	call BldQuake__FErr
	addl $4,%esp
.L349:
	movl -200(%ebp),%ecx
	pushl %ecx
	pushl $MM_BldQuake+2012
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__CopyIfNew
	pushl $MM_BldQuake+2012
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_BldHooks+44,%eax
	call *%eax
	addl $20,%esp
.L342:
	xorl %eax,%eax
	movb 24(%ebp),%al
	pushl %eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__DerivedInterface
	leal -216(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe80:
	.size	 BldQuake__BuildGenericIntf,.Lfe80-BldQuake__BuildGenericIntf
	.align 16
	.type	 BldQuake__DoBuildGenericIntf,@function
BldQuake__DoBuildGenericIntf:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L352
	pushl $16944
	call _m3_fault
	.align 16
.L352:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -48(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-52(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-56(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	movl -56(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%ebx
	movl -52(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,-60(%ebp)
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L353
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L354
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L353
.L354:
	pushl $17029
	call _m3_fault
	.align 16
.L353:
	pushl $0
	movl -60(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__BuildGenericIntf
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe81:
	.size	 BldQuake__DoBuildGenericIntf,.Lfe81-BldQuake__DoBuildGenericIntf
	.align 16
	.type	 BldQuake__DoBuildGenericUnsafeIntf,@function
BldQuake__DoBuildGenericUnsafeIntf:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L356
	pushl $17136
	call _m3_fault
	.align 16
.L356:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -48(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-52(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-56(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	movl -56(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%ebx
	movl -52(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,-60(%ebp)
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L357
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L358
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L357
.L358:
	pushl $17221
	call _m3_fault
	.align 16
.L357:
	pushl $1
	movl -60(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__BuildGenericIntf
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe82:
	.size	 BldQuake__DoBuildGenericUnsafeIntf,.Lfe82-BldQuake__DoBuildGenericUnsafeIntf
	.align 16
	.type	 BldQuake__BuildGenericImpl,@function
BldQuake__BuildGenericImpl:
	pushl %ebp
	movl %esp,%ebp
	subl $204,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	pushl $MM_BldQuake+1916
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-200(%ebp)
	movl $MM_BldQuake+1208,-196(%ebp)
	movl 8(%ebp),%ecx
	addl $8,%esp
	cmpb $0,489(%ecx)
	je .L360
.L361:
	movl $MM_BldQuake+2036,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L362
	pushl $1
	pushl $MM_BldQuake+2012
	movl MI_Utils+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edi
	movl 200(%ecx),%eax
	pushl %eax
	pushl $MM_BldQuake+2056
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl 200(%ecx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $32,%esp
	cmpb $0,24(%ebp)
	je .L363
	pushl $MM_BldQuake+2096
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $8,%esp
.L363:
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl $MM_BldQuake+2224
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2140
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 16(%ebp),%ecx
	pushl %ecx
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2156
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	movl 20(%ebp),%ecx
	movl (%ecx),%eax
	movl 32(%eax),%eax
	pushl %ecx
	call *%eax
	movl %ebx,%esi
	decl %eax
	movl %eax,-204(%ebp)
	addl $12,%esp
	jmp .L364
	.align 16
.L365:
	movl 20(%ebp),%ecx
	movl (%ecx),%eax
	leal -192(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl %esi
	pushl %ecx
	call *%eax
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl %eax
	movl -196(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	movl $MM_BldQuake+2172,-196(%ebp)
	incl %esi
	addl $36,%esp
.L364:
	cmpl %esi,-204(%ebp)
	jge .L365
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl $MM_BldQuake+2188
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2208
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl 200(%ecx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $32,%esp
	pushl $MM_BldQuake+2012
	pushl %edi
	movl MI_Utils+52,%eax
	call *%eax
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $8,%esp
	jmp .L367
	.align 16
.L362:
	pushl $MM_BldQuake+2012
	call BldQuake__FErr
	addl $4,%esp
.L367:
	movl -200(%ebp),%ecx
	pushl %ecx
	pushl $MM_BldQuake+2012
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__CopyIfNew
	pushl $MM_BldQuake+2012
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_BldHooks+44,%eax
	call *%eax
	addl $20,%esp
.L360:
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__DerivedImplementation
	leal -216(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe83:
	.size	 BldQuake__BuildGenericImpl,.Lfe83-BldQuake__BuildGenericImpl
	.align 16
	.type	 BldQuake__DoBuildGenericImpl,@function
BldQuake__DoBuildGenericImpl:
	pushl %ebp
	movl %esp,%ebp
	subl $40,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L370
	pushl $17824
	call _m3_fault
	.align 16
.L370:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-40(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -40(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	cmpl $0,8(%ebp)
	je .L371
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L372
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L371
.L372:
	pushl $17893
	call _m3_fault
	.align 16
.L371:
	pushl $0
	pushl %esi
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__BuildGenericImpl
	leal -52(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe84:
	.size	 BldQuake__DoBuildGenericImpl,.Lfe84-BldQuake__DoBuildGenericImpl
	.align 16
	.type	 BldQuake__DoBuildGenericUnsafeImpl,@function
BldQuake__DoBuildGenericUnsafeImpl:
	pushl %ebp
	movl %esp,%ebp
	subl $40,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L374
	pushl $18016
	call _m3_fault
	.align 16
.L374:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-40(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -40(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	cmpl $0,8(%ebp)
	je .L375
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L376
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L375
.L376:
	pushl $18085
	call _m3_fault
	.align 16
.L375:
	pushl $1
	pushl %esi
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__BuildGenericImpl
	leal -52(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe85:
	.size	 BldQuake__DoBuildGenericUnsafeImpl,.Lfe85-BldQuake__DoBuildGenericUnsafeImpl
	.align 16
	.type	 BldQuake__DerivedInterface,@function
BldQuake__DerivedInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $208,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	pushl $MM_BldQuake+1900
	movl 12(%ebp),%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 8(%ebp),%ebx
	movl %esi,-4(%ebp)
	movl 396(%ebx),%esi
	pushl $0
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-208(%ebp)
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edi
	movl 352(%ebx),%eax
	pushl %eax
	movl 336(%ebx),%eax
	pushl %eax
	pushl %ebx
	call BldQuake__Location
	movl %edi,%edx
	addl $32,%esp
	movl %eax,(%edx)
	movb 16(%ebp),%bl
	movb %bl,4(%edx)
	movb $1,5(%edx)
	movl (%esi),%eax
	movl -208(%ebp),%ebx
	movl 8(%eax),%ecx
	movl %ebx,-8(%ebp)
	movl %edx,-12(%ebp)
	leal -12(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ecx
	addl $12,%esp
.L378:
	movl $MM_BldQuake+1548,-184(%ebp)
	movl $0,-188(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-192(%ebp)
	leal -192(%ebp),%ebx
	movl %ebx,RTThread__handlerStack
	leal -172(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%edx
	addl $4,%esp
	testl %edx,%edx
	jne .L379
	pushl $1
	movl -4(%ebp),%eax
	pushl %eax
	pushl %edx
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -192(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $12,%esp
	jmp .L380
	.align 16
.L379:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
	addl $4,%esp
.L380:
	movl 8(%ebp),%ebx
	movl 444(%ebx),%ecx
	movl (%ecx),%eax
	movl 8(%eax),%edx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl %ecx
	call *%edx
	movl 224(%ebx),%eax
	pushl %eax
	movl 12(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ebx
	pushl %ebx
	call BldQuake__PgmObject
	addl $244,%ebx
	movl %ebx,-200(%ebp)
	movl $4,-196(%ebp)
	leal -200(%ebp),%ebx
	movl %ebx,-204(%ebp)
	pushl %ebx
	movl 12(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%ebx
	pushl %ebx
	call BldQuake__Deriveds
	addl $288,%ebx
	movl %ebx,-200(%ebp)
	movl $1,-196(%ebp)
	addl $36,%esp
	movl -204(%ebp),%ebx
	pushl %ebx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ebx
	pushl %ebx
	call BldQuake__Deriveds
	leal -220(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe86:
	.size	 BldQuake__DerivedInterface,.Lfe86-BldQuake__DerivedInterface
	.align 16
	.type	 BldQuake__DoDerivedInterface,@function
BldQuake__DoDerivedInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L383
	pushl $18544
	call _m3_fault
	.align 16
.L383:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L384
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L385
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L384
.L385:
	pushl $18597
	call _m3_fault
	.align 16
.L384:
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__DerivedInterface
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe87:
	.size	 BldQuake__DoDerivedInterface,.Lfe87-BldQuake__DoDerivedInterface
	.align 16
	.type	 BldQuake__DerivedImplementation,@function
BldQuake__DerivedImplementation:
	pushl %ebp
	movl %esp,%ebp
	subl $204,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	pushl $MM_BldQuake+1916
	movl 12(%ebp),%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl 8(%ebp),%esi
	movl %ebx,-4(%ebp)
	movl 400(%esi),%ebx
	pushl $0
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,-204(%ebp)
	movl 352(%esi),%eax
	pushl %eax
	movl 336(%esi),%eax
	pushl %eax
	pushl %esi
	call BldQuake__Location
	movl -204(%ebp),%edx
	movl %eax,(%edx)
	movb $1,4(%edx)
	movb $1,5(%edx)
	movl (%ebx),%eax
	addl $32,%esp
	movl 8(%eax),%ecx
	movl %edi,-8(%ebp)
	movl %edx,-12(%ebp)
	leal -12(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%ecx
	addl $12,%esp
.L387:
	movl $MM_BldQuake+1548,-184(%ebp)
	movl $0,-188(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-192(%ebp)
	leal -192(%ebp),%esi
	movl %esi,RTThread__handlerStack
	leal -172(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%edx
	addl $4,%esp
	testl %edx,%edx
	jne .L388
	pushl $1
	movl -4(%ebp),%eax
	pushl %eax
	pushl %edx
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -192(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $12,%esp
	jmp .L389
	.align 16
.L388:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
	addl $4,%esp
.L389:
	movl 8(%ebp),%esi
	movl 444(%esi),%ecx
	movl (%ecx),%eax
	movl 8(%eax),%edx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl %ecx
	call *%edx
	movl 228(%esi),%eax
	pushl %eax
	movl 12(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%esi
	pushl %esi
	call BldQuake__PgmObject
	addl $260,%esi
	movl %esi,-200(%ebp)
	movl $4,-196(%ebp)
	leal -200(%ebp),%ebx
	pushl %ebx
	movl 12(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%esi
	pushl %esi
	call BldQuake__Deriveds
	addl $288,%esi
	movl %esi,-200(%ebp)
	addl $36,%esp
	movl $1,-196(%ebp)
	pushl %ebx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%esi
	pushl %esi
	call BldQuake__Deriveds
	leal -216(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe88:
	.size	 BldQuake__DerivedImplementation,.Lfe88-BldQuake__DerivedImplementation
	.align 16
	.type	 BldQuake__DoDerivedImplementation,@function
BldQuake__DoDerivedImplementation:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L392
	pushl $19008
	call _m3_fault
	.align 16
.L392:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L393
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L394
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L393
.L394:
	pushl $19045
	call _m3_fault
	.align 16
.L393:
	pushl %esi
	pushl %edi
	call BldQuake__DerivedImplementation
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe89:
	.size	 BldQuake__DoDerivedImplementation,.Lfe89-BldQuake__DoDerivedImplementation
	.align 16
	.type	 BldQuake__DerivedC,@function
BldQuake__DerivedC:
	pushl %ebp
	movl %esp,%ebp
	subl $216,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	pushl $MM_BldQuake+1948
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-216(%ebp)
	movl 8(%ebp),%ecx
	movl %eax,-4(%ebp)
	movl 412(%ecx),%ecx
	movl %ecx,-216(%ebp)
	pushl $0
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%ebx
	movl 352(%ecx),%eax
	pushl %eax
	movl 336(%ecx),%eax
	pushl %eax
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%ebx)
	movb $1,4(%ebx)
	movb $1,5(%ebx)
	movl -216(%ebp),%ecx
	movl (%ecx),%eax
	addl $32,%esp
	movl 8(%eax),%esi
	movl %edi,-8(%ebp)
	movl %ebx,-12(%ebp)
	leal -12(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%esi
	movl 8(%ebp),%ecx
	movl 416(%ecx),%esi
	pushl $0
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	movl (%esi),%eax
	movl 8(%eax),%ebx
	movl %edi,-16(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl 8(%ebp),%ecx
	movl 428(%ecx),%ebx
	movl (%ebx),%eax
	addl $32,%esp
	movl 8(%eax),%esi
	movl $MM_BldQuake+2208,%eax
	movl %eax,-20(%ebp)
	movl %eax,-24(%ebp)
	leal -24(%ebp),%eax
	pushl %eax
	leal -20(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%esi
	addl $12,%esp
.L396:
	movl $MM_BldQuake+1548,-196(%ebp)
	movl $0,-200(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-204(%ebp)
	leal -204(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -184(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%edx
	addl $4,%esp
	testl %edx,%edx
	jne .L397
	pushl $1
	movl -4(%ebp),%eax
	pushl %eax
	pushl %edx
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -204(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $12,%esp
	jmp .L398
	.align 16
.L397:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
	addl $4,%esp
.L398:
	movl 8(%ebp),%ecx
	movl 444(%ecx),%esi
	movl (%esi),%eax
	movl 8(%eax),%ebx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl 8(%ebp),%ecx
	movl 220(%ecx),%eax
	pushl %eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PgmObject
	movl 8(%ebp),%ecx
	addl $276,%ecx
	movl %ecx,-212(%ebp)
	movl $2,-208(%ebp)
	leal -212(%ebp),%ebx
	pushl %ebx
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Deriveds
	movl 8(%ebp),%ecx
	addl $288,%ecx
	movl %ecx,-212(%ebp)
	addl $36,%esp
	movl $1,-208(%ebp)
	pushl %ebx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Deriveds
	leal -228(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe90:
	.size	 BldQuake__DerivedC,.Lfe90-BldQuake__DerivedC
	.align 16
	.type	 BldQuake__DoDerivedC,@function
BldQuake__DoDerivedC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L401
	pushl $19472
	call _m3_fault
	.align 16
.L401:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L402
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L403
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L402
.L403:
	pushl $19509
	call _m3_fault
	.align 16
.L402:
	pushl %esi
	pushl %edi
	call BldQuake__DerivedC
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe91:
	.size	 BldQuake__DoDerivedC,.Lfe91-BldQuake__DoDerivedC
	.align 16
	.type	 BldQuake__DerivedH,@function
BldQuake__DerivedH:
	pushl %ebp
	movl %esp,%ebp
	subl $212,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%eax
	pushl $MM_BldQuake+1932
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edi
	movl 8(%ebp),%ecx
	movl %edi,-4(%ebp)
	movl 420(%ecx),%edi
	pushl $0
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-212(%ebp)
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%ebx
	movl 352(%ecx),%eax
	pushl %eax
	movl 336(%ecx),%eax
	pushl %eax
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%ebx)
	movb $1,4(%ebx)
	movb $1,5(%ebx)
	movl (%edi),%eax
	movl -212(%ebp),%ecx
	addl $32,%esp
	movl 8(%eax),%esi
	movl %ecx,-8(%ebp)
	movl %ebx,-12(%ebp)
	leal -12(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%esi
	movl 8(%ebp),%ecx
	movl 424(%ecx),%esi
	movl (%esi),%eax
	movl 12(%eax),%ebx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl 8(%ebp),%ecx
	movl 428(%ecx),%ebx
	movl (%ebx),%eax
	movl 8(%eax),%esi
	movl $MM_BldQuake+2208,%eax
	movl %eax,-16(%ebp)
	movl %eax,-20(%ebp)
	leal -20(%ebp),%eax
	pushl %eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%esi
	addl $32,%esp
.L405:
	movl $MM_BldQuake+1548,-192(%ebp)
	movl $0,-196(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-200(%ebp)
	leal -200(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -180(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%edx
	addl $4,%esp
	testl %edx,%edx
	jne .L406
	pushl $1
	movl -4(%ebp),%eax
	pushl %eax
	pushl %edx
	movl MI_M3Driver+316,%eax
	call *%eax
	movl -200(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $12,%esp
	jmp .L407
	.align 16
.L406:
	pushl $MM_BldQuake+1636
	call BldQuake__CErr
	addl $4,%esp
.L407:
	movl 8(%ebp),%ecx
	movl 444(%ecx),%esi
	movl (%esi),%eax
	movl 8(%eax),%ebx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl 8(%ebp),%ecx
	addl $288,%ecx
	movl %ecx,-208(%ebp)
	movl $1,-204(%ebp)
	leal -208(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Deriveds
	leal -224(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe92:
	.size	 BldQuake__DerivedH,.Lfe92-BldQuake__DerivedH
	.align 16
	.type	 BldQuake__DoDerivedH,@function
BldQuake__DoDerivedH:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L410
	pushl $19920
	call _m3_fault
	.align 16
.L410:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L411
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L412
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L411
.L412:
	pushl $19957
	call _m3_fault
	.align 16
.L411:
	pushl %esi
	pushl %edi
	call BldQuake__DerivedH
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe93:
	.size	 BldQuake__DoDerivedH,.Lfe93-BldQuake__DoDerivedH
	.align 16
	.type	 BldQuake__GenerateTFile__WalkUnits.0,@function
BldQuake__GenerateTFile__WalkUnits.0:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl %ecx,-4(%ebp)
	movl 8(%ebp),%edx
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl (%edx),%eax
	movl -4(%ebp),%esi
	movl 20(%eax),%eax
	pushl %edx
	call *%eax
	movl %eax,%edi
	addl $4,%esp
	jmp .L415
	.align 16
.L416:
	movl -12(%ebp),%ecx
	testl %ecx,%ecx
	jne .L417
	pushl $20244
	call _m3_fault
	.align 16
.L417:
	cmpb $0,4(%ecx)
	je .L418
	cmpb $0,5(%ecx)
	je .L415
.L418:
	movl $0,-16(%ebp)
	movl -24(%esi),%edx
	movl (%edx),%eax
	movl 4(%eax),%ebx
	leal -16(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %edx
	call *%ebx
	movl MM_BldQuake+2240,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl -8(%ebp),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,(%ebx)
	movl %ebx,%ecx
	addl $20,%esp
	movl -16(%ebp),%eax
	testl %eax,%eax
	je .L422
	movl -4(%eax),%eax
	sall $11,%eax
	shrl $12,%eax
	cmpl %eax,MM_BldQuake+2244
	je .L422
	pushl $20293
	call _m3_fault
	.align 16
.L422:
	movl -16(%ebp),%eax
	movl %eax,4(%ecx)
	movl -24(%esi),%eax
	movl (%eax),%eax
	movl -12(%ebp),%edx
	movl 8(%eax),%ecx
	testl %edx,%edx
	jne .L423
	pushl $20308
	call _m3_fault
	.align 16
.L423:
	movl %ebx,-20(%ebp)
	leal -20(%ebp),%eax
	pushl %eax
	pushl %edx
	movl -24(%esi),%eax
	pushl %eax
	call *%ecx
	addl $12,%esp
.L415:
	movl (%edi),%eax
	movl 4(%eax),%ecx
	leal -12(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%ecx
	addl $12,%esp
	testl %eax,%eax
	jne .L416
	leal -32(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe94:
	.size	 BldQuake__GenerateTFile__WalkUnits.0,.Lfe94-BldQuake__GenerateTFile__WalkUnits.0
	.align 16
	.type	 BldQuake__GenerateTFile,@function
BldQuake__GenerateTFile:
	pushl %ebp
	movl %esp,%ebp
	subl $396,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	xorl %ebx,%ebx
	movl %ebx,-20(%ebp)
	movl %ebx,-16(%ebp)
	movl %ebx,-12(%ebp)
	movl %ebx,-8(%ebp)
	movl %ebx,-4(%ebp)
	movl MM_BldQuake+1240,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ecx
	movl (%ecx),%eax
	movl 24(%eax),%edx
	pushl %ebx
	pushl %ecx
	call *%edx
	movl %eax,%ecx
	movl %ecx,-24(%ebp)
	movl 8(%ebp),%edi
	movl %ebp,%ecx
	movl 396(%edi),%eax
	pushl %eax
	call BldQuake__GenerateTFile__WalkUnits.0
	movl 404(%edi),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__GenerateTFile__WalkUnits.0
	movl 408(%edi),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__GenerateTFile__WalkUnits.0
	addl $24,%esp
.L425:
	movl $MM_BldQuake+2036,-196(%ebp)
	movl $0,-200(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-204(%ebp)
	leal -204(%ebp),%edi
	movl %edi,RTThread__handlerStack
	leal -184(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L426
	pushl $1
	pushl $MM_BldQuake+2252
	movl MI_Utils+44,%eax
	call *%eax
	movl -24(%ebp),%edx
	movl %eax,%ecx
	movl (%edx),%eax
	movl %ecx,%ebx
	movl 20(%eax),%ecx
	pushl %edx
	call *%ecx
	movl %eax,-396(%ebp)
	addl $12,%esp
	jmp .L427
	.align 16
.L428:
	movl -20(%ebp),%eax
	testl %eax,%eax
	je .L429
	movl -4(%eax),%eax
	sall $11,%eax
	shrl $12,%eax
	cmpl %eax,MM_BldQuake+2244
	je .L429
	pushl $20741
	call _m3_fault
	.align 16
.L429:
	movl -20(%ebp),%esi
	movl -16(%ebp),%eax
	pushl %eax
	pushl $MM_BldQuake+2276
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%edi
	movl %eax,%edx
	movl 200(%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	pushl %ecx
	pushl %ebx
	movl MI_Wr+68,%eax
	call *%eax
	addl $24,%esp
	jmp .L430
	.align 16
.L431:
	movl 8(%ebp),%edi
	movl 200(%edi),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	pushl %ecx
	pushl %ebx
	movl MI_Wr+68,%eax
	call *%eax
	addl $16,%esp
	movl 4(%esi),%esi
.L430:
	testl %esi,%esi
	jne .L431
.L427:
	movl -396(%ebp),%edi
	movl (%edi),%eax
	movl 4(%eax),%ecx
	leal -20(%ebp),%eax
	pushl %eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%ecx
	addl $12,%esp
	testl %eax,%eax
	jne .L428
	pushl $MM_BldQuake+2252
	pushl %ebx
	movl MI_Utils+52,%eax
	call *%eax
	movl -204(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $8,%esp
	jmp .L436
	.align 16
.L426:
	pushl $MM_BldQuake+2252
	call BldQuake__FErr
	addl $4,%esp
.L436:
	movl 8(%ebp),%edi
	cmpb $0,489(%edi)
	je .L438
	pushl $MM_BldQuake+2252
	pushl %edi
	call BldQuake__InstallDerived
	addl $8,%esp
.L438:
	movl 8(%ebp),%ecx
	leal 288(%ecx),%edi
	movl %edi,-212(%ebp)
	movl $1,-208(%ebp)
	leal -212(%ebp),%eax
	pushl %eax
	pushl $MM_BldQuake+2252
	pushl %ecx
	call BldQuake__Deriveds
	addl $12,%esp
.L439:
	movl $MM_BldQuake+1548,-384(%ebp)
	movl $0,-388(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-392(%ebp)
	leal -392(%ebp),%edi
	movl %edi,RTThread__handlerStack
	leal -372(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L440
	pushl $MM_BldQuake+2252
	movl MI_Unit+52,%eax
	call *%eax
	movl -392(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L443
	.align 16
.L440:
	pushl $MM_BldQuake+2292
	call BldQuake__CErr
.L443:
	addl $4,%esp
	movb $2,-12(%ebp)
	pushl $0
	pushl $MM_BldQuake+2320
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,-8(%ebp)
	pushl $0
	pushl $MM_BldQuake+2344
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%edi
	movl %eax,%edx
	movl (%edi),%eax
	movl 16(%eax),%ecx
	pushl $0
	leal -12(%ebp),%eax
	pushl %eax
	pushl %edx
	pushl %edi
	call *%ecx
	leal -408(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe95:
	.size	 BldQuake__GenerateTFile,.Lfe95-BldQuake__GenerateTFile
	.align 16
	.type	 BldQuake__DoGenerateTFile,@function
BldQuake__DoGenerateTFile:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	cmpl $0,12(%ebp)
	je .L445
	pushl $21200
	call _m3_fault
	.align 16
.L445:
	testl %ecx,%ecx
	je .L446
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L447
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L446
.L447:
	pushl $21221
	call _m3_fault
	.align 16
.L446:
	pushl %ecx
	call BldQuake__GenerateTFile
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe96:
	.size	 BldQuake__DoGenerateTFile,.Lfe96-BldQuake__DoGenerateTFile
	.align 16
	.type	 BldQuake__Visibility,@function
BldQuake__Visibility:
	pushl %ebp
	movl %esp,%ebp
	cmpb $0,8(%ebp)
	jne .L449
	movl $MM_BldQuake+1208,%eax
	jmp .L450
	.align 16
.L449:
	movl $MM_BldQuake+2372,%eax
.L450:
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe97:
	.size	 BldQuake__Visibility,.Lfe97-BldQuake__Visibility
	.align 16
	.type	 BldQuake__GenM3Exports__GenUnitMap.1,@function
BldQuake__GenM3Exports__GenUnitMap.1:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl %ecx,-4(%ebp)
	movl 8(%ebp),%edx
	movl $0,-8(%ebp)
	movl (%edx),%eax
	movl -4(%ebp),%edi
	movl 20(%eax),%ebx
	pushl %edx
	call *%ebx
	movl %eax,-16(%ebp)
	addl $4,%esp
	jmp .L453
	.align 16
.L454:
	movl -8(%ebp),%eax
	testl %eax,%eax
	jne .L455
	pushl $21572
	call _m3_fault
	.align 16
.L455:
	cmpb $0,5(%eax)
	je .L453
	movl 12(%ebp),%esi
	pushl %esi
	pushl $MM_BldQuake+2392
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2416
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl -12(%ebp),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	pushl %eax
	call BldQuake__Escape
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl $MM_BldQuake+2432
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl -8(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L457
	pushl $21588
	call _m3_fault
	.align 16
.L457:
	movl (%eax),%eax
	pushl %eax
	movl -32(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call BldQuake__LocPkg
	pushl %eax
	call BldQuake__Escape
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl -8(%ebp),%eax
	addl $28,%esp
	testl %eax,%eax
	jne .L458
	pushl $21588
	call _m3_fault
	.align 16
.L458:
	movl (%eax),%eax
	pushl %eax
	movl -32(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call BldQuake__LocSubdir
	pushl %eax
	call BldQuake__Escape
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl -8(%ebp),%eax
	addl $28,%esp
	testl %eax,%eax
	jne .L459
	pushl $21588
	call _m3_fault
	.align 16
.L459:
	movb 4(%eax),%al
	andl $255,%eax
	pushl %eax
	call BldQuake__Visibility
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2452
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl -32(%edi),%eax
	movl (%eax),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl 16(%ebp),%esi
	pushl %esi
	movl MI_Wr+68,%eax
	call *%eax
	addl $36,%esp
.L453:
	movl -16(%ebp),%esi
	movl (%esi),%eax
	movl 4(%eax),%edx
	leal -8(%ebp),%eax
	pushl %eax
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	addl $12,%esp
	testl %eax,%eax
	jne .L454
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe98:
	.size	 BldQuake__GenM3Exports__GenUnitMap.1,.Lfe98-BldQuake__GenM3Exports__GenUnitMap.1
	.align 16
	.type	 BldQuake__GenM3Exports,@function
BldQuake__GenM3Exports:
	pushl %ebp
	movl %esp,%ebp
	subl $248,%esp
	pushl %edi
	leal 8(%ebp),%edx
	pushl %esi
	xorl %edi,%edi
	pushl %ebx
	movl %edx,-32(%ebp)
	movl %edi,-24(%ebp)
	movl %edi,-16(%ebp)
	movl %edi,-8(%ebp)
	movl 8(%ebp),%eax
	movl %edi,-4(%ebp)
	movl 364(%eax),%esi
	movl (%esi),%eax
	movl 20(%eax),%ebx
	pushl %esi
	call *%ebx
	movl %eax,%esi
	movl 8(%ebp),%eax
	movl %esi,-236(%ebp)
	movl 356(%eax),%esi
	movl (%esi),%eax
	movl 20(%eax),%ebx
	pushl %esi
	call *%ebx
	movl %eax,%esi
	movl 8(%ebp),%eax
	movl %esi,-232(%ebp)
	movl 376(%eax),%esi
	movl (%esi),%eax
	movl 20(%eax),%ebx
	pushl %esi
	call *%ebx
	movl %eax,-228(%ebp)
	addl $12,%esp
.L461:
	movl $MM_BldQuake+2036,-204(%ebp)
	movl $0,-208(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-212(%ebp)
	leal -212(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -192(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L462
	pushl $1
	pushl $MM_BldQuake+1792
	movl MI_Utils+44,%eax
	call *%eax
	movl %eax,%edi
	movl 8(%ebp),%eax
	movl 336(%eax),%eax
	pushl %eax
	pushl $MM_BldQuake+2468
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 8(%ebp),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $32,%esp
	cmpb $1,16(%ebp)
	jne .L463
	movl 12(%ebp),%edx
	pushl %edx
	pushl $MM_BldQuake+2496
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2452
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 8(%ebp),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl %esi
	jmp .L488
	.align 16
.L463:
	cmpb $0,16(%ebp)
	jne .L464
	movl 12(%ebp),%edx
	pushl %edx
	pushl $MM_BldQuake+2524
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2452
	movl %eax,%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 8(%ebp),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
.L488:
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $32,%esp
.L464:
	movl 8(%ebp),%eax
	movl 388(%eax),%ebx
	movl (%ebx),%eax
	movl 32(%eax),%esi
	pushl %ebx
	call *%esi
	movl $0,-240(%ebp)
	decl %eax
	movl %eax,-244(%ebp)
	addl $4,%esp
	jmp .L466
	.align 16
.L467:
	movl 8(%ebp),%eax
	movl 388(%eax),%esi
	movl (%esi),%eax
	movl -240(%ebp),%edx
	movl 44(%eax),%ebx
	pushl %edx
	pushl %esi
	call *%ebx
	movl %eax,%esi
	movl 8(%ebp),%eax
	movl %esi,-248(%ebp)
	movl 384(%eax),%esi
	pushl $0
	movl -248(%ebp),%edx
	pushl %edx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl (%esi),%eax
	movl 4(%eax),%ebx
	movl %ecx,-216(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal -216(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl -4(%ebp),%eax
	addl $28,%esp
	testl %eax,%eax
	jne .L468
	pushl $22132
	call _m3_fault
	.align 16
.L468:
	cmpb $0,5(%eax)
	je .L469
	movl -248(%ebp),%edx
	pushl %edx
	call BldQuake__Escape
	movl %eax,%ebx
	pushl %ebx
	pushl $MM_BldQuake+2552
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	movl %eax,%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl -4(%ebp),%eax
	addl $20,%esp
	testl %eax,%eax
	jne .L470
	pushl $22148
	call _m3_fault
	.align 16
.L470:
	movl (%eax),%eax
	pushl %eax
	call BldQuake__Escape
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2584
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 8(%ebp),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $36,%esp
.L469:
	incl -240(%ebp)
.L466:
	movl -244(%ebp),%edx
	cmpl %edx,-240(%ebp)
	jle .L467
	jmp .L472
	.align 16
.L473:
	movl -28(%ebp),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,%esi
	pushl %esi
	call BldQuake__Escape
	movl %eax,%esi
	pushl %esi
	pushl $MM_BldQuake+2612
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl -24(%ebp),%eax
	pushl %eax
	call BldQuake__Escape
	movl %eax,%ebx
	pushl %ebx
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $36,%esp
	pushl $MM_BldQuake+2452
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	movl 8(%ebp),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $24,%esp
.L472:
	movl -236(%ebp),%edx
	movl (%edx),%eax
	movl 4(%eax),%ebx
	leal -24(%ebp),%eax
	pushl %eax
	leal -28(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%ebx
	addl $12,%esp
	testl %eax,%eax
	jne .L473
	jmp .L475
	.align 16
.L476:
	movl -20(%ebp),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
	call BldQuake__Escape
	movl %eax,%ecx
	pushl %ecx
	pushl $MM_BldQuake+2636
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl -16(%ebp),%eax
	pushl %eax
	call BldQuake__Escape
	movl %eax,%esi
	pushl %esi
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $36,%esp
	pushl $MM_BldQuake+2452
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 8(%ebp),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl %esi
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $24,%esp
.L475:
	movl -232(%ebp),%edx
	movl (%edx),%eax
	movl 4(%eax),%esi
	leal -16(%ebp),%eax
	pushl %eax
	leal -20(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%esi
	addl $12,%esp
	testl %eax,%eax
	jne .L476
	jmp .L478
	.align 16
.L479:
	movl -8(%ebp),%eax
	testl %eax,%eax
	jne .L480
	pushl $22468
	call _m3_fault
	.align 16
.L480:
	cmpb $0,5(%eax)
	je .L478
	movl -12(%ebp),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,%esi
	pushl %esi
	call BldQuake__Escape
	movl %eax,%esi
	pushl %esi
	pushl $MM_BldQuake+2668
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl -8(%ebp),%eax
	addl $24,%esp
	testl %eax,%eax
	jne .L482
	pushl $22484
	call _m3_fault
	.align 16
.L482:
	movl (%eax),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call BldQuake__LocPkg
	movl %eax,%ebx
	pushl %ebx
	call BldQuake__Escape
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	movl %eax,%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl -8(%ebp),%eax
	addl $28,%esp
	testl %eax,%eax
	jne .L483
	pushl $22484
	call _m3_fault
	.align 16
.L483:
	movl (%eax),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call BldQuake__LocSubdir
	pushl %eax
	call BldQuake__Escape
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2452
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	movl 8(%ebp),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $36,%esp
	movl %eax,%ecx
	pushl %ecx
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $8,%esp
.L478:
	movl -228(%ebp),%edx
	movl (%edx),%eax
	movl 4(%eax),%ecx
	leal -8(%ebp),%eax
	pushl %eax
	leal -12(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%ecx
	addl $12,%esp
	testl %eax,%eax
	jne .L479
	pushl %edi
	pushl $MM_BldQuake+2696
	movl 8(%ebp),%eax
	movl %ebp,%ecx
	movl 396(%eax),%eax
	pushl %eax
	call BldQuake__GenM3Exports__GenUnitMap.1
	pushl %edi
	pushl $MM_BldQuake+2720
	movl 8(%ebp),%eax
	movl %ebp,%ecx
	movl 404(%eax),%eax
	pushl %eax
	call BldQuake__GenM3Exports__GenUnitMap.1
	pushl %edi
	pushl $MM_BldQuake+2752
	movl 8(%ebp),%eax
	movl %ebp,%ecx
	movl 408(%eax),%eax
	pushl %eax
	call BldQuake__GenM3Exports__GenUnitMap.1
	addl $36,%esp
	pushl %edi
	pushl $MM_BldQuake+2780
	movl 8(%ebp),%eax
	movl %ebp,%ecx
	movl 400(%eax),%eax
	pushl %eax
	call BldQuake__GenM3Exports__GenUnitMap.1
	pushl %edi
	pushl $MM_BldQuake+2800
	movl 8(%ebp),%eax
	movl %ebp,%ecx
	movl 412(%eax),%eax
	pushl %eax
	call BldQuake__GenM3Exports__GenUnitMap.1
	pushl %edi
	pushl $MM_BldQuake+2816
	movl 8(%ebp),%eax
	movl %ebp,%ecx
	movl 420(%eax),%eax
	pushl %eax
	call BldQuake__GenM3Exports__GenUnitMap.1
	addl $36,%esp
	pushl %edi
	pushl $MM_BldQuake+2832
	movl 8(%ebp),%eax
	movl %ebp,%ecx
	movl 432(%eax),%eax
	pushl %eax
	call BldQuake__GenM3Exports__GenUnitMap.1
	movl 8(%ebp),%eax
	movl 436(%eax),%eax
	pushl %eax
	movl MI_M3Buf+72,%eax
	call *%eax
	movl %eax,%ecx
	pushl %ecx
	call BldQuake__Escape
	movl %eax,%ecx
	pushl %ecx
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_BldHooks+56,%eax
	call *%eax
	movl 8(%ebp),%eax
	addl $32,%esp
	cmpb $0,489(%eax)
	je .L485
	pushl $MM_BldQuake+1792
	pushl %eax
	call BldQuake__InstallDerived
	addl $8,%esp
.L485:
	movl 8(%ebp),%ecx
	leal 288(%ecx),%edx
	movl %edx,-224(%ebp)
	movl $1,-220(%ebp)
	leal -224(%ebp),%eax
	pushl %eax
	movl $MM_BldQuake+1792,%ebx
	pushl %ebx
	pushl %ecx
	call BldQuake__Deriveds
	pushl %ebx
	pushl %edi
	movl MI_Utils+52,%eax
	call *%eax
	movl -212(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L451
	.align 16
.L462:
	pushl $MM_BldQuake+1792
	call BldQuake__FErr
.L451:
	leal -260(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe99:
	.size	 BldQuake__GenM3Exports,.Lfe99-BldQuake__GenM3Exports
	.align 16
	.type	 BldQuake__DoGenM3Exports,@function
BldQuake__DoGenM3Exports:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L490
	pushl $23024
	call _m3_fault
	.align 16
.L490:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L491
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L492
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L491
.L492:
	pushl $23061
	call _m3_fault
	.align 16
.L491:
	pushl $2
	pushl %esi
	pushl %edi
	call BldQuake__GenM3Exports
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe100:
	.size	 BldQuake__DoGenM3Exports,.Lfe100-BldQuake__DoGenM3Exports
	.align 16
	.type	 BldQuake__U_Program,@function
BldQuake__U_Program:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	pushl $0
	pushl %edi
	pushl %esi
	call BldQuake__GenM3Exports
	addl $12,%esp
	cmpb $0,489(%esi)
	je .L494
	movb $0,196(%esi)
	pushl $MM_BldQuake+1208
	pushl %edi
	movl MI_Text+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L495
	movl %edi,192(%esi)
	jmp .L496
	.align 16
.L495:
	movl $0,192(%esi)
.L496:
	pushl %esi
	call BldQuake__M3
	pushl %esi
	call BldQuake__InstallSources
	addl $8,%esp
.L494:
	movl 240(%esi),%eax
	movl %eax,-8(%ebp)
	movl $MM_BldQuake+2848,-4(%ebp)
	leal -8(%ebp),%edx
	movl %edx,-16(%ebp)
	movl $2,-12(%ebp)
	leal -16(%ebp),%ebx
	pushl %ebx
	pushl %edi
	pushl %esi
	call BldQuake__Deriveds
	movl $MM_BldQuake+2864,-16(%ebp)
	movl $5,-12(%ebp)
	pushl %ebx
	pushl $MM_BldQuake+1208
	pushl %esi
	call BldQuake__Deriveds
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe101:
	.size	 BldQuake__U_Program,.Lfe101-BldQuake__U_Program
	.align 16
	.type	 BldQuake__DoProgram,@function
BldQuake__DoProgram:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L498
	pushl $23520
	call _m3_fault
	.align 16
.L498:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,%ebx
	addl $16,%esp
	testl %edi,%edi
	je .L499
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L500
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L499
.L500:
	pushl $23557
	call _m3_fault
	.align 16
.L499:
	pushl %ebx
	pushl %edi
	call BldQuake__U_Program
	addl $8,%esp
	testl %edi,%edi
	je .L501
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L502
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L501
.L502:
	pushl $23573
	call _m3_fault
	.align 16
.L501:
	cmpb $0,489(%edi)
	je .L497
	testl %edi,%edi
	je .L504
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L505
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L504
.L505:
	pushl $23589
	call _m3_fault
	.align 16
.L504:
	pushl %ebx
	pushl %edi
	call BldQuake__ProgramName
	movl %eax,%esi
	addl $8,%esp
	testl %edi,%edi
	je .L506
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L507
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L506
.L507:
	pushl $23589
	call _m3_fault
	.align 16
.L506:
	pushl %esi
	pushl %edi
	call BldQuake__InstallDerived
.L497:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe102:
	.size	 BldQuake__DoProgram,.Lfe102-BldQuake__DoProgram
	.align 16
	.type	 BldQuake__DoPROGRAM,@function
BldQuake__DoPROGRAM:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L509
	pushl $23696
	call _m3_fault
	.align 16
.L509:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,%ebx
	addl $16,%esp
	testl %edi,%edi
	je .L510
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L511
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L510
.L511:
	pushl $23733
	call _m3_fault
	.align 16
.L510:
	pushl %ebx
	pushl %edi
	call BldQuake__U_Program
	addl $8,%esp
	testl %edi,%edi
	je .L512
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L513
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L512
.L513:
	pushl $23749
	call _m3_fault
	.align 16
.L512:
	pushl %ebx
	pushl %edi
	call BldQuake__ProgramName
	movl %eax,%esi
	addl $8,%esp
	testl %edi,%edi
	je .L514
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L515
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L514
.L515:
	pushl $23749
	call _m3_fault
	.align 16
.L514:
	pushl $1
	pushl %esi
	pushl %edi
	call BldQuake__BinExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe103:
	.size	 BldQuake__DoPROGRAM,.Lfe103-BldQuake__DoPROGRAM
	.align 16
	.type	 BldQuake__CProgram,@function
BldQuake__CProgram:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	pushl $0
	pushl %edi
	pushl %esi
	call BldQuake__GenM3Exports
	addl $12,%esp
	cmpb $0,489(%esi)
	je .L517
	movb $1,196(%esi)
	pushl $MM_BldQuake+1208
	pushl %edi
	movl MI_Text+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L518
	movl %edi,192(%esi)
	jmp .L519
	.align 16
.L518:
	movl $0,192(%esi)
.L519:
	pushl %esi
	call BldQuake__M3
	pushl %esi
	call BldQuake__InstallSources
	addl $8,%esp
.L517:
	movl 240(%esi),%eax
	movl %eax,-8(%ebp)
	movl $MM_BldQuake+2848,-4(%ebp)
	leal -8(%ebp),%edx
	movl %edx,-16(%ebp)
	movl $2,-12(%ebp)
	leal -16(%ebp),%ebx
	pushl %ebx
	pushl %edi
	pushl %esi
	call BldQuake__Deriveds
	movl $MM_BldQuake+2976,-16(%ebp)
	movl $1,-12(%ebp)
	pushl %ebx
	pushl $MM_BldQuake+1208
	pushl %esi
	call BldQuake__Deriveds
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe104:
	.size	 BldQuake__CProgram,.Lfe104-BldQuake__CProgram
	.align 16
	.type	 BldQuake__DoCProgram,@function
BldQuake__DoCProgram:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L521
	pushl $24160
	call _m3_fault
	.align 16
.L521:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L522
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L523
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L522
.L523:
	pushl $24197
	call _m3_fault
	.align 16
.L522:
	pushl %esi
	pushl %edi
	call BldQuake__CProgram
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe105:
	.size	 BldQuake__DoCProgram,.Lfe105-BldQuake__DoCProgram
	.align 16
	.type	 BldQuake__DoCPROGRAM,@function
BldQuake__DoCPROGRAM:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L525
	pushl $24288
	call _m3_fault
	.align 16
.L525:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,%ebx
	addl $16,%esp
	testl %edi,%edi
	je .L526
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L527
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L526
.L527:
	pushl $24325
	call _m3_fault
	.align 16
.L526:
	pushl %ebx
	pushl %edi
	call BldQuake__CProgram
	addl $8,%esp
	testl %edi,%edi
	je .L528
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L529
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L528
.L529:
	pushl $24341
	call _m3_fault
	.align 16
.L528:
	pushl %ebx
	pushl %edi
	call BldQuake__ProgramName
	movl %eax,%esi
	addl $8,%esp
	testl %edi,%edi
	je .L530
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L531
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L530
.L531:
	pushl $24341
	call _m3_fault
	.align 16
.L530:
	pushl $1
	pushl %esi
	pushl %edi
	call BldQuake__BinExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe106:
	.size	 BldQuake__DoCPROGRAM,.Lfe106-BldQuake__DoCPROGRAM
	.align 16
	.type	 BldQuake__Library,@function
BldQuake__Library:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 232(%esi),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edi
	movl 236(%esi),%eax
	pushl %eax
	pushl %edi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-40(%ebp)
	movl 12(%ebp),%ecx
	pushl %ecx
	movl 232(%esi),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2848
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-36(%ebp)
	addl $32,%esp
	movl 376(%esi),%edi
	pushl $0
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-44(%ebp)
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl 352(%esi),%eax
	pushl %eax
	movl 332(%esi),%eax
	pushl %eax
	pushl %esi
	call BldQuake__Location
	movl %eax,(%ebx)
	movb $1,4(%ebx)
	movb $1,5(%ebx)
	movl (%edi),%eax
	movl -44(%ebp),%ecx
	movl 8(%eax),%edx
	movl %ecx,-4(%ebp)
	movl %ebx,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%edx
	addl $36,%esp
	pushl $1
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl %esi
	call BldQuake__GenM3Exports
	addl $12,%esp
	cmpb $0,489(%esi)
	je .L533
	movl -40(%ebp),%ecx
	movl %ecx,188(%esi)
	pushl %esi
	call BldQuake__M3
	movl -40(%ebp),%ecx
	pushl %ecx
	pushl %esi
	call BldQuake__InstallDerived
	movl -36(%ebp),%ecx
	pushl %ecx
	pushl %esi
	call BldQuake__InstallDerived
	pushl %esi
	call BldQuake__InstallSources
	addl $24,%esp
.L533:
	movl -40(%ebp),%ecx
	movl %ecx,-24(%ebp)
	movl -36(%ebp),%ecx
	movl %ecx,-20(%ebp)
	movl $MM_BldQuake+2960,-16(%ebp)
	movl $MM_BldQuake+2252,-12(%ebp)
	leal -24(%ebp),%ecx
	movl %ecx,-32(%ebp)
	movl $4,-28(%ebp)
	leal -32(%ebp),%eax
	pushl %eax
	pushl $MM_BldQuake+1208
	pushl %esi
	call BldQuake__Deriveds
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl %esi
	movl MI_BldHooks+188,%eax
	call *%eax
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe107:
	.size	 BldQuake__Library,.Lfe107-BldQuake__Library
	.align 16
	.type	 BldQuake__DoLibrary,@function
BldQuake__DoLibrary:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L535
	pushl $24816
	call _m3_fault
	.align 16
.L535:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L536
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L537
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L536
.L537:
	pushl $24853
	call _m3_fault
	.align 16
.L536:
	pushl %esi
	pushl %edi
	call BldQuake__Library
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe108:
	.size	 BldQuake__DoLibrary,.Lfe108-BldQuake__DoLibrary
	.align 16
	.type	 BldQuake__DoLIBRARY,@function
BldQuake__DoLIBRARY:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L539
	pushl $24944
	call _m3_fault
	.align 16
.L539:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L540
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L541
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L540
.L541:
	pushl $24981
	call _m3_fault
	.align 16
.L540:
	pushl %esi
	pushl %edi
	call BldQuake__Library
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe109:
	.size	 BldQuake__DoLIBRARY,.Lfe109-BldQuake__DoLIBRARY
	.align 16
	.type	 BldQuake__InstallDerived,@function
BldQuake__InstallDerived:
	pushl %ebp
	movl %esp,%ebp
	subl $196,%esp
	pushl %edi
	pushl %esi
	xorl %edi,%edi
	pushl %ebx
	movl %edi,-12(%ebp)
	movl %edi,-8(%ebp)
	movl 8(%ebp),%ecx
	movl %edi,-4(%ebp)
	movl 204(%ecx),%eax
	pushl %eax
	movl 144(%ecx),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl 336(%ecx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%esi
	movl 204(%ecx),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl 352(%ecx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	movl %eax,-196(%ebp)
	pushl %edi
	pushl $MM_BldQuake+2984
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 12(%eax),%eax
	pushl %ebx
	pushl %edx
	pushl %ecx
	call *%eax
	addl $20,%esp
	testl %eax,%eax
	je .L545
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L542
.L545:
	movl $MM_BldQuake+3008,-184(%ebp)
	movl $0,-188(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-192(%ebp)
	leal -192(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -172(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L546
	movl $MM_BldQuake+3032,%ebx
	pushl %ebx
	movl MI_FileWr+152,%eax
	call *%eax
	movl %eax,%edi
	pushl %edi
	movl -196(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_InstallDir
	movl 12(%ebp),%ecx
	pushl %ecx
	call BldQuake__Escape
	pushl %eax
	pushl $MM_BldQuake+3052
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	addl $36,%esp
	movl -196(%ebp),%ecx
	pushl %ecx
	call BldQuake__Escape
	movl %eax,%edx
	pushl %edx
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+3080
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl 200(%ecx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $36,%esp
	pushl %ebx
	pushl %edi
	movl MI_Utils+52,%eax
	call *%eax
	movl -192(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L542
	.align 16
.L546:
	pushl $MM_BldQuake+3032
	call BldQuake__FErr
.L542:
	leal -208(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe110:
	.size	 BldQuake__InstallDerived,.Lfe110-BldQuake__InstallDerived
	.align 16
	.type	 BldQuake__DoInstallDerived,@function
BldQuake__DoInstallDerived:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L550
	pushl $25456
	call _m3_fault
	.align 16
.L550:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L551
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L552
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L551
.L552:
	pushl $25493
	call _m3_fault
	.align 16
.L551:
	pushl %esi
	pushl %edi
	call BldQuake__InstallDerived
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe111:
	.size	 BldQuake__DoInstallDerived,.Lfe111-BldQuake__DoInstallDerived
	.align 16
	.type	 BldQuake__InstallLink,@function
BldQuake__InstallLink:
	pushl %ebp
	movl %esp,%ebp
	subl $196,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	pushl $0
	pushl $MM_BldQuake+2984
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 12(%eax),%eax
	pushl %ebx
	pushl %edx
	pushl %ecx
	call *%eax
	addl $20,%esp
	testl %eax,%eax
	je .L554
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L554
	pushl $1
	pushl $MM_BldQuake+3104
	movl 20(%ebp),%ecx
	pushl %ecx
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__InstallFile
	jmp .L553
	.align 16
.L554:
	movl 8(%ebp),%ecx
	movl 204(%ecx),%eax
	pushl %eax
	movl 16(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %esi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,16(%ebp)
	movl 204(%ecx),%eax
	pushl %eax
	movl 20(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %esi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-196(%ebp)
	addl $32,%esp
.L556:
	movl $MM_BldQuake+3008,-184(%ebp)
	movl $0,-188(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-192(%ebp)
	leal -192(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -172(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L557
	movl $MM_BldQuake+3032,%ebx
	pushl %ebx
	movl MI_FileWr+152,%eax
	call *%eax
	movl %eax,%edi
	pushl %edi
	movl 20(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_InstallDir
	movl 16(%ebp),%ecx
	pushl %ecx
	call BldQuake__Escape
	pushl %eax
	pushl $MM_BldQuake+3124
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	addl $36,%esp
	movl -196(%ebp),%ecx
	pushl %ecx
	call BldQuake__Escape
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2452
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl 200(%ecx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $36,%esp
	pushl %ebx
	pushl %edi
	movl MI_Utils+52,%eax
	call *%eax
	movl -192(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L553
	.align 16
.L557:
	pushl $MM_BldQuake+3032
	call BldQuake__FErr
.L553:
	leal -208(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe112:
	.size	 BldQuake__InstallLink,.Lfe112-BldQuake__InstallLink
	.align 16
	.type	 BldQuake__DoInstallLink,@function
BldQuake__DoInstallLink:
	pushl %ebp
	movl %esp,%ebp
	subl $40,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L561
	pushl $25984
	call _m3_fault
	.align 16
.L561:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-40(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -40(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	cmpl $0,8(%ebp)
	je .L562
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L563
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L562
.L563:
	pushl $26053
	call _m3_fault
	.align 16
.L562:
	pushl %esi
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__InstallLink
	leal -52(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe113:
	.size	 BldQuake__DoInstallLink,.Lfe113-BldQuake__DoInstallLink
	.align 16
	.type	 BldQuake__InstallAliasLink,@function
BldQuake__InstallAliasLink:
	pushl %ebp
	movl %esp,%ebp
	subl $196,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%esi
	movl 20(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	pushl $0
	pushl $MM_BldQuake+2984
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 12(%eax),%eax
	pushl %ebx
	pushl %edx
	pushl %ecx
	call *%eax
	addl $20,%esp
	testl %eax,%eax
	je .L565
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L565
	pushl $MM_BldQuake+3148
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $8,%esp
.L565:
	movl 8(%ebp),%ecx
	movl 204(%ecx),%eax
	pushl %eax
	movl 16(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %esi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,16(%ebp)
	movl 204(%ecx),%eax
	pushl %eax
	movl 24(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %edi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-196(%ebp)
	addl $32,%esp
.L566:
	movl $MM_BldQuake+3008,-184(%ebp)
	movl $0,-188(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-192(%ebp)
	leal -192(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -172(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L567
	movl $MM_BldQuake+3032,%ebx
	pushl %ebx
	movl MI_FileWr+152,%eax
	call *%eax
	movl %eax,%edi
	pushl %edi
	movl 24(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_InstallDir
	movl 16(%ebp),%ecx
	pushl %ecx
	call BldQuake__Escape
	pushl %eax
	pushl $MM_BldQuake+3124
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	addl $36,%esp
	movl -196(%ebp),%ecx
	pushl %ecx
	call BldQuake__Escape
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2452
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl 200(%ecx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $36,%esp
	pushl %ebx
	pushl %edi
	movl MI_Utils+52,%eax
	call *%eax
	movl -192(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L564
	.align 16
.L567:
	pushl $MM_BldQuake+3032
	call BldQuake__FErr
.L564:
	leal -208(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe114:
	.size	 BldQuake__InstallAliasLink,.Lfe114-BldQuake__InstallAliasLink
	.align 16
	.type	 BldQuake__DoInstallAliasLink,@function
BldQuake__DoInstallAliasLink:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L571
	pushl $26560
	call _m3_fault
	.align 16
.L571:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-52(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-56(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -48(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	movl -56(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -52(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-60(%ebp)
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L572
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L573
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L572
.L573:
	pushl $26645
	call _m3_fault
	.align 16
.L572:
	movl -60(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__InstallAliasLink
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe115:
	.size	 BldQuake__DoInstallAliasLink,.Lfe115-BldQuake__DoInstallAliasLink
	.align 16
	.type	 BldQuake__InstallSources__WalkUnits.2,@function
BldQuake__InstallSources__WalkUnits.2:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl %ecx,-4(%ebp)
	movl 8(%ebp),%edx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl (%edx),%eax
	movl -4(%ebp),%esi
	movl 20(%eax),%eax
	pushl %edx
	call *%eax
	movl %eax,%edi
	addl $4,%esp
	jmp .L576
	.align 16
.L577:
	movl -12(%ebp),%ecx
	testl %ecx,%ecx
	jne .L578
	pushl $26932
	call _m3_fault
	.align 16
.L578:
	cmpb $0,5(%ecx)
	je .L576
	movl $0,-8(%ebp)
	movl -24(%esi),%edx
	movl (%edx),%eax
	movl 4(%eax),%ebx
	leal -8(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %edx
	call *%ebx
	movl MM_BldQuake+2240,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl -16(%ebp),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	movl %eax,(%ebx)
	movl %ebx,%ecx
	addl $20,%esp
	movl -8(%ebp),%eax
	testl %eax,%eax
	je .L581
	movl -4(%eax),%eax
	sall $11,%eax
	shrl $12,%eax
	cmpl %eax,MM_BldQuake+2244
	je .L581
	pushl $26981
	call _m3_fault
	.align 16
.L581:
	movl -8(%ebp),%eax
	movl %eax,4(%ecx)
	movl -24(%esi),%eax
	movl (%eax),%eax
	movl -12(%ebp),%edx
	movl 8(%eax),%ecx
	testl %edx,%edx
	jne .L582
	pushl $26996
	call _m3_fault
	.align 16
.L582:
	movl %ebx,-20(%ebp)
	leal -20(%ebp),%eax
	pushl %eax
	pushl %edx
	movl -24(%esi),%eax
	pushl %eax
	call *%ecx
	addl $12,%esp
.L576:
	movl (%edi),%eax
	movl 4(%eax),%ecx
	leal -12(%ebp),%eax
	pushl %eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%ecx
	addl $12,%esp
	testl %eax,%eax
	jne .L577
	leal -32(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe116:
	.size	 BldQuake__InstallSources__WalkUnits.2,.Lfe116-BldQuake__InstallSources__WalkUnits.2
	.align 16
	.type	 BldQuake__InstallSources,@function
BldQuake__InstallSources:
	pushl %ebp
	movl %esp,%ebp
	subl $224,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-24(%ebp)
	movl $0,-224(%ebp)
	movl -224(%ebp),%edi
	movl %edi,-8(%ebp)
	movl %edi,-4(%ebp)
	movl MM_BldQuake+1240,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	movl (%edx),%eax
	movl 24(%eax),%esi
	pushl %edi
	pushl %edx
	call *%esi
	movl %eax,%ebx
	movl %ebx,-24(%ebp)
	pushl %edi
	pushl $MM_BldQuake+2984
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%edi
	movl %eax,%edx
	movl (%edi),%eax
	leal -20(%ebp),%esi
	movl 12(%eax),%ebx
	pushl %esi
	pushl %edx
	pushl %edi
	call *%ebx
	addl $32,%esp
	testl %eax,%eax
	je .L584
	pushl %esi
	pushl %edi
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L574
.L584:
	movl 8(%ebp),%edi
	movl %ebp,%ecx
	movl 396(%edi),%eax
	pushl %eax
	call BldQuake__InstallSources__WalkUnits.2
	movl 404(%edi),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__InstallSources__WalkUnits.2
	movl 408(%edi),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__InstallSources__WalkUnits.2
	movl 420(%edi),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__InstallSources__WalkUnits.2
	movl 440(%edi),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__InstallSources__WalkUnits.2
	movl -224(%ebp),%edi
	pushl %edi
	pushl $MM_BldQuake+3208
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%edi
	movl %eax,%edx
	movl (%edi),%eax
	movl 12(%eax),%ebx
	pushl %esi
	pushl %edx
	pushl %edi
	call *%ebx
	addl $40,%esp
	testl %eax,%eax
	je .L586
	pushl %esi
	pushl %edi
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L586
	movl 400(%edi),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__InstallSources__WalkUnits.2
	movl 412(%edi),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__InstallSources__WalkUnits.2
	movl 432(%edi),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__InstallSources__WalkUnits.2
	addl $12,%esp
.L586:
	leal -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edi
	pushl %edi
	movl MI_QVal+48,%eax
	call *%eax
	pushl %eax
	pushl %edi
	movl MI_BldHooks+64,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,-224(%ebp)
	addl $16,%esp
	testl %ebx,%ebx
	je .L594
	xorl %esi,%esi
	movl 4(%ebx),%ebx
	decl %ebx
	movl %ebx,-220(%ebp)
	jmp .L589
	.align 16
.L590:
	cmpl $0,-224(%ebp)
	jne .L591
	pushl $27604
	call _m3_fault
	.align 16
.L591:
	movl -224(%ebp),%ebx
	cmpl %esi,4(%ebx)
	ja .L592
	pushl $27602
	call _m3_fault
	.align 16
.L592:
	movl (%ebx),%eax
	movl %ebp,%ecx
	movl (%eax,%esi,4),%eax
	pushl %eax
	call BldQuake__InstallSources__WalkUnits.2
	incl %esi
	addl $4,%esp
.L589:
	cmpl %esi,-220(%ebp)
	jge .L590
.L594:
	movl $MM_BldQuake+3008,-196(%ebp)
	movl $0,-200(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-204(%ebp)
	leal -204(%ebp),%edi
	movl %edi,RTThread__handlerStack
	leal -184(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L595
	pushl $MM_BldQuake+3032
	movl MI_FileWr+152,%eax
	call *%eax
	movl -24(%ebp),%edx
	movl %eax,-224(%ebp)
	movl (%edx),%eax
	movl 20(%eax),%ebx
	pushl %edx
	call *%ebx
	movl %eax,-216(%ebp)
	addl $8,%esp
	jmp .L596
	.align 16
.L597:
	movl -8(%ebp),%eax
	testl %eax,%eax
	je .L598
	movl -4(%eax),%eax
	sall $11,%eax
	shrl $12,%eax
	cmpl %eax,MM_BldQuake+2244
	je .L598
	pushl $27749
	call _m3_fault
	.align 16
.L598:
	movl -8(%ebp),%edi
	movl %edi,-212(%ebp)
	movl 8(%ebp),%edi
	movl 204(%edi),%eax
	pushl %eax
	movl 144(%edi),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl -4(%ebp),%eax
	pushl %eax
	pushl %edi
	call BldQuake__LocPkg
	movl %eax,%ebx
	pushl %ebx
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 204(%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	movl -4(%ebp),%eax
	pushl %eax
	pushl %edi
	call BldQuake__LocSubdir
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-208(%ebp)
	movl -224(%ebp),%edi
	pushl %edi
	movl -208(%ebp),%edi
	pushl %edi
	movl 8(%ebp),%edi
	pushl %edi
	call BldQuake__U_InstallDir
	addl $28,%esp
	jmp .L599
	.align 16
.L600:
	movl 8(%ebp),%edi
	movl 204(%edi),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl -212(%ebp),%edi
	addl $8,%esp
	movl (%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	call BldQuake__Escape
	movl %eax,%ebx
	pushl %ebx
	pushl $MM_BldQuake+3052
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl -208(%ebp),%edi
	pushl %edi
	call BldQuake__Escape
	addl $32,%esp
	movl %eax,%esi
	pushl %esi
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+3080
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%edi
	movl %eax,%edx
	movl 200(%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl -224(%ebp),%edi
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	movl -212(%ebp),%edi
	addl $32,%esp
	movl 4(%edi),%edi
	movl %edi,-212(%ebp)
.L599:
	cmpl $0,-212(%ebp)
	jne .L600
.L596:
	movl -216(%ebp),%edi
	movl (%edi),%eax
	movl 4(%eax),%edx
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%edx
	addl $12,%esp
	testl %eax,%eax
	jne .L597
	pushl $MM_BldQuake+3032
	movl -224(%ebp),%edi
	pushl %edi
	movl MI_Utils+52,%eax
	call *%eax
	movl -204(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L574
	.align 16
.L595:
	pushl $MM_BldQuake+3032
	call BldQuake__FErr
.L574:
	leal -236(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe117:
	.size	 BldQuake__InstallSources,.Lfe117-BldQuake__InstallSources
	.align 16
	.type	 BldQuake__DoInstallSources,@function
BldQuake__DoInstallSources:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	cmpl $0,12(%ebp)
	je .L608
	pushl $28032
	call _m3_fault
	.align 16
.L608:
	testl %ecx,%ecx
	je .L609
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L610
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L609
.L610:
	pushl $28053
	call _m3_fault
	.align 16
.L609:
	pushl %ecx
	call BldQuake__InstallSources
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe118:
	.size	 BldQuake__DoInstallSources,.Lfe118-BldQuake__DoInstallSources
	.align 16
	.type	 BldQuake__U_InstallDir,@function
BldQuake__U_InstallDir:
	pushl %ebp
	movl %esp,%ebp
	subl $36,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
.L612:
	movl $MM_BldQuake+1304,-20(%ebp)
	movl $4,-24(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-28(%ebp)
	leal -28(%ebp),%esi
	movl %esi,RTThread__handlerStack
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	pushl $0
	pushl $MM_BldQuake+2984
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl (%edi),%eax
	leal -16(%ebp),%ebx
	movl 12(%eax),%edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	call *%edx
	addl $20,%esp
	testl %eax,%eax
	je .L613
	pushl %ebx
	pushl %edi
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%ecx
	addl $8,%esp
	testl %ecx,%ecx
	je .L613
	movl 340(%edi),%eax
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%ecx
	addl $8,%esp
	testl %ecx,%ecx
	jne .L617
	movl 12(%ebp),%eax
	movl %eax,340(%edi)
	pushl %eax
	pushl $MM_BldQuake+3236
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 208(%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
	jmp .L618
	.align 16
.L613:
	movl 344(%edi),%ebx
	movl (%ebx),%eax
	leal 12(%ebp),%esi
	movl 4(%eax),%edx
	leal -4(%ebp),%eax
	pushl %eax
	movl %esi,-36(%ebp)
	pushl %esi
	pushl %ebx
	call *%edx
	movl %eax,%ecx
	addl $12,%esp
	testl %ecx,%ecx
	jne .L617
	movl 344(%edi),%edx
	movl (%edx),%eax
	movl 8(%eax),%ebx
	movl %ecx,-32(%ebp)
	leal -32(%ebp),%eax
	pushl %eax
	pushl %esi
	pushl %edx
	call *%ebx
	movl 12(%ebp),%eax
	pushl %eax
	call BldQuake__Escape
	movl %eax,%ebx
	pushl %ebx
	pushl $MM_BldQuake+3252
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2452
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	addl $32,%esp
	movl 200(%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
.L618:
	movl 16(%ebp),%esi
	pushl %esi
	movl MI_Wr+68,%eax
	call *%eax
.L617:
	movl -28(%ebp),%eax
	leal -48(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe119:
	.size	 BldQuake__U_InstallDir,.Lfe119-BldQuake__U_InstallDir
	.align 16
	.type	 BldQuake__DoM3Option,@function
BldQuake__DoM3Option:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L620
	pushl $28480
	call _m3_fault
	.align 16
.L620:
	movl (%esi),%eax
	movl 28(%eax),%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	addl $8,%esp
	testl %esi,%esi
	je .L621
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L622
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L621
.L622:
	pushl $28517
	call _m3_fault
	.align 16
.L621:
	movl 456(%esi),%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ecx
	movl (%ebx),%eax
	movl 12(%eax),%edx
	movl %ecx,-16(%ebp)
	leal -16(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe120:
	.size	 BldQuake__DoM3Option,.Lfe120-BldQuake__DoM3Option
	.align 16
	.type	 BldQuake__DoRemoveM3Option,@function
BldQuake__DoRemoveM3Option:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L624
	pushl $28672
	call _m3_fault
	.align 16
.L624:
	movl (%edi),%eax
	leal -16(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-20(%ebp)
	addl $16,%esp
	testl %edi,%edi
	je .L625
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L626
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L625
.L626:
	pushl $28709
	call _m3_fault
	.align 16
.L625:
	movl %edi,-24(%ebp)
	movl MM_BldQuake+1280,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl -24(%ebp),%ecx
	movl 456(%ecx),%edx
	movl %eax,%esi
	movl (%edx),%eax
	movl 32(%eax),%ebx
	pushl %edx
	call *%ebx
	movl %eax,%edx
	movl (%esi),%eax
	addl $8,%esp
	movl 4(%eax),%ebx
	leal -1(%edx),%eax
	movl $1,%edx
	cmpl %edx,%eax
	jle .L627
	movl %eax,%edx
.L627:
	testl %edx,%edx
	jge .L629
	pushl $28721
	call _m3_fault
	.align 16
.L629:
	pushl %edx
	pushl %esi
	call *%ebx
	movl -24(%ebp),%ecx
	movl 456(%ecx),%edx
	movl %eax,%edi
	movl (%edx),%eax
	movl 32(%eax),%ebx
	pushl %edx
	call *%ebx
	movl %eax,%edx
	xorl %esi,%esi
	decl %edx
	movl %edx,-28(%ebp)
	addl $12,%esp
	jmp .L630
	.align 16
.L631:
	movl -24(%ebp),%ecx
	movl 456(%ecx),%ebx
	movl (%ebx),%eax
	movl 44(%eax),%edx
	pushl %esi
	pushl %ebx
	call *%edx
	movl %eax,%ebx
	movl %ebx,-4(%ebp)
	pushl %ebx
	movl -20(%ebp),%ecx
	pushl %ecx
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%edx
	addl $16,%esp
	testl %edx,%edx
	jne .L632
	movl (%edi),%eax
	movl 12(%eax),%ebx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%ebx
	addl $8,%esp
.L632:
	incl %esi
.L630:
	cmpl %esi,-28(%ebp)
	jge .L631
	movl -24(%ebp),%ecx
	leal -40(%ebp),%esp
	movl %edi,456(%ecx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe121:
	.size	 BldQuake__DoRemoveM3Option,.Lfe121-BldQuake__DoRemoveM3Option
	.align 16
	.type	 BldQuake__DoOverride,@function
BldQuake__DoOverride:
	pushl %ebp
	movl %esp,%ebp
	subl $56,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
.L635:
	movl $MM_BldQuake+1304,-32(%ebp)
	movl $4,-36(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-40(%ebp)
	leal -40(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L636
	pushl $29008
	call _m3_fault
	.align 16
.L636:
	cmpl $0,8(%ebp)
	je .L637
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%esi
	shrl $12,%esi
	cmpl %esi,MM_BldQuake+1300
	jg .L638
	movl MM_BldQuake+1296,%eax
	cmpl %esi,4(%eax)
	jge .L637
.L638:
	pushl $29029
	call _m3_fault
	.align 16
.L637:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -16(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -28(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-4(%ebp)
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-56(%ebp)
	movl 8(%ebp),%ecx
	addl $32,%esp
	movl 332(%ecx),%eax
	pushl %eax
	movl -56(%ebp),%ecx
	pushl %ecx
	movl MI_Text+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L639
	movl 8(%ebp),%ecx
	cmpb $0,488(%ecx)
	jne .L642
	movl (%ecx),%eax
	movl 44(%eax),%edi
	pushl %ecx
	call *%edi
	movl -56(%ebp),%ecx
	pushl %ecx
	movl %eax,%esi
	pushl $MM_BldQuake+3276
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2432
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edi
	movl -4(%ebp),%eax
	pushl %eax
	pushl %edi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2452
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl 8(%ebp),%ecx
	addl $36,%esp
	movl 200(%ecx),%eax
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl %esi
	movl MI_Wr+68,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movb $1,488(%ecx)
	jmp .L642
	.align 16
.L639:
	pushl %eax
	movl -56(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl 364(%ecx),%edx
	movl %eax,%esi
	movl (%edx),%eax
	movl 8(%eax),%ebx
	movl %esi,-44(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal -44(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%ebx
	movl 8(%ebp),%ecx
	movl 360(%ecx),%ebx
	movl 204(%ecx),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl -56(%ebp),%ecx
	pushl %ecx
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl (%ebx),%eax
	addl $36,%esp
	movl 8(%eax),%edi
	movl %esi,-48(%ebp)
	movl %edx,-52(%ebp)
	leal -52(%ebp),%eax
	pushl %eax
	leal -48(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edi
.L642:
	movl -40(%ebp),%eax
	leal -68(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe122:
	.size	 BldQuake__DoOverride,.Lfe122-BldQuake__DoOverride
	.align 16
	.type	 BldQuake__DoResetCache,@function
BldQuake__DoResetCache:
	pushl %ebp
	movl %esp,%ebp
	cmpl $0,12(%ebp)
	je .L644
	pushl $29360
	call _m3_fault
	.align 16
.L644:
	movl MI_M3Driver+312,%eax
	call *%eax
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe123:
	.size	 BldQuake__DoResetCache,.Lfe123-BldQuake__DoResetCache
	.align 16
	.type	 BldQuake__M3,@function
BldQuake__M3:
	pushl %ebp
	movl %esp,%ebp
	subl $412,%esp
	pushl %edi
	pushl %esi
	xorl %edi,%edi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl %edi,-20(%ebp)
	movl %edi,-16(%ebp)
	movl %edi,-12(%ebp)
	movl %edi,-8(%ebp)
	movl %edi,-4(%ebp)
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_BldHooks+60,%eax
	call *%eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__GenerateTFile
	pushl %edi
	pushl $MM_BldQuake+3320
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl (%ecx),%eax
	movl 12(%eax),%esi
	leal -36(%ebp),%eax
	pushl %eax
	pushl %edx
	pushl %ecx
	call *%esi
	addl $28,%esp
	testl %eax,%eax
	je .L646
	movl MI_M3Driver+312,%eax
	call *%eax
.L646:
	movl %edi,-16(%ebp)
	movl 8(%ebp),%ecx
	movb $14,-8(%ebp)
	movl 380(%ecx),%esi
	movl (%esi),%eax
	movl 32(%eax),%ebx
	pushl %esi
	call *%ebx
	decl %eax
	movl %eax,-408(%ebp)
	addl $4,%esp
	jmp .L647
	.align 16
.L648:
	movl 8(%ebp),%ecx
	movl 380(%ecx),%ebx
	movl (%ebx),%eax
	movl 44(%eax),%esi
	pushl %edi
	pushl %ebx
	call *%esi
	movl %eax,%ebx
	movl 8(%ebp),%ecx
	movl %ebx,-12(%ebp)
	movl 376(%ecx),%ebx
	pushl $0
	movl -12(%ebp),%eax
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edx
	movl (%ebx),%eax
	movl 4(%eax),%esi
	movl %edx,-40(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal -40(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%esi
	addl $28,%esp
	testl %eax,%eax
	je .L649
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L650
	pushl $29812
	call _m3_fault
	.align 16
.L650:
	movl (%eax),%eax
	pushl %eax
	movl MI_M3Driver+324,%eax
	call *%eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl $0
	movl MI_M3Driver+320,%eax
	call *%eax
	addl $12,%esp
	jmp .L651
	.align 16
.L649:
	pushl $MM_BldQuake+3344
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $8,%esp
.L651:
	incl %edi
.L647:
	cmpl %edi,-408(%ebp)
	jge .L648
	movl 8(%ebp),%ecx
	movl 388(%ecx),%ebx
	movl (%ebx),%eax
	movl 32(%eax),%edx
	pushl %ebx
	call *%edx
	xorl %edi,%edi
	decl %eax
	movl %eax,-412(%ebp)
	addl $4,%esp
	jmp .L653
	.align 16
.L654:
	movl 8(%ebp),%ecx
	movl 388(%ecx),%edx
	movl (%edx),%eax
	movl 44(%eax),%ebx
	pushl %edi
	pushl %edx
	call *%ebx
	movl %eax,%esi
	movl 8(%ebp),%ecx
	movl %esi,-12(%ebp)
	movl 384(%ecx),%esi
	pushl $0
	movl -12(%ebp),%eax
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edx
	movl (%esi),%eax
	movl 4(%eax),%ebx
	movl %edx,-44(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal -44(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	addl $28,%esp
	testl %eax,%eax
	je .L655
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L656
	pushl $29956
	call _m3_fault
	.align 16
.L656:
	movl (%eax),%eax
	pushl %eax
	movl MI_M3Driver+324,%eax
	call *%eax
	leal -16(%ebp),%eax
	pushl %eax
	pushl $0
	movl MI_M3Driver+320,%eax
	call *%eax
	addl $12,%esp
	jmp .L657
	.align 16
.L655:
	pushl $MM_BldQuake+3392
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $8,%esp
.L657:
	incl %edi
.L653:
	cmpl %edi,-412(%ebp)
	jge .L654
.L659:
	movl $MM_BldQuake+3444,-216(%ebp)
	movl $0,-220(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-224(%ebp)
	leal -224(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -204(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L660
	movl MM_BldQuake+3456,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	movl (%edx),%eax
	movl 8(%ebp),%ecx
	movl 24(%eax),%eax
	pushl %ecx
	pushl %edx
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl MI_M3Driver+308,%eax
	call *%eax
	movl -224(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $16,%esp
	jmp .L661
	.align 16
.L660:
	cmpl $MI_BldFace+44,-212(%ebp)
	jne .L662
	pushl $MM_BldQuake+3468
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $8,%esp
.L662:
	pushl $0
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $8,%esp
.L661:
	movl 8(%ebp),%ecx
	cmpb $0,196(%ecx)
	jne .L664
	pushl $MM_BldQuake+2960
	pushl %ecx
	call BldQuake__InstallDerived
	addl $8,%esp
.L664:
	movl 8(%ebp),%ecx
	movl 364(%ecx),%edx
	movl (%edx),%eax
	movl 20(%eax),%eax
	pushl %edx
	call *%eax
	movl %eax,%edx
	movl %edx,%ebx
	movl (%ebx),%eax
	movl 4(%eax),%edx
	leal -20(%ebp),%eax
	pushl %eax
	leal -24(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $16,%esp
	testl %eax,%eax
	je .L645
	pushl $MM_BldQuake+3032
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_BldHooks+44,%eax
	call *%eax
	addl $8,%esp
.L666:
	movl $MM_BldQuake+2036,-396(%ebp)
	movl $0,-400(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-404(%ebp)
	leal -404(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -384(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L667
	pushl $1
	pushl $MM_BldQuake+3532
	movl MI_Utils+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edi
	movl 200(%ecx),%eax
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	movl -404(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L645
	.align 16
.L667:
	pushl $MM_BldQuake+3532
	call BldQuake__FErr
.L645:
	leal -424(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe124:
	.size	 BldQuake__M3,.Lfe124-BldQuake__M3
	.align 16
	.type	 BldQuake__DoM3,@function
BldQuake__DoM3:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	cmpl $0,12(%ebp)
	je .L671
	pushl $30464
	call _m3_fault
	.align 16
.L671:
	testl %ecx,%ecx
	je .L672
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L673
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L672
.L673:
	pushl $30485
	call _m3_fault
	.align 16
.L672:
	pushl %ecx
	call BldQuake__M3
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe125:
	.size	 BldQuake__DoM3,.Lfe125-BldQuake__DoM3
	.align 16
	.type	 BldQuake__DoM3FrontOption,@function
BldQuake__DoM3FrontOption:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L675
	pushl $30608
	call _m3_fault
	.align 16
.L675:
	movl (%esi),%eax
	movl 28(%eax),%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	addl $8,%esp
	testl %esi,%esi
	je .L676
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L677
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L676
.L677:
	pushl $30645
	call _m3_fault
	.align 16
.L676:
	movl 492(%esi),%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ecx
	movl (%ebx),%eax
	movl 12(%eax),%edx
	movl %ecx,-16(%ebp)
	leal -16(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe126:
	.size	 BldQuake__DoM3FrontOption,.Lfe126-BldQuake__DoM3FrontOption
	.align 16
	.type	 BldQuake__DoRemoveM3FrontOption,@function
BldQuake__DoRemoveM3FrontOption:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L679
	pushl $30800
	call _m3_fault
	.align 16
.L679:
	movl (%edi),%eax
	leal -16(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-20(%ebp)
	addl $16,%esp
	testl %edi,%edi
	je .L680
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L681
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L680
.L681:
	pushl $30837
	call _m3_fault
	.align 16
.L680:
	movl %edi,-24(%ebp)
	movl MM_BldQuake+1280,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl -24(%ebp),%ecx
	movl 492(%ecx),%edx
	movl %eax,%esi
	movl (%edx),%eax
	movl 32(%eax),%ebx
	pushl %edx
	call *%ebx
	movl %eax,%edx
	movl (%esi),%eax
	addl $8,%esp
	movl 4(%eax),%ebx
	leal -1(%edx),%eax
	movl $1,%edx
	cmpl %edx,%eax
	jle .L682
	movl %eax,%edx
.L682:
	testl %edx,%edx
	jge .L684
	pushl $30849
	call _m3_fault
	.align 16
.L684:
	pushl %edx
	pushl %esi
	call *%ebx
	movl -24(%ebp),%ecx
	movl 492(%ecx),%edx
	movl %eax,%edi
	movl (%edx),%eax
	movl 32(%eax),%ebx
	pushl %edx
	call *%ebx
	movl %eax,%edx
	xorl %esi,%esi
	decl %edx
	movl %edx,-28(%ebp)
	addl $12,%esp
	jmp .L685
	.align 16
.L686:
	movl -24(%ebp),%ecx
	movl 492(%ecx),%ebx
	movl (%ebx),%eax
	movl 44(%eax),%edx
	pushl %esi
	pushl %ebx
	call *%edx
	movl %eax,%ebx
	movl %ebx,-4(%ebp)
	pushl %ebx
	movl -20(%ebp),%ecx
	pushl %ecx
	movl MI_Text+48,%eax
	call *%eax
	movl %eax,%edx
	addl $16,%esp
	testl %edx,%edx
	jne .L687
	movl (%edi),%eax
	movl 12(%eax),%ebx
	leal -4(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%ebx
	addl $8,%esp
.L687:
	incl %esi
.L685:
	cmpl %esi,-28(%ebp)
	jge .L686
	movl -24(%ebp),%ecx
	leal -40(%ebp),%esp
	movl %edi,492(%ecx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe127:
	.size	 BldQuake__DoRemoveM3FrontOption,.Lfe127-BldQuake__DoRemoveM3FrontOption
	.align 16
	.type	 BldQuake__SetVisibility,@function
BldQuake__SetVisibility:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%ebx
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	pushl $0
	pushl %esi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-12(%ebp)
	movl (%ebx),%eax
	movl -12(%ebp),%ecx
	movl 4(%eax),%edx
	movl %ecx,-8(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $20,%esp
	testl %eax,%eax
	je .L690
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L691
	pushl $31124
	call _m3_fault
	.align 16
.L691:
	movb 20(%ebp),%cl
	movb %cl,4(%eax)
	jmp .L689
	.align 16
.L690:
	pushl %esi
	pushl $MM_BldQuake+3560
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+3588
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 200(%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	call BldQuake__Err
.L689:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe128:
	.size	 BldQuake__SetVisibility,.Lfe128-BldQuake__SetVisibility
	.align 16
	.type	 BldQuake__DoHideInterface,@function
BldQuake__DoHideInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	testl %edi,%edi
	je .L694
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L695
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L694
.L695:
	pushl $31269
	call _m3_fault
	.align 16
.L694:
	cmpl $1,12(%ebp)
	je .L696
	pushl $31312
	call _m3_fault
	.align 16
.L696:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	pushl $MM_BldQuake+1900
	movl %esi,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl %eax,%esi
	pushl %esi
	movl 396(%edi),%eax
	pushl %eax
	pushl %edi
	call BldQuake__SetVisibility
	addl $40,%esp
	pushl %ebx
	pushl $MM_BldQuake+3620
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 216(%edi),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 436(%edi),%eax
	pushl %eax
	movl MI_M3Buf+52,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe129:
	.size	 BldQuake__DoHideInterface,.Lfe129-BldQuake__DoHideInterface
	.align 16
	.type	 BldQuake__DoHideGenericInterface,@function
BldQuake__DoHideGenericInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	testl %edi,%edi
	je .L698
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L699
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L698
.L699:
	pushl $31493
	call _m3_fault
	.align 16
.L698:
	cmpl $1,12(%ebp)
	je .L700
	pushl $31536
	call _m3_fault
	.align 16
.L700:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	pushl $MM_BldQuake+1980
	movl %esi,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl %eax,%esi
	pushl %esi
	movl 404(%edi),%eax
	pushl %eax
	pushl %edi
	call BldQuake__SetVisibility
	addl $40,%esp
	pushl %ebx
	pushl $MM_BldQuake+3652
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 216(%edi),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 436(%edi),%eax
	pushl %eax
	movl MI_M3Buf+52,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe130:
	.size	 BldQuake__DoHideGenericInterface,.Lfe130-BldQuake__DoHideGenericInterface
	.align 16
	.type	 BldQuake__DoHideGenericImplementation,@function
BldQuake__DoHideGenericImplementation:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	testl %edi,%edi
	je .L702
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L703
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L702
.L703:
	pushl $31717
	call _m3_fault
	.align 16
.L702:
	cmpl $1,12(%ebp)
	je .L704
	pushl $31760
	call _m3_fault
	.align 16
.L704:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	pushl $MM_BldQuake+1996
	movl %esi,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl %eax,%esi
	pushl %esi
	movl 408(%edi),%eax
	pushl %eax
	pushl %edi
	call BldQuake__SetVisibility
	addl $40,%esp
	pushl %ebx
	pushl $MM_BldQuake+3692
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 216(%edi),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 436(%edi),%eax
	pushl %eax
	movl MI_M3Buf+52,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe131:
	.size	 BldQuake__DoHideGenericImplementation,.Lfe131-BldQuake__DoHideGenericImplementation
	.align 16
	.type	 BldQuake__DoExportInterface,@function
BldQuake__DoExportInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	testl %edi,%edi
	je .L706
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L707
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L706
.L707:
	pushl $31925
	call _m3_fault
	.align 16
.L706:
	cmpl $1,12(%ebp)
	je .L708
	pushl $31968
	call _m3_fault
	.align 16
.L708:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	pushl $MM_BldQuake+1900
	movl %esi,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $0
	movl %eax,%esi
	pushl %esi
	movl 396(%edi),%eax
	pushl %eax
	pushl %edi
	call BldQuake__SetVisibility
	addl $40,%esp
	pushl %ebx
	pushl $MM_BldQuake+3736
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 216(%edi),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 436(%edi),%eax
	pushl %eax
	movl MI_M3Buf+52,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe132:
	.size	 BldQuake__DoExportInterface,.Lfe132-BldQuake__DoExportInterface
	.align 16
	.type	 BldQuake__DoExportGenericInterface,@function
BldQuake__DoExportGenericInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	testl %edi,%edi
	je .L710
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L711
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L710
.L711:
	pushl $32149
	call _m3_fault
	.align 16
.L710:
	cmpl $1,12(%ebp)
	je .L712
	pushl $32192
	call _m3_fault
	.align 16
.L712:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	pushl $MM_BldQuake+1980
	movl %esi,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $0
	movl %eax,%esi
	pushl %esi
	movl 404(%edi),%eax
	pushl %eax
	pushl %edi
	call BldQuake__SetVisibility
	addl $40,%esp
	pushl %ebx
	pushl $MM_BldQuake+3768
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 216(%edi),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 436(%edi),%eax
	pushl %eax
	movl MI_M3Buf+52,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe133:
	.size	 BldQuake__DoExportGenericInterface,.Lfe133-BldQuake__DoExportGenericInterface
	.align 16
	.type	 BldQuake__DoExportGenericImplementation,@function
BldQuake__DoExportGenericImplementation:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	testl %edi,%edi
	je .L714
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L715
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L714
.L715:
	pushl $32373
	call _m3_fault
	.align 16
.L714:
	cmpl $1,12(%ebp)
	je .L716
	pushl $32416
	call _m3_fault
	.align 16
.L716:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	pushl $MM_BldQuake+1996
	movl %esi,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $0
	movl %eax,%esi
	pushl %esi
	movl 408(%edi),%eax
	pushl %eax
	pushl %edi
	call BldQuake__SetVisibility
	addl $40,%esp
	pushl %ebx
	pushl $MM_BldQuake+3808
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 216(%edi),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 436(%edi),%eax
	pushl %eax
	movl MI_M3Buf+52,%eax
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe134:
	.size	 BldQuake__DoExportGenericImplementation,.Lfe134-BldQuake__DoExportGenericImplementation
	.align 16
	.type	 BldQuake__ResourceNamed,@function
BldQuake__ResourceNamed:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 16(%ebp),%eax
	movl 448(%edx),%ebx
	pushl %eax
	pushl %edx
	call BldQuake__PathOf
	movl %eax,%ecx
	movl (%ebx),%eax
	movl 8(%eax),%edx
	movl %ecx,-4(%ebp)
	leal -4(%ebp),%eax
	pushl %eax
	leal 12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	movl -8(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe135:
	.size	 BldQuake__ResourceNamed,.Lfe135-BldQuake__ResourceNamed
	.align 16
	.type	 BldQuake__DoResourceNamed,@function
BldQuake__DoResourceNamed:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L719
	pushl $32704
	call _m3_fault
	.align 16
.L719:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L720
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L721
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L720
.L721:
	pushl $32757
	call _m3_fault
	.align 16
.L720:
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__ResourceNamed
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe136:
	.size	 BldQuake__DoResourceNamed,.Lfe136-BldQuake__DoResourceNamed
	.align 16
	.type	 BldQuake__DoResource,@function
BldQuake__DoResource:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L723
	pushl $32848
	call _m3_fault
	.align 16
.L723:
	movl (%esi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%eax
	pushl %ebx
	pushl %esi
	call *%eax
	pushl %ebx
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ecx
	addl $16,%esp
	testl %esi,%esi
	je .L724
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L725
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L724
.L725:
	pushl $32901
	call _m3_fault
	.align 16
.L724:
	pushl %ecx
	pushl %ecx
	pushl %esi
	call BldQuake__ResourceNamed
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe137:
	.size	 BldQuake__DoResource,.Lfe137-BldQuake__DoResource
	.align 16
	.type	 BldQuake__DerivedResource,@function
BldQuake__DerivedResource:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 448(%ebx),%edx
	movl (%edx),%eax
	movl 8(%eax),%ecx
	leal 12(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl %edx
	call *%ecx
	movl 12(%ebp),%eax
	movl %eax,-4(%ebp)
	leal -4(%ebp),%esi
	movl %esi,-12(%ebp)
	movl $1,-8(%ebp)
	leal -12(%ebp),%eax
	pushl %eax
	pushl $MM_BldQuake+1208
	pushl %ebx
	call BldQuake__Deriveds
	leal -20(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe138:
	.size	 BldQuake__DerivedResource,.Lfe138-BldQuake__DerivedResource
	.align 16
	.type	 BldQuake__DoDerivedResource,@function
BldQuake__DoDerivedResource:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L728
	pushl $33104
	call _m3_fault
	.align 16
.L728:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L729
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L730
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L729
.L730:
	pushl $33141
	call _m3_fault
	.align 16
.L729:
	pushl %esi
	pushl %edi
	call BldQuake__DerivedResource
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe139:
	.size	 BldQuake__DoDerivedResource,.Lfe139-BldQuake__DoDerivedResource
	.align 16
	.type	 BldQuake__Bundle,@function
BldQuake__Bundle:
	pushl %ebp
	movl %esp,%ebp
	subl $424,%esp
	pushl %esi
	pushl %ebx
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	pushl $MM_BldQuake+1900
	movl 12(%ebp),%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl MI_Arg+252,%eax
	movl %edx,-424(%ebp)
	call *%eax
	movl %eax,%edx
	movl %edx,-420(%ebp)
	movl 8(%ebp),%esi
	movb $0,-416(%ebp)
	movl 448(%esi),%edx
	movl (%edx),%eax
	movl 20(%eax),%ecx
	pushl %edx
	call *%ecx
	movl %eax,%edx
	movl %edx,-412(%ebp)
	pushl $0
	movl 12(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%esi
	pushl %esi
	call BldQuake__DerivedInterface
	movl 12(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%esi
	pushl %esi
	call BldQuake__DerivedImplementation
	addl $32,%esp
.L732:
	movl $MM_BldQuake+3848,-212(%ebp)
	movl $0,-216(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-220(%ebp)
	leal -220(%ebp),%esi
	movl %esi,RTThread__handlerStack
	leal -200(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L733
	leal -32(%ebp),%eax
	pushl %eax
	movl -424(%ebp),%esi
	pushl %esi
	movl MI_FS+184,%eax
	call *%eax
	movl -220(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $8,%esp
	jmp .L734
	.align 16
.L733:
	movb $1,-416(%ebp)
.L734:
	movl 8(%ebp),%esi
	cmpb $0,489(%esi)
	je .L736
.L737:
	movl $MM_BldQuake+3856,-392(%ebp)
	movl $0,-396(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-400(%ebp)
	leal -400(%ebp),%esi
	movl %esi,RTThread__handlerStack
	leal -380(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L738
	jmp .L739
	.align 16
.L740:
	pushl $MM_BldQuake+3872
	movl -420(%ebp),%esi
	pushl %esi
	movl MI_Arg+256,%eax
	call *%eax
	movl -40(%ebp),%eax
	pushl %eax
	pushl %esi
	movl MI_Arg+256,%eax
	call *%eax
	movl -36(%ebp),%eax
	pushl %eax
	pushl %esi
	movl MI_Arg+256,%eax
	call *%eax
	addl $24,%esp
	cmpb $0,-416(%ebp)
	jne .L739
	leal -16(%ebp),%eax
	pushl %eax
	movl -36(%ebp),%eax
	pushl %eax
	movl MI_FS+184,%eax
	call *%eax
	fldl -12(%ebp)
	addl $8,%esp
	fcompl -28(%ebp)
	fnstsw %ax
	andb $69,%ah
	decb %ah
	cmpb $64,%ah
	jb .L739
	movb $1,-416(%ebp)
.L739:
	movl -412(%ebp),%esi
	movl (%esi),%eax
	movl 4(%eax),%edx
	leal -36(%ebp),%eax
	pushl %eax
	leal -40(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
	movl %eax,%ebx
	addl $12,%esp
	testl %ebx,%ebx
	jne .L740
	cmpb $0,-416(%ebp)
	je .L744
	pushl $MM_BldQuake+3896
	movl -420(%ebp),%esi
	pushl %esi
	movl MI_Arg+256,%eax
	call *%eax
	movl 12(%ebp),%esi
	pushl %esi
	movl -420(%ebp),%esi
	pushl %esi
	movl MI_Arg+256,%eax
	call *%eax
	movl 8(%ebp),%esi
	movl 204(%esi),%eax
	pushl %eax
	movl 148(%esi),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+3916
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl $1
	pushl %ebx
	movl -420(%ebp),%esi
	pushl %esi
	movl %eax,%ecx
	pushl %ecx
	movl MI_Utils+124,%eax
	call *%eax
	addl $16,%esp
.L744:
	movl MM_BldQuake+1288,%ebx
	movl 8(%ebp),%esi
	movl 52(%ebx),%eax
	movl 448(%esi),%edx
	movl 24(%eax),%ecx
	testl %edx,%edx
	je .L745
	movl -4(%edx),%eax
	sall $11,%eax
	shrl $12,%eax
	cmpl %eax,MM_BldQuake+1292
	jg .L746
	cmpl %eax,4(%ebx)
	jge .L745
.L746:
	pushl $33781
	call _m3_fault
	.align 16
.L745:
	pushl $0
	pushl %edx
	call *%ecx
	movl -400(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $8,%esp
	jmp .L736
	.align 16
.L738:
	cmpl $MI_OSError+44,-388(%ebp)
	jne .L748
	movl -36(%ebp),%eax
	pushl %eax
	call BldQuake__FErr
	jmp .L750
	.align 16
.L748:
	pushl $MM_BldQuake+3940
	call BldQuake__CErr
.L750:
	addl $4,%esp
.L736:
	movl 8(%ebp),%esi
	addl $292,%esi
	movl %esi,-408(%ebp)
	movl $10,-404(%ebp)
	leal -408(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%esi
	pushl %esi
	call BldQuake__Deriveds
	leal -432(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe140:
	.size	 BldQuake__Bundle,.Lfe140-BldQuake__Bundle
	.align 16
	.type	 BldQuake__DoBundle,@function
BldQuake__DoBundle:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L752
	pushl $33968
	call _m3_fault
	.align 16
.L752:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L753
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L754
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L753
.L754:
	pushl $34005
	call _m3_fault
	.align 16
.L753:
	pushl %esi
	pushl %edi
	call BldQuake__Bundle
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe141:
	.size	 BldQuake__DoBundle,.Lfe141-BldQuake__DoBundle
	.align 16
	.type	 BldQuake__Template,@function
BldQuake__Template:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%eax
	pushl $MM_BldQuake+3968
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-16(%ebp)
	movl 8(%ebp),%ecx
	addl $8,%esp
	movl 68(%ecx),%eax
	testl %eax,%eax
	jne .L756
	pushl $34132
	call _m3_fault
	.align 16
.L756:
	movl 8(%ebp),%ecx
	movl %eax,%esi
	movl 36(%ecx),%edx
	leal -1(%edx),%eax
	cmpl %eax,4(%esi)
	ja .L757
	pushl $34130
	call _m3_fault
	.align 16
.L757:
	leal (%edx,%edx,2),%eax
	sall $2,%eax
	addl (%esi),%eax
	movl -12(%eax),%eax
	movl 12(%eax),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	pushl %eax
	movl MI_Pathname+84,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%esi
	movl 204(%ecx),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl -16(%ebp),%ecx
	pushl %ecx
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edi
	movl 8(%ebp),%ecx
	movl %edi,-12(%ebp)
	movl 440(%ecx),%edi
	pushl $0
	movl -16(%ebp),%ecx
	pushl %ecx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-20(%ebp)
	addl $32,%esp
	movl MM_BldQuake+1512,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movb $0,4(%ebx)
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PkgSubdir
	movl %eax,%esi
	pushl %esi
	movl 8(%ebp),%ecx
	movl 332(%ecx),%eax
	pushl %eax
	pushl %ecx
	call BldQuake__Location
	movl %eax,(%ebx)
	movb $1,5(%ebx)
	movl (%edi),%eax
	movl -20(%ebp),%ecx
	movl 8(%eax),%esi
	movl %ecx,-4(%ebp)
	movl %ebx,-8(%ebp)
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%esi
	addl $32,%esp
	movl -16(%ebp),%ecx
	pushl %ecx
	pushl $MM_BldQuake+3988
	movl MI_RTHooks+76,%eax
	call *%eax
	movl $MM_BldQuake+2432,%ebx
	pushl %ebx
	movl %eax,%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%esi
	movl 332(%ecx),%eax
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %ebx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	addl $32,%esp
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PkgSubdir
	movl %eax,%ebx
	pushl %ebx
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edi
	movl 216(%ecx),%eax
	pushl %eax
	pushl %edi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl 8(%ebp),%ecx
	movl 436(%ecx),%eax
	pushl %eax
	movl MI_M3Buf+52,%eax
	call *%eax
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PkgSubdir
	movl %eax,%edx
	movl 8(%ebp),%ecx
	addl $32,%esp
	movl 332(%ecx),%eax
	pushl %eax
	pushl %edx
	movl -16(%ebp),%ecx
	pushl %ecx
	movl -12(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__M3include
	leal -32(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe142:
	.size	 BldQuake__Template,.Lfe142-BldQuake__Template
	.align 16
	.type	 BldQuake__DoTemplate,@function
BldQuake__DoTemplate:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L759
	pushl $34384
	call _m3_fault
	.align 16
.L759:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L760
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L761
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L760
.L761:
	pushl $34421
	call _m3_fault
	.align 16
.L760:
	pushl %esi
	pushl %edi
	call BldQuake__Template
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe143:
	.size	 BldQuake__DoTemplate,.Lfe143-BldQuake__DoTemplate
	.align 16
	.type	 BldQuake__manPage,@function
BldQuake__manPage:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	pushl $MM_BldQuake+2208
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %ebx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PathOf
	movl %eax,-24(%ebp)
	pushl $0
	pushl $MM_BldQuake+4020
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edx
	movl 8(%ebp),%ecx
	addl $32,%esp
	movl (%ecx),%eax
	leal -12(%ebp),%edi
	movl 12(%eax),%ebx
	pushl %edi
	pushl %edx
	pushl %ecx
	call *%ebx
	addl $12,%esp
	testl %eax,%eax
	je .L763
	pushl $MM_BldQuake+2208
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	addl $24,%esp
.L763:
	movl 8(%ebp),%ecx
	cmpb $0,489(%ecx)
	je .L764
	movl -24(%ebp),%ecx
	pushl %ecx
	pushl %esi
	call BldQuake__Stale
	addl $8,%esp
	testl %eax,%eax
	je .L764
	pushl %esi
	movl -24(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__CopyIfNew
	addl $12,%esp
.L764:
	movl 8(%ebp),%ecx
	addl $288,%ecx
	movl %ecx,-20(%ebp)
	movl $1,-16(%ebp)
	leal -20(%ebp),%eax
	pushl %eax
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Deriveds
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe144:
	.size	 BldQuake__manPage,.Lfe144-BldQuake__manPage
	.align 16
	.type	 BldQuake__DomanPage,@function
BldQuake__DomanPage:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L767
	pushl $34864
	call _m3_fault
	.align 16
.L767:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L768
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L769
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L768
.L769:
	pushl $34917
	call _m3_fault
	.align 16
.L768:
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__manPage
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe145:
	.size	 BldQuake__DomanPage,.Lfe145-BldQuake__DomanPage
	.align 16
	.type	 BldQuake__ManPage,@function
BldQuake__ManPage:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%esi
	movl 16(%ebp),%ebx
	pushl %ebx
	pushl %esi
	pushl %edi
	call BldQuake__manPage
	pushl $1
	pushl %ebx
	pushl %esi
	pushl %edi
	call BldQuake__ManExport
	leal -12(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe146:
	.size	 BldQuake__ManPage,.Lfe146-BldQuake__ManPage
	.align 16
	.type	 BldQuake__DoManPage,@function
BldQuake__DoManPage:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L772
	pushl $35104
	call _m3_fault
	.align 16
.L772:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L773
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L774
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L773
.L774:
	pushl $35157
	call _m3_fault
	.align 16
.L773:
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__ManPage
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe147:
	.size	 BldQuake__DoManPage,.Lfe147-BldQuake__DoManPage
	.align 16
	.type	 BldQuake__DoGnuemacs,@function
BldQuake__DoGnuemacs:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L776
	pushl $35280
	call _m3_fault
	.align 16
.L776:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	pushl $MM_BldQuake+4044
	movl %eax,%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	addl $24,%esp
	testl %edi,%edi
	je .L777
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L778
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L777
.L778:
	pushl $35317
	call _m3_fault
	.align 16
.L777:
	pushl $0
	pushl %ecx
	pushl %edi
	call BldQuake__EmacsExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe148:
	.size	 BldQuake__DoGnuemacs,.Lfe148-BldQuake__DoGnuemacs
	.align 16
	.type	 BldQuake__DoCompiledGnuemacs,@function
BldQuake__DoCompiledGnuemacs:
	pushl %ebp
	movl %esp,%ebp
	subl $36,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl $0,-32(%ebp)
	cmpl $1,12(%ebp)
	je .L780
	pushl $35488
	call _m3_fault
	.align 16
.L780:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %ecx
	call *%esi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-36(%ebp)
	movl -32(%ebp),%ecx
	pushl %ecx
	pushl $MM_BldQuake+4060
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl (%ecx),%eax
	movl 12(%eax),%esi
	pushl %ebx
	pushl %edx
	pushl %ecx
	call *%esi
	addl $36,%esp
	testl %eax,%eax
	je .L781
	pushl $MM_BldQuake+4044
	movl -36(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	addl $8,%esp
	cmpl $0,8(%ebp)
	je .L782
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L783
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L782
.L783:
	pushl $35573
	call _m3_fault
	.align 16
.L782:
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PathOf
	movl %eax,%edi
	movl %edi,-32(%ebp)
	pushl $MM_BldQuake+4044
	movl -36(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-28(%ebp)
	pushl $MM_BldQuake+4088
	movl -36(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-24(%ebp)
	addl $24,%esp
	cmpl $0,8(%ebp)
	je .L784
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L785
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L784
.L785:
	pushl $35637
	call _m3_fault
	.align 16
.L784:
	movl 8(%ebp),%ebx
	cmpb $0,489(%ebx)
	je .L786
	movl -28(%ebp),%ecx
	pushl %ecx
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__CopyIfNew
	movl -28(%ebp),%ecx
	pushl %ecx
	movl -24(%ebp),%ecx
	pushl %ecx
	call BldQuake__Stale
	addl $20,%esp
	testl %eax,%eax
	je .L786
	movl -28(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_BldHooks+52,%eax
	call *%eax
	addl $8,%esp
.L786:
	movl %ebx,%edi
	leal 288(%edi),%esi
	movl %esi,-20(%ebp)
	movl $1,-16(%ebp)
	leal -20(%ebp),%ebx
	pushl %ebx
	movl -28(%ebp),%ecx
	pushl %ecx
	pushl %edi
	call BldQuake__Deriveds
	movl %esi,-20(%ebp)
	movl $1,-16(%ebp)
	pushl %ebx
	movl -24(%ebp),%ecx
	pushl %ecx
	pushl %edi
	call BldQuake__Deriveds
	addl $24,%esp
	cmpl $0,8(%ebp)
	je .L788
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L789
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L788
.L789:
	pushl $35813
	call _m3_fault
	.align 16
.L788:
	pushl $1
	movl -28(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__EmacsExport
	addl $12,%esp
	cmpl $0,8(%ebp)
	je .L790
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L791
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L790
.L791:
	pushl $35829
	call _m3_fault
	.align 16
.L790:
	pushl $1
	movl -24(%ebp),%ecx
	pushl %ecx
	jmp .L795
	.align 16
.L781:
	pushl $MM_BldQuake+4044
	movl -36(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edi
	addl $8,%esp
	cmpl $0,8(%ebp)
	je .L793
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L794
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L793
.L794:
	pushl $35861
	call _m3_fault
	.align 16
.L793:
	pushl $0
	pushl %edi
.L795:
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__EmacsExport
	leal -48(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe149:
	.size	 BldQuake__DoCompiledGnuemacs,.Lfe149-BldQuake__DoCompiledGnuemacs
	.align 16
	.type	 BldQuake__Noweb,@function
BldQuake__Noweb:
	pushl %ebp
	movl %esp,%ebp
	subl $196,%esp
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 16(%ebp),%esi
	movl 20(%ebp),%edx
	pushl %edx
	pushl $MM_BldQuake+2208
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-196(%ebp)
	pushl $MM_BldQuake+4108
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call BldQuake__PathOf
	movl %eax,%ebx
	movl 8(%ebp),%edx
	addl $24,%esp
	cmpb $0,489(%edx)
	je .L797
	pushl %eax
	movl -196(%ebp),%edx
	pushl %edx
	call BldQuake__Stale
	addl $8,%esp
	testl %eax,%eax
	je .L798
	movl MI_Arg+252,%eax
	call *%eax
	movl %eax,-192(%ebp)
	pushl $MM_BldQuake+4124
	movl -192(%ebp),%edx
	pushl %edx
	movl MI_Arg+256,%eax
	call *%eax
	pushl %esi
	pushl $MM_BldQuake+4160
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl -192(%ebp),%edx
	pushl %edx
	movl MI_Arg+256,%eax
	call *%eax
	pushl %ebx
	movl -192(%ebp),%edx
	pushl %edx
	movl MI_Arg+256,%eax
	call *%eax
	addl $32,%esp
.L799:
	movl $MM_BldQuake+1548,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L800
	pushl $1
	movl -196(%ebp),%edx
	pushl %edx
	movl -192(%ebp),%edx
	pushl %edx
	pushl $MM_BldQuake+4176
	movl MI_Utils+124,%eax
	call *%eax
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $16,%esp
	jmp .L798
	.align 16
.L800:
	pushl $MM_BldQuake+4200
	call BldQuake__CErr
	addl $4,%esp
.L798:
	movl 20(%ebp),%edx
	pushl %edx
	movl -196(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call BldQuake__CopyIfNew
	addl $12,%esp
.L797:
	movl 8(%ebp),%esi
	addl $288,%esi
	movl %esi,-188(%ebp)
	movl $1,-184(%ebp)
	leal -188(%ebp),%ebx
	pushl %ebx
	movl -196(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call BldQuake__Deriveds
	movl %esi,-188(%ebp)
	movl $1,-184(%ebp)
	pushl %ebx
	movl 20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call BldQuake__Deriveds
	leal -204(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe150:
	.size	 BldQuake__Noweb,.Lfe150-BldQuake__Noweb
	.align 16
	.type	 BldQuake__DoNoweb,@function
BldQuake__DoNoweb:
	pushl %ebp
	movl %esp,%ebp
	subl $40,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L804
	pushl $36384
	call _m3_fault
	.align 16
.L804:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-40(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -40(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	cmpl $0,8(%ebp)
	je .L805
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L806
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L805
.L806:
	pushl $36453
	call _m3_fault
	.align 16
.L805:
	pushl %esi
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Noweb
	leal -52(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe151:
	.size	 BldQuake__DoNoweb,.Lfe151-BldQuake__DoNoweb
	.align 16
	.type	 BldQuake__DonowebInterface,@function
BldQuake__DonowebInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L808
	pushl $36560
	call _m3_fault
	.align 16
.L808:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-40(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%esi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	movl -40(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl $MM_BldQuake+1900
	movl %eax,%ebx
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-44(%ebp)
	addl $24,%esp
	cmpl $0,8(%ebp)
	je .L809
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L810
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L809
.L810:
	pushl $36645
	call _m3_fault
	.align 16
.L809:
	movl -44(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Noweb
	addl $16,%esp
	cmpl $0,8(%ebp)
	je .L811
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L812
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L811
.L812:
	pushl $36661
	call _m3_fault
	.align 16
.L811:
	pushl $1
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__DerivedInterface
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe152:
	.size	 BldQuake__DonowebInterface,.Lfe152-BldQuake__DonowebInterface
	.align 16
	.type	 BldQuake__DoNowebInterface,@function
BldQuake__DoNowebInterface:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L814
	pushl $36768
	call _m3_fault
	.align 16
.L814:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-40(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%esi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	movl -40(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl $MM_BldQuake+1900
	movl %eax,%ebx
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-44(%ebp)
	addl $24,%esp
	cmpl $0,8(%ebp)
	je .L815
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L816
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L815
.L816:
	pushl $36853
	call _m3_fault
	.align 16
.L815:
	movl -44(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Noweb
	addl $16,%esp
	cmpl $0,8(%ebp)
	je .L817
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L818
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L817
.L818:
	pushl $36869
	call _m3_fault
	.align 16
.L817:
	pushl $0
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__DerivedInterface
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe153:
	.size	 BldQuake__DoNowebInterface,.Lfe153-BldQuake__DoNowebInterface
	.align 16
	.type	 BldQuake__DoNowebImplementation,@function
BldQuake__DoNowebImplementation:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L820
	pushl $36976
	call _m3_fault
	.align 16
.L820:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-40(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $32,%esp
	movl %eax,%esi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	movl -40(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl $MM_BldQuake+1916
	movl %eax,%ebx
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-44(%ebp)
	addl $24,%esp
	cmpl $0,8(%ebp)
	je .L821
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L822
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L821
.L822:
	pushl $37061
	call _m3_fault
	.align 16
.L821:
	movl -44(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__Noweb
	addl $16,%esp
	cmpl $0,8(%ebp)
	je .L823
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L824
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L823
.L824:
	pushl $37077
	call _m3_fault
	.align 16
.L823:
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__DerivedImplementation
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe154:
	.size	 BldQuake__DoNowebImplementation,.Lfe154-BldQuake__DoNowebImplementation
	.align 16
	.type	 BldQuake__DoZume,@function
BldQuake__DoZume:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
.L826:
	movl $MM_BldQuake+1304,-16(%ebp)
	movl $4,-20(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-24(%ebp)
	leal -24(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L827
	pushl $37200
	call _m3_fault
	.align 16
.L827:
	movl (%esi),%eax
	movl 28(%eax),%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl (%esi),%eax
	movl 44(%eax),%ebx
	pushl %esi
	call *%ebx
	movl %eax,%ebx
	addl $12,%esp
	testl %esi,%esi
	je .L828
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L829
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L828
.L829:
	pushl $37237
	call _m3_fault
	.align 16
.L828:
	movl 200(%esi),%eax
	pushl %eax
	pushl $MM_BldQuake+4236
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %ebx
	movl MI_Wr+68,%eax
	call *%eax
.L830:
	movl -24(%ebp),%eax
	leal -32(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe155:
	.size	 BldQuake__DoZume,.Lfe155-BldQuake__DoZume
	.align 16
	.type	 BldQuake__DoRegisterCleanUp,@function
BldQuake__DoRegisterCleanUp:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L832
	pushl $37376
	call _m3_fault
	.align 16
.L832:
	movl (%esi),%eax
	movl 28(%eax),%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	addl $8,%esp
	testl %esi,%esi
	je .L833
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L834
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L833
.L834:
	pushl $37413
	call _m3_fault
	.align 16
.L833:
	movl 452(%esi),%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ecx
	movl (%ebx),%eax
	movl 12(%eax),%edx
	movl %ecx,-16(%ebp)
	leal -16(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe156:
	.size	 BldQuake__DoRegisterCleanUp,.Lfe156-BldQuake__DoRegisterCleanUp
	.align 16
	.type	 BldQuake__DoRunCleanUps,@function
BldQuake__DoRunCleanUps:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	cmpl $0,12(%ebp)
	je .L836
	pushl $37488
	call _m3_fault
	.align 16
.L836:
	testl %ecx,%ecx
	je .L837
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L838
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L837
.L838:
	pushl $37509
	call _m3_fault
	.align 16
.L837:
	movl %ecx,%esi
	movl 452(%esi),%edx
	movl (%edx),%eax
	movl 32(%eax),%ecx
	pushl %edx
	call *%ecx
	xorl %ebx,%ebx
	leal -1(%eax),%edi
	addl $4,%esp
	jmp .L839
	.align 16
.L840:
	movl 452(%esi),%ecx
	movl (%ecx),%eax
	movl 44(%eax),%edx
	pushl %ebx
	pushl %ecx
	call *%edx
	movl %eax,%edx
	movl $0,-4(%ebp)
	pushl $0
	leal -4(%ebp),%eax
	pushl %eax
	pushl %edx
	pushl %esi
	movl MI_BldHooks+200,%eax
	call *%eax
	incl %ebx
	addl $24,%esp
.L839:
	cmpl %edi,%ebx
	jle .L840
	leal -16(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe157:
	.size	 BldQuake__DoRunCleanUps,.Lfe157-BldQuake__DoRunCleanUps
	.align 16
	.type	 BldQuake__DoFindUnit__GenUnit.3,@function
BldQuake__DoFindUnit__GenUnit.3:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl %ecx,-4(%ebp)
	movl 8(%ebp),%edx
	movl -4(%ebp),%ebx
.L845:
	movl $5,-12(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-16(%ebp)
	leal -16(%ebp),%edi
	movl %edi,RTThread__handlerStack
	movl $0,-8(%ebp)
	movl (%edx),%eax
	movl 4(%eax),%ecx
	leal -8(%ebp),%eax
	pushl %eax
	leal -4(%ebx),%eax
	pushl %eax
	pushl %edx
	call *%ecx
	addl $12,%esp
	testl %eax,%eax
	je .L846
	cmpb $0,-29(%ebx)
	jne .L847
	movl -8(%ebp),%eax
	testl %eax,%eax
	jne .L848
	pushl $37732
	call _m3_fault
	.align 16
.L848:
	cmpb $0,4(%eax)
	jne .L846
.L847:
	movl -36(%ebx),%eax
	movl (%eax),%edx
	movl (%edx),%eax
	movl 44(%eax),%ecx
	pushl %edx
	call *%ecx
	movl %eax,%esi
	movl -36(%ebx),%eax
	addl $4,%esp
	movl (%eax),%eax
	testl %eax,%eax
	je .L850
	movl -4(%eax),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L851
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L850
.L851:
	pushl $37749
	call _m3_fault
	.align 16
.L850:
	movl -8(%ebp),%edx
	testl %edx,%edx
	jne .L852
	pushl $37748
	call _m3_fault
	.align 16
.L852:
	movl -36(%ebx),%eax
	movl (%eax),%eax
	movl 204(%eax),%eax
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl -40(%ebx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	movl -36(%ebx),%eax
	addl $16,%esp
	movl (%eax),%eax
	testl %eax,%eax
	je .L853
	movl -4(%eax),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L854
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L853
.L854:
	pushl $37749
	call _m3_fault
	.align 16
.L853:
	movl -36(%ebx),%eax
	movl (%eax),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %esi
	movl MI_Wr+68,%eax
	call *%eax
	movl -16(%ebp),%eax
	movl %eax,RTThread__handlerStack
	movl $1,%eax
	jmp .L844
	.align 16
.L846:
	movl -16(%ebp),%eax
	movl %eax,RTThread__handlerStack
	xorl %eax,%eax
.L855:
.L844:
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe158:
	.size	 BldQuake__DoFindUnit__GenUnit.3,.Lfe158-BldQuake__DoFindUnit__GenUnit.3
	.align 16
	.type	 BldQuake__DoFindUnit,@function
BldQuake__DoFindUnit:
	pushl %ebp
	movl %esp,%ebp
	subl $56,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	leal 8(%ebp),%ebx
	movl %ebx,-36(%ebp)
.L843:
	movl $MM_BldQuake+1304,-20(%ebp)
	movl $4,-24(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-28(%ebp)
	leal -28(%ebp),%ebx
	movl %ebx,RTThread__handlerStack
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-40(%ebp)
	movb $0,-29(%ebp)
	cmpl $2,12(%ebp)
	je .L856
	pushl $37952
	call _m3_fault
	.align 16
.L856:
	movl 8(%ebp),%edx
	movl (%edx),%eax
	leal -16(%ebp),%ebx
	movl 28(%eax),%edi
	movl %ebx,-56(%ebp)
	pushl %ebx
	pushl %edx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,%ebx
	movl 8(%ebp),%edx
	movb %bl,-29(%ebp)
	movl (%edx),%eax
	movl -56(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %edx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	addl $32,%esp
	movl %edi,-40(%ebp)
	pushl %ebx
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_QVal+60,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,-4(%ebp)
	addl $8,%esp
	movl 8(%ebp),%eax
	testl %eax,%eax
	je .L857
	movl -4(%eax),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L858
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L857
.L858:
	pushl $38021
	call _m3_fault
	.align 16
.L857:
	movl 8(%ebp),%ebx
	movl %ebx,-48(%ebp)
	movl %ebp,%ecx
	movl 396(%ebx),%eax
	pushl %eax
	call BldQuake__DoFindUnit__GenUnit.3
	movl %eax,%esi
	addl $4,%esp
	testl %esi,%esi
	jne .L874
	movl -48(%ebp),%ebx
	movl %ebp,%ecx
	movl 404(%ebx),%eax
	pushl %eax
	call BldQuake__DoFindUnit__GenUnit.3
	movl %eax,%esi
	addl $4,%esp
	testl %esi,%esi
	jne .L874
	movl -48(%ebp),%ebx
	movl %ebp,%ecx
	movl 408(%ebx),%eax
	pushl %eax
	call BldQuake__DoFindUnit__GenUnit.3
	movl %eax,%esi
	addl $4,%esp
	testl %esi,%esi
	jne .L874
	movl -48(%ebp),%ebx
	movl %ebp,%ecx
	movl 400(%ebx),%eax
	pushl %eax
	call BldQuake__DoFindUnit__GenUnit.3
	movl %eax,%esi
	addl $4,%esp
	testl %esi,%esi
	jne .L874
	movl -48(%ebp),%ebx
	movl %ebp,%ecx
	movl 412(%ebx),%eax
	pushl %eax
	call BldQuake__DoFindUnit__GenUnit.3
	movl %eax,%esi
	addl $4,%esp
	testl %esi,%esi
	jne .L874
	movl -48(%ebp),%ebx
	movl %ebp,%ecx
	movl 420(%ebx),%eax
	pushl %eax
	call BldQuake__DoFindUnit__GenUnit.3
	movl %eax,%esi
	addl $4,%esp
	testl %esi,%esi
	jne .L874
	movl -48(%ebp),%ebx
	movl %ebp,%ecx
	movl 432(%ebx),%eax
	pushl %eax
	call BldQuake__DoFindUnit__GenUnit.3
	movl %eax,%esi
	addl $4,%esp
	testl %esi,%esi
	jne .L874
	movl -48(%ebp),%ebx
	pushl %ebx
	movl MI_BldHooks+172,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-44(%ebp)
	addl $4,%esp
	testl %edi,%edi
	je .L866
	movl %esi,-56(%ebp)
	movl 4(%edi),%edi
	decl %edi
	movl %edi,-52(%ebp)
	jmp .L868
	.align 16
.L869:
	cmpl $0,-44(%ebp)
	jne .L870
	pushl $38212
	call _m3_fault
	.align 16
.L870:
	movl -44(%ebp),%edi
	movl -56(%ebp),%ebx
	cmpl %ebx,4(%edi)
	ja .L871
	pushl $38210
	call _m3_fault
	.align 16
.L871:
	movl (%edi),%eax
	movl -56(%ebp),%ebx
	movl %ebp,%ecx
	movl (%eax,%ebx,4),%eax
	pushl %eax
	call BldQuake__DoFindUnit__GenUnit.3
	movl %eax,%esi
	addl $4,%esp
	testl %esi,%esi
	jne .L874
	incl -56(%ebp)
.L868:
	movl -52(%ebp),%ebx
	cmpl %ebx,-56(%ebp)
	jle .L869
.L866:
	movl -48(%ebp),%ebx
	movl (%ebx),%eax
	movl 44(%eax),%edi
	pushl %ebx
	call *%edi
	movl %eax,%esi
	movl -40(%ebp),%eax
	pushl %eax
	pushl $MM_BldQuake+1352
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+4272
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl 200(%ebx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl %esi
	movl MI_Wr+68,%eax
	call *%eax
.L874:
	movl -28(%ebp),%eax
	movl %eax,RTThread__handlerStack
	leal -68(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe159:
	.size	 BldQuake__DoFindUnit,.Lfe159-BldQuake__DoFindUnit
	.align 16
	.type	 BldQuake__DoEnumUnits__GenUnits.4,@function
BldQuake__DoEnumUnits__GenUnits.4:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl %ecx,-4(%ebp)
	movl 8(%ebp),%edx
	movl -4(%ebp),%esi
.L877:
	movl $5,-16(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-20(%ebp)
	leal -20(%ebp),%ebx
	movl %ebx,RTThread__handlerStack
	movl $0,-8(%ebp)
	movl (%edx),%eax
	movl 20(%eax),%edi
	pushl %edx
	call *%edi
	movl %eax,-24(%ebp)
	addl $4,%esp
	jmp .L878
	.align 16
.L879:
	cmpb $0,-13(%esi)
	jne .L880
	movl -8(%ebp),%eax
	testl %eax,%eax
	jne .L881
	pushl $38420
	call _m3_fault
	.align 16
.L881:
	cmpb $0,4(%eax)
	jne .L878
.L880:
	movl -20(%esi),%eax
	movl (%eax),%edx
	movl (%edx),%eax
	movl 44(%eax),%eax
	pushl %edx
	call *%eax
	movl %eax,%edi
	movl -20(%esi),%eax
	addl $4,%esp
	movl (%eax),%eax
	testl %eax,%eax
	je .L883
	movl -4(%eax),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L884
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L883
.L884:
	pushl $38437
	call _m3_fault
	.align 16
.L883:
	movl -8(%ebp),%edx
	testl %edx,%edx
	jne .L885
	pushl $38436
	call _m3_fault
	.align 16
.L885:
	movl -20(%esi),%eax
	movl (%eax),%eax
	movl 204(%eax),%eax
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl -12(%ebp),%eax
	pushl %eax
	movl MI_M3ID+52,%eax
	call *%eax
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ecx
	movl -20(%esi),%eax
	addl $20,%esp
	movl (%eax),%eax
	testl %eax,%eax
	je .L886
	movl -4(%eax),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L887
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L886
.L887:
	pushl $38437
	call _m3_fault
	.align 16
.L886:
	movl -20(%esi),%eax
	movl (%eax),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $16,%esp
.L878:
	movl -24(%ebp),%ebx
	movl (%ebx),%eax
	movl 4(%eax),%edx
	leal -8(%ebp),%eax
	pushl %eax
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $12,%esp
	testl %eax,%eax
	jne .L879
.L889:
	movl -20(%ebp),%eax
	leal -36(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe160:
	.size	 BldQuake__DoEnumUnits__GenUnits.4,.Lfe160-BldQuake__DoEnumUnits__GenUnits.4
	.align 16
	.type	 BldQuake__DoEnumUnits,@function
BldQuake__DoEnumUnits:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	leal 8(%ebp),%edi
	pushl %ebx
	movl %edi,-20(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movb $0,-13(%ebp)
	cmpl $1,12(%ebp)
	je .L890
	pushl $38576
	call _m3_fault
	.align 16
.L890:
	movl 8(%ebp),%edx
	movl (%edx),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%eax
	pushl %ebx
	pushl %edx
	call *%eax
	pushl %ebx
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_QVal+48,%eax
	call *%eax
	movb %al,-13(%ebp)
	addl $16,%esp
	movl 8(%ebp),%eax
	testl %eax,%eax
	je .L891
	movl -4(%eax),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L892
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L891
.L892:
	pushl $38613
	call _m3_fault
	.align 16
.L891:
	movl 8(%ebp),%ebx
	movl %ebp,%ecx
	movl 396(%ebx),%eax
	pushl %eax
	call BldQuake__DoEnumUnits__GenUnits.4
	movl 404(%ebx),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__DoEnumUnits__GenUnits.4
	movl 408(%ebx),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__DoEnumUnits__GenUnits.4
	movl 400(%ebx),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__DoEnumUnits__GenUnits.4
	movl 420(%ebx),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__DoEnumUnits__GenUnits.4
	movl 412(%ebx),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__DoEnumUnits__GenUnits.4
	movl 432(%ebx),%eax
	pushl %eax
	movl %ebp,%ecx
	call BldQuake__DoEnumUnits__GenUnits.4
	pushl %ebx
	movl MI_BldHooks+172,%eax
	call *%eax
	movl %eax,%esi
	addl $32,%esp
	testl %eax,%eax
	je .L875
	xorl %ebx,%ebx
	movl 4(%eax),%eax
	decl %eax
	movl %eax,-24(%ebp)
	jmp .L895
	.align 16
.L896:
	testl %esi,%esi
	jne .L897
	pushl $38804
	call _m3_fault
	.align 16
.L897:
	movl %esi,%eax
	cmpl %ebx,4(%eax)
	ja .L898
	pushl $38802
	call _m3_fault
	.align 16
.L898:
	movl (%eax),%eax
	movl %ebp,%ecx
	movl (%eax,%ebx,4),%eax
	pushl %eax
	call BldQuake__DoEnumUnits__GenUnits.4
	incl %ebx
	addl $4,%esp
.L895:
	cmpl %ebx,-24(%ebp)
	jge .L896
.L875:
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe161:
	.size	 BldQuake__DoEnumUnits,.Lfe161-BldQuake__DoEnumUnits
	.align 16
	.type	 BldQuake__NoteOverrides,@function
BldQuake__NoteOverrides:
	pushl %ebp
	movl %esp,%ebp
	subl $180,%esp
	pushl %esi
	pushl %ebx
	pushl $MM_BldQuake+3032
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_BldHooks+44,%eax
	call *%eax
	addl $8,%esp
.L901:
	movl $MM_BldQuake+2036,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L902
	pushl $1
	movl $MM_BldQuake+3532,%ebx
	pushl %ebx
	movl MI_Utils+44,%eax
	call *%eax
	movl 8(%ebp),%edx
	movl %eax,%esi
	movl 200(%edx),%eax
	pushl %eax
	pushl %esi
	movl MI_Wr+68,%eax
	call *%eax
	pushl %ebx
	pushl %esi
	movl MI_Utils+52,%eax
	call *%eax
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L900
	.align 16
.L902:
	pushl $MM_BldQuake+3532
	call BldQuake__FErr
.L900:
	leal -188(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe162:
	.size	 BldQuake__NoteOverrides,.Lfe162-BldQuake__NoteOverrides
	.align 16
	.type	 BldQuake__DoInstallFile,@function
BldQuake__DoInstallFile:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-48(%ebp)
	movl $0,-44(%ebp)
	movl $0,-40(%ebp)
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $4,12(%ebp)
	je .L906
	pushl $39184
	call _m3_fault
	.align 16
.L906:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-52(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ecx
	movl 28(%eax),%edi
	movl %ecx,-56(%ebp)
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -48(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	movl -56(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl -52(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl %eax,-60(%ebp)
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L907
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L908
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L907
.L908:
	pushl $39269
	call _m3_fault
	.align 16
.L907:
	movl -60(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__InstallFile
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe163:
	.size	 BldQuake__DoInstallFile,.Lfe163-BldQuake__DoInstallFile
	.align 16
	.type	 BldQuake__InstallFile,@function
BldQuake__InstallFile:
	pushl %ebp
	movl %esp,%ebp
	subl $220,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movb 24(%ebp),%bl
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-212(%ebp)
	movl 12(%ebp),%edi
	pushl %edi
	movl 8(%ebp),%edi
	pushl %edi
	call BldQuake__PathOf
	movl %eax,%edx
	movl %edx,-220(%ebp)
	movl 364(%edi),%edx
	movl (%edx),%eax
	movl 20(%eax),%ecx
	pushl %edx
	call *%ecx
	movl %eax,%esi
	movl %esi,-216(%ebp)
	addl $12,%esp
	testb %bl,%bl
	jne .L910
	movl -212(%ebp),%edi
	pushl %edi
	pushl $MM_BldQuake+2984
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%edi
	movl %eax,%edx
	movl (%edi),%eax
	leal -20(%ebp),%ebx
	movl 12(%eax),%esi
	pushl %ebx
	pushl %edx
	pushl %edi
	call *%esi
	addl $20,%esp
	testl %eax,%eax
	je .L911
	pushl %ebx
	pushl %edi
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L911
	cmpb $0,489(%edi)
	je .L912
	movl -220(%ebp),%edi
	pushl %edi
	movl 12(%ebp),%edi
	pushl %edi
	call BldQuake__Stale
	addl $8,%esp
	testl %eax,%eax
	je .L912
	pushl %edi
	movl -220(%ebp),%edi
	pushl %edi
	movl 8(%ebp),%edi
	pushl %edi
	movl MI_BldHooks+48,%eax
	call *%eax
	addl $12,%esp
.L912:
	movl 8(%ebp),%edi
	addl $288,%edi
	movl %edi,-28(%ebp)
	movl $1,-24(%ebp)
	leal -28(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%edi
	pushl %edi
	movl 8(%ebp),%edi
	pushl %edi
	call BldQuake__Deriveds
	movl 12(%ebp),%edi
	movl %edi,-220(%ebp)
	addl $12,%esp
.L911:
	movl -220(%ebp),%edi
	movl %edi,12(%ebp)
.L910:
	movl 8(%ebp),%edi
	cmpb $0,489(%edi)
	je .L909
	movl -216(%ebp),%edi
	movl (%edi),%eax
	movl 4(%eax),%esi
	leal -4(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%esi
	addl $12,%esp
	testl %eax,%eax
	je .L915
	movl 8(%ebp),%edi
	pushl %edi
	call BldQuake__NoteOverrides
	jmp .L909
	.align 16
.L915:
	movl $MM_BldQuake+3008,-200(%ebp)
	movl $0,-204(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-208(%ebp)
	leal -208(%ebp),%edi
	movl %edi,RTThread__handlerStack
	leal -188(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L916
	pushl $MM_BldQuake+3032
	movl MI_FileWr+152,%eax
	call *%eax
	movl %eax,-212(%ebp)
	pushl %eax
	movl 16(%ebp),%edi
	pushl %edi
	movl 8(%ebp),%edi
	pushl %edi
	call BldQuake__U_InstallDir
	pushl %ebx
	pushl $MM_BldQuake+2984
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edx
	movl (%edi),%eax
	leal -20(%ebp),%ebx
	movl 12(%eax),%esi
	pushl %ebx
	pushl %edx
	pushl %edi
	call *%esi
	addl $36,%esp
	testl %eax,%eax
	je .L917
	pushl %ebx
	pushl %edi
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L917
	movl 212(%edi),%eax
	pushl %eax
	movl 352(%edi),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 12(%ebp),%edi
	pushl %edi
	movl %eax,%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%edi
	movl %eax,%ecx
	movl 208(%edi),%eax
	pushl %eax
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl -212(%ebp),%edi
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $32,%esp
	jmp .L918
	.align 16
.L917:
	movl 12(%ebp),%edi
	pushl %edi
	call BldQuake__Escape
	movl %eax,%edx
	pushl %edx
	pushl $MM_BldQuake+3052
	movl MI_RTHooks+76,%eax
	call *%eax
	movl $MM_BldQuake+2432,%ebx
	pushl %ebx
	movl %eax,%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 16(%ebp),%edi
	pushl %edi
	call BldQuake__Escape
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl %ebx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 20(%ebp),%edi
	pushl %edi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2452
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%edi
	movl %eax,%edx
	movl 200(%edi),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl %eax
	movl -212(%ebp),%edi
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $8,%esp
.L918:
	pushl $MM_BldQuake+3032
	movl -212(%ebp),%edi
	pushl %edi
	movl MI_Utils+52,%eax
	call *%eax
	movl -208(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L909
	.align 16
.L916:
	pushl $MM_BldQuake+3032
	call BldQuake__FErr
.L909:
	leal -232(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe164:
	.size	 BldQuake__InstallFile,.Lfe164-BldQuake__InstallFile
	.align 16
	.type	 BldQuake__InstallMan,@function
BldQuake__InstallMan:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	xorl %esi,%esi
	pushl %ebx
	movl %esi,-12(%ebp)
	movl %esi,-8(%ebp)
	movl %esi,-4(%ebp)
	pushl $MM_BldQuake+2208
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 16(%ebp),%ecx
	pushl %ecx
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-16(%ebp)
	pushl %esi
	pushl $MM_BldQuake+4020
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl (%ecx),%eax
	leal -12(%ebp),%edi
	movl 12(%eax),%eax
	pushl %edi
	pushl %edx
	pushl %ecx
	call *%eax
	addl $36,%esp
	testl %eax,%eax
	je .L922
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edi
	movl 204(%ecx),%eax
	pushl %eax
	movl 164(%ecx),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+4296
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %edi
	movl %eax,%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	addl $32,%esp
	cmpb $0,20(%ebp)
	jne .L923
	movl -16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__PathOf
	movl %eax,-16(%ebp)
	addl $8,%esp
.L923:
	pushl $MM_BldQuake+2208
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %edi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
	movl -16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__CopyIfNew
	movl %ebx,-16(%ebp)
	movb $1,20(%ebp)
	addl $28,%esp
	jmp .L924
	.align 16
.L922:
	pushl %esi
	pushl $MM_BldQuake+2984
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl (%ecx),%eax
	movl 12(%eax),%ebx
	pushl %edi
	pushl %edx
	pushl %ecx
	call *%ebx
	addl $20,%esp
	testl %eax,%eax
	je .L925
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L925
	movl 8(%ebp),%ecx
	movl 212(%ecx),%eax
	pushl %eax
	movl 164(%ecx),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+4296
	movl %eax,%ebx
	pushl %ebx
	jmp .L927
	.align 16
.L925:
	movl 8(%ebp),%ecx
	movl 204(%ecx),%eax
	pushl %eax
	movl 164(%ecx),%eax
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+4296
	pushl %eax
.L927:
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 16(%ebp),%ecx
	pushl %ecx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	addl $24,%esp
.L924:
	xorl %eax,%eax
	movb 20(%ebp),%al
	pushl %eax
	pushl $MM_BldQuake+4312
	pushl %esi
	movl -16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__InstallFile
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe165:
	.size	 BldQuake__InstallMan,.Lfe165-BldQuake__InstallMan
	.align 16
	.type	 BldQuake__InstallSrc,@function
BldQuake__InstallSrc:
	pushl %ebp
	movl %esp,%ebp
	subl $200,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl 8(%ebp),%ecx
	movl $0,-4(%ebp)
	movl 364(%ecx),%esi
	movl (%esi),%eax
	movl 20(%eax),%eax
	pushl %esi
	call *%eax
	movl %eax,%edx
	movl %edx,%ebx
	movl 8(%ebp),%ecx
	addl $4,%esp
	cmpb $0,489(%ecx)
	je .L928
	movl (%edx),%eax
	movl 4(%eax),%edx
	leal -4(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $12,%esp
	testl %eax,%eax
	je .L931
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__NoteOverrides
	jmp .L928
	.align 16
.L931:
	movl $MM_BldQuake+3008,-192(%ebp)
	movl $0,-196(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-200(%ebp)
	leal -200(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -180(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L932
	pushl $MM_BldQuake+3032
	movl MI_FileWr+152,%eax
	call *%eax
	movl %eax,%edi
	pushl %edi
	movl 16(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__U_InstallDir
	pushl %ebx
	pushl $MM_BldQuake+2984
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%esi
	movl (%ecx),%eax
	leal -20(%ebp),%ebx
	movl 12(%eax),%edx
	pushl %ebx
	pushl %esi
	pushl %ecx
	call *%edx
	addl $36,%esp
	testl %eax,%eax
	je .L933
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L933
	movl 8(%ebp),%ecx
	movl 208(%ecx),%eax
	pushl %eax
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $16,%esp
	jmp .L934
	.align 16
.L933:
	movl 12(%ebp),%ecx
	pushl %ecx
	call BldQuake__Escape
	movl %eax,%edx
	pushl %edx
	pushl $MM_BldQuake+3052
	movl MI_RTHooks+76,%eax
	call *%eax
	movl $MM_BldQuake+2432,%ebx
	pushl %ebx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	movl 16(%ebp),%ecx
	pushl %ecx
	call BldQuake__Escape
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl %ebx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 20(%ebp),%ecx
	pushl %ecx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+2452
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl 200(%ecx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl %eax
	pushl %edi
	movl MI_Wr+68,%eax
	call *%eax
	addl $8,%esp
.L934:
	pushl $MM_BldQuake+3032
	pushl %edi
	movl MI_Utils+52,%eax
	call *%eax
	movl -200(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L928
	.align 16
.L932:
	pushl $MM_BldQuake+3032
	call BldQuake__FErr
.L928:
	leal -212(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe166:
	.size	 BldQuake__InstallSrc,.Lfe166-BldQuake__InstallSrc
	.align 16
	.type	 BldQuake__DoNoteInstall,@function
BldQuake__DoNoteInstall:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L938
	pushl $41120
	call _m3_fault
	.align 16
.L938:
	movl (%edi),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%eax
	movl %eax,-28(%ebp)
	pushl %esi
	pushl %edi
	movl -28(%ebp),%ecx
	call *%ecx
	movl (%edi),%eax
	leal -24(%ebp),%ebx
	movl 28(%eax),%eax
	movl %eax,-28(%ebp)
	pushl %ebx
	pushl %edi
	movl -28(%ebp),%ecx
	call *%ecx
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,-28(%ebp)
	pushl %esi
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	movl (%edi),%eax
	addl $32,%esp
	movl 44(%eax),%eax
	pushl %edi
	call *%eax
	movl %eax,%esi
	addl $4,%esp
	testl %edi,%edi
	je .L939
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L940
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L939
.L940:
	pushl $41173
	call _m3_fault
	.align 16
.L939:
	pushl $MM_BldQuake+4332
	pushl %esi
	pushl %ebx
	movl -28(%ebp),%ecx
	pushl %ecx
	pushl %edi
	call BldQuake__NoteInstall
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe167:
	.size	 BldQuake__DoNoteInstall,.Lfe167-BldQuake__DoNoteInstall
	.align 16
	.type	 BldQuake__NoteInstall,@function
BldQuake__NoteInstall:
	pushl %ebp
	movl %esp,%ebp
	subl $192,%esp
	pushl %ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	pushl $0
	pushl $MM_BldQuake+1844
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%ebx
	movl %eax,%ecx
	movl (%ebx),%eax
	movl 12(%eax),%edx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	call *%edx
	addl $20,%esp
	testl %eax,%eax
	jne .L941
.L943:
	movl $MM_BldQuake+4352,-184(%ebp)
	movl $0,-188(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-192(%ebp)
	leal -192(%ebp),%ebx
	movl %ebx,RTThread__handlerStack
	leal -172(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L944
	movl 16(%ebp),%ebx
	pushl %ebx
	movl MM_BldQuake+904,%eax
	pushl %eax
	movl MI_Text+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L945
	movl 8(%ebp),%ebx
	movl 200(%ebx),%eax
	pushl %eax
	movl 16(%ebp),%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	movl 20(%ebp),%ebx
	pushl %ebx
	movl MI_Wr+68,%eax
	call *%eax
	movl 16(%ebp),%ebx
	movl %ebx,MM_BldQuake+904
	addl $16,%esp
.L945:
	movl 12(%ebp),%ebx
	pushl %ebx
	pushl $MM_BldQuake+4368
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%ebx
	movl %eax,%edx
	movl 200(%ebx),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	movl 20(%ebp),%ebx
	pushl %ebx
	movl MI_Wr+68,%eax
	call *%eax
	movl -192(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L941
	.align 16
.L944:
	movl 24(%ebp),%ebx
	pushl %ebx
	call BldQuake__FErr
.L941:
	movl -196(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe168:
	.size	 BldQuake__NoteInstall,.Lfe168-BldQuake__NoteInstall
	.align 16
	.type	 BldQuake__BinExport,@function
BldQuake__BinExport:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	xorl %eax,%eax
	movb 16(%ebp),%al
	pushl %eax
	pushl $MM_BldQuake+3104
	movl 152(%edx),%eax
	pushl %eax
	pushl %ecx
	pushl %edx
	call BldQuake__InstallFile
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe169:
	.size	 BldQuake__BinExport,.Lfe169-BldQuake__BinExport
	.align 16
	.type	 BldQuake__DoBinExport,@function
BldQuake__DoBinExport:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L950
	pushl $41664
	call _m3_fault
	.align 16
.L950:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L951
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L952
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L951
.L952:
	pushl $41701
	call _m3_fault
	.align 16
.L951:
	pushl $0
	pushl %esi
	pushl %edi
	call BldQuake__BinExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe170:
	.size	 BldQuake__DoBinExport,.Lfe170-BldQuake__DoBinExport
	.align 16
	.type	 BldQuake__DoBindExport,@function
BldQuake__DoBindExport:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L954
	pushl $41792
	call _m3_fault
	.align 16
.L954:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L955
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L956
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L955
.L956:
	pushl $41829
	call _m3_fault
	.align 16
.L955:
	pushl $1
	pushl %esi
	pushl %edi
	call BldQuake__BinExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe171:
	.size	 BldQuake__DoBindExport,.Lfe171-BldQuake__DoBindExport
	.align 16
	.type	 BldQuake__LibExport,@function
BldQuake__LibExport:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	xorl %eax,%eax
	movb 16(%ebp),%al
	pushl %eax
	pushl $MM_BldQuake+3104
	movl 160(%edx),%eax
	pushl %eax
	pushl %ecx
	pushl %edx
	call BldQuake__InstallFile
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe172:
	.size	 BldQuake__LibExport,.Lfe172-BldQuake__LibExport
	.align 16
	.type	 BldQuake__DoLibExport,@function
BldQuake__DoLibExport:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L959
	pushl $42000
	call _m3_fault
	.align 16
.L959:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L960
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L961
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L960
.L961:
	pushl $42037
	call _m3_fault
	.align 16
.L960:
	pushl $0
	pushl %esi
	pushl %edi
	call BldQuake__LibExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe173:
	.size	 BldQuake__DoLibExport,.Lfe173-BldQuake__DoLibExport
	.align 16
	.type	 BldQuake__DoLibdExport,@function
BldQuake__DoLibdExport:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L963
	pushl $42128
	call _m3_fault
	.align 16
.L963:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L964
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L965
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L964
.L965:
	pushl $42165
	call _m3_fault
	.align 16
.L964:
	pushl $1
	pushl %esi
	pushl %edi
	call BldQuake__LibExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe174:
	.size	 BldQuake__DoLibdExport,.Lfe174-BldQuake__DoLibdExport
	.align 16
	.type	 BldQuake__EmacsExport,@function
BldQuake__EmacsExport:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	xorl %eax,%eax
	movb 16(%ebp),%al
	pushl %eax
	pushl $MM_BldQuake+4312
	movl 168(%edx),%eax
	pushl %eax
	pushl %ecx
	pushl %edx
	call BldQuake__InstallFile
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe175:
	.size	 BldQuake__EmacsExport,.Lfe175-BldQuake__EmacsExport
	.align 16
	.type	 BldQuake__DoEmacsExport,@function
BldQuake__DoEmacsExport:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L968
	pushl $42336
	call _m3_fault
	.align 16
.L968:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L969
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L970
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L969
.L970:
	pushl $42373
	call _m3_fault
	.align 16
.L969:
	pushl $0
	pushl %esi
	pushl %edi
	call BldQuake__EmacsExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe176:
	.size	 BldQuake__DoEmacsExport,.Lfe176-BldQuake__DoEmacsExport
	.align 16
	.type	 BldQuake__DoEmacsdExport,@function
BldQuake__DoEmacsdExport:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L972
	pushl $42464
	call _m3_fault
	.align 16
.L972:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L973
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L974
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L973
.L974:
	pushl $42501
	call _m3_fault
	.align 16
.L973:
	pushl $1
	pushl %esi
	pushl %edi
	call BldQuake__EmacsExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe177:
	.size	 BldQuake__DoEmacsdExport,.Lfe177-BldQuake__DoEmacsdExport
	.align 16
	.type	 BldQuake__DocExport,@function
BldQuake__DocExport:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	xorl %eax,%eax
	movb 16(%ebp),%al
	pushl %eax
	pushl $MM_BldQuake+4312
	movl 172(%edx),%eax
	pushl %eax
	pushl %ecx
	pushl %edx
	call BldQuake__InstallFile
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe178:
	.size	 BldQuake__DocExport,.Lfe178-BldQuake__DocExport
	.align 16
	.type	 BldQuake__DoDocExport,@function
BldQuake__DoDocExport:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L977
	pushl $42672
	call _m3_fault
	.align 16
.L977:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L978
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L979
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L978
.L979:
	pushl $42709
	call _m3_fault
	.align 16
.L978:
	pushl $0
	pushl %esi
	pushl %edi
	call BldQuake__DocExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe179:
	.size	 BldQuake__DoDocExport,.Lfe179-BldQuake__DoDocExport
	.align 16
	.type	 BldQuake__DoDocdExport,@function
BldQuake__DoDocdExport:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L981
	pushl $42800
	call _m3_fault
	.align 16
.L981:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L982
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L983
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L982
.L983:
	pushl $42837
	call _m3_fault
	.align 16
.L982:
	pushl $1
	pushl %esi
	pushl %edi
	call BldQuake__DocExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe180:
	.size	 BldQuake__DoDocdExport,.Lfe180-BldQuake__DoDocdExport
	.align 16
	.type	 BldQuake__ManExport,@function
BldQuake__ManExport:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
	xorl %eax,%eax
	movb 20(%ebp),%al
	pushl %eax
	pushl %edx
	pushl %ecx
	pushl %ebx
	call BldQuake__InstallMan
	movl -4(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe181:
	.size	 BldQuake__ManExport,.Lfe181-BldQuake__ManExport
	.align 16
	.type	 BldQuake__DoManExport,@function
BldQuake__DoManExport:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L986
	pushl $43008
	call _m3_fault
	.align 16
.L986:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L987
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L988
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L987
.L988:
	pushl $43061
	call _m3_fault
	.align 16
.L987:
	pushl $0
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__ManExport
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe182:
	.size	 BldQuake__DoManExport,.Lfe182-BldQuake__DoManExport
	.align 16
	.type	 BldQuake__DoMandExport,@function
BldQuake__DoMandExport:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L990
	pushl $43152
	call _m3_fault
	.align 16
.L990:
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %ecx
	call *%edi
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,8(%ebp)
	je .L991
	movl 8(%ebp),%ecx
	movl -4(%ecx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L992
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L991
.L992:
	pushl $43205
	call _m3_fault
	.align 16
.L991:
	pushl $1
	pushl %ebx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldQuake__ManExport
	leal -36(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe183:
	.size	 BldQuake__DoMandExport,.Lfe183-BldQuake__DoMandExport
	.align 16
	.type	 BldQuake__HtmlExport,@function
BldQuake__HtmlExport:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%ecx
	pushl $MM_BldQuake+4312
	movl 176(%eax),%edx
	pushl %edx
	pushl %ecx
	pushl %eax
	call BldQuake__InstallSrc
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe184:
	.size	 BldQuake__HtmlExport,.Lfe184-BldQuake__HtmlExport
	.align 16
	.type	 BldQuake__DoHtmlExport,@function
BldQuake__DoHtmlExport:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L995
	pushl $43376
	call _m3_fault
	.align 16
.L995:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	addl $16,%esp
	testl %edi,%edi
	je .L996
	movl -4(%edi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L997
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L996
.L997:
	pushl $43413
	call _m3_fault
	.align 16
.L996:
	pushl %esi
	pushl %edi
	call BldQuake__HtmlExport
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe185:
	.size	 BldQuake__DoHtmlExport,.Lfe185-BldQuake__DoHtmlExport
	.align 16
	.type	 BldQuake__BuildOptionList,@function
BldQuake__BuildOptionList:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %edi
	pushl %esi
	xorl %ecx,%ecx
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_Text+56,%eax
	movl %ecx,%edi
	call *%eax
	movl %eax,-24(%ebp)
	movl %edi,%ebx
	movl %edi,-20(%ebp)
	pushl $MM_BldQuake+1884
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	movl %edi,%esi
	call *%eax
	movl %eax,8(%ebp)
	addl $12,%esp
	jmp .L999
	.align 16
.L1000:
	testl %ebx,%ebx
	jge .L1001
	pushl $43617
	call _m3_fault
	.align 16
.L1001:
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_Text+52,%eax
	call *%eax
	addl $8,%esp
	cmpl $32,%eax
	jne .L1002
	cmpl %esi,%ebx
	je .L1003
	testl %esi,%esi
	jge .L1004
	pushl $43649
	call _m3_fault
	.align 16
.L1004:
	movl %ebx,%eax
	subl %esi,%eax
	jns .L1005
	pushl $43649
	call _m3_fault
	.align 16
.L1005:
	pushl %eax
	pushl %esi
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_Text+64,%eax
	call *%eax
	movl %eax,-4(%ebp)
	pushl %edi
	leal -4(%ebp),%eax
	pushl %eax
	movl MI_TextList+148,%eax
	call *%eax
	movl %eax,%edi
	incl -20(%ebp)
	addl $20,%esp
.L1003:
	leal 1(%ebx),%esi
.L1002:
	incl %ebx
.L999:
	cmpl %ebx,-24(%ebp)
	jge .L1000
	leal -16(%ebp),%eax
	leal -8(%ebp),%edx
	movl %edx,-16(%ebp)
	movl $1,-12(%ebp)
	movl -20(%ebp),%edx
	movl %edx,-8(%ebp)
	pushl %eax
	movl MM_BldQuake+1812,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%ecx
	movl -20(%ebp),%ebx
	decl %ebx
	addl $8,%esp
	jmp .L1007
	.align 16
.L1008:
	testl %ecx,%ecx
	jne .L1009
	pushl $43812
	call _m3_fault
	.align 16
.L1009:
	cmpl %ebx,4(%ecx)
	ja .L1010
	pushl $43810
	call _m3_fault
	.align 16
.L1010:
	movl (%ecx),%edx
	movl 4(%edi),%eax
	movl %eax,(%edx,%ebx,4)
	movl 8(%edi),%edi
	decl %ebx
.L1007:
	testl %ebx,%ebx
	jge .L1008
	leal -36(%ebp),%esp
	movl %ecx,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe186:
	.size	 BldQuake__BuildOptionList,.Lfe186-BldQuake__BuildOptionList
	.align 16
	.type	 BldQuake__DoTryExec,@function
BldQuake__DoTryExec:
	pushl %ebp
	movl %esp,%ebp
	subl $4520,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-4504(%ebp)
	movl -4504(%ebp),%ecx
	movl %ecx,-20(%ebp)
	movl %ecx,-16(%ebp)
	movl %ecx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl %ecx,-4(%ebp)
	movb $1,-4512(%ebp)
	movb -4512(%ebp),%cl
	movb %cl,-4508(%ebp)
	cmpl $0,12(%ebp)
	jle .L1012
	movl MI_M3Buf+44,%eax
	call *%eax
	movl %eax,%edx
	movl 8(%ebp),%esi
	movl %edx,%edi
	movl 16(%esi),%eax
	movl %eax,%ebx
	subl 12(%ebp),%ebx
	decl %eax
	movl %eax,-4516(%ebp)
	jmp .L1014
	.align 16
.L1015:
	cmpb $0,-4508(%ebp)
	je .L1016
	movb $0,-4508(%ebp)
	jmp .L1017
	.align 16
.L1016:
	pushl $32
	pushl %edi
	movl MI_M3Buf+48,%eax
	call *%eax
	addl $8,%esp
.L1017:
	movl 8(%ebp),%ecx
	movl 52(%ecx),%eax
	testl %eax,%eax
	jne .L1018
	pushl $44260
	call _m3_fault
	.align 16
.L1018:
	movl %eax,%edx
	cmpl %ebx,4(%edx)
	ja .L1019
	pushl $44258
	call _m3_fault
	.align 16
.L1019:
	pushl %edi
	leal (%ebx,%ebx,2),%eax
	sall $2,%eax
	movl %eax,-4520(%ebp)
	addl (%edx),%eax
	pushl %eax
	movl 8(%ebp),%esi
	pushl %esi
	movl MI_QVal+76,%eax
	call *%eax
	movl 52(%esi),%eax
	addl $12,%esp
	testl %eax,%eax
	jne .L1020
	pushl $44276
	call _m3_fault
	.align 16
.L1020:
	movl %eax,%edx
	cmpl %ebx,4(%edx)
	ja .L1021
	pushl $44274
	call _m3_fault
	.align 16
.L1021:
	movl -4520(%ebp),%eax
	addl (%edx),%eax
	incl %ebx
	movl $0,8(%eax)
.L1014:
	cmpl %ebx,-4516(%ebp)
	jge .L1015
	movl 8(%ebp),%ecx
	movl 12(%ebp),%esi
	subl %esi,16(%ecx)
	pushl %edi
	movl MI_M3Buf+72,%eax
	call *%eax
	movl %eax,-4504(%ebp)
	movl $0,-4496(%ebp)
	addl $4,%esp
	jmp .L1023
	.align 16
.L1024:
	cmpl $0,-4496(%ebp)
	jge .L1025
	pushl $44401
	call _m3_fault
	.align 16
.L1025:
	movl -4496(%ebp),%ecx
	pushl %ecx
	movl -4504(%ebp),%esi
	pushl %esi
	movl MI_Text+52,%eax
	call *%eax
	addl $8,%esp
	cmpl $64,%eax
	jne .L1028
	movb $0,-4512(%ebp)
	incl -4496(%ebp)
.L1023:
	movl -4504(%ebp),%ecx
	pushl %ecx
	movl MI_Text+56,%eax
	call *%eax
	addl $4,%esp
	cmpl %eax,-4496(%ebp)
	jl .L1024
.L1028:
	cmpl $0,-4496(%ebp)
	jge .L1029
	pushl $44513
	call _m3_fault
	.align 16
.L1029:
	pushl $2147483647
	movl -4496(%ebp),%esi
	pushl %esi
	movl -4504(%ebp),%ecx
	pushl %ecx
	movl MI_Text+64,%eax
	call *%eax
	movl %eax,-4504(%ebp)
	addl $12,%esp
.L1030:
	movl $MM_BldQuake+4352,-4288(%ebp)
	movl $0,-4292(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-4296(%ebp)
	leal -4296(%ebp),%esi
	movl %esi,RTThread__handlerStack
	leal -4276(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L1033
	cmpb $0,-4512(%ebp)
	je .L1032
	movl -4504(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%esi
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	movl MI_Wr+60,%eax
	pushl %eax
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+68,%eax
	call *%eax
	addl $16,%esp
.L1032:
	movl -4296(%ebp),%eax
	movl %eax,RTThread__handlerStack
.L1031:
.L1033:
	movl $0,-4496(%ebp)
	pushl $MM_BldQuake+1884
	movl -4504(%ebp),%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,-4504(%ebp)
	addl $8,%esp
	jmp .L1035
	.align 16
.L1036:
	incl -4496(%ebp)
.L1035:
	cmpl $0,-4496(%ebp)
	jge .L1037
	pushl $44753
	call _m3_fault
	.align 16
.L1037:
	movl -4496(%ebp),%esi
	pushl %esi
	movl -4504(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	addl $8,%esp
	cmpl $32,%eax
	jne .L1036
	pushl %esi
	pushl $0
	movl -4504(%ebp),%esi
	pushl %esi
	movl MI_Text+64,%eax
	call *%eax
	movl %eax,%edx
	addl $12,%esp
	movl %edx,-4500(%ebp)
	pushl $2147483647
	movl -4496(%ebp),%ecx
	pushl %ecx
	pushl %esi
	movl MI_Text+64,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	call BldQuake__BuildOptionList
	movl %eax,%ebx
	movl %ebx,-4488(%ebp)
	addl $16,%esp
.L1041:
	movl $MM_BldQuake+4380,-4468(%ebp)
	movl $0,-4472(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-4476(%ebp)
	leal -4476(%ebp),%esi
	movl %esi,RTThread__handlerStack
	leal -4456(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L1042
	leal -20(%ebp),%eax
	pushl %eax
	leal -16(%ebp),%eax
	pushl %eax
	movl MI_Pipe+48,%eax
	call *%eax
	addl $8,%esp
	cmpl $0,-4488(%ebp)
	jne .L1043
	pushl $44884
	call _m3_fault
	.align 16
.L1043:
	movl -20(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl %ebx
	pushl %ebx
	pushl %ebx
	movl -4488(%ebp),%ecx
	pushl %ecx
	movl -4500(%ebp),%esi
	pushl %esi
	movl MI_Process+44,%eax
	call *%eax
	movl -20(%ebp),%edx
	movl %eax,-4492(%ebp)
	movl (%edx),%eax
	movl 16(%eax),%ebx
	pushl %edx
	call *%ebx
	addl $32,%esp
	movl MM_BldQuake+4400,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 20(%eax),%edx
	movl -16(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	movl %eax,%edx
	movl %edx,%edi
	addl $12,%esp
.L1044:
	leal -4116(%ebp),%ebx
	movl %ebx,-4484(%ebp)
	movl $4096,-4480(%ebp)
	leal -4484(%ebp),%ecx
	movl %ecx,-4520(%ebp)
	pushl %ecx
	pushl %edi
	movl MI_Rd+96,%eax
	call *%eax
	addl $8,%esp
	cmpl $4096,%eax
	jne .L1045
	movl %ebx,-4484(%ebp)
	movl %eax,-4480(%ebp)
	movl -4520(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%ecx
	movl 136(%ecx),%eax
	pushl %eax
	movl MI_Wr+72,%eax
	call *%eax
	addl $8,%esp
	jmp .L1044
	.align 16
.L1045:
	testl %eax,%eax
	jge .L1047
	pushl $45041
	call _m3_fault
	.align 16
.L1047:
	cmpl $4096,%eax
	jle .L1048
	pushl $45041
	call _m3_fault
	.align 16
.L1048:
	movl %eax,-4480(%ebp)
	movl %ebx,-4484(%ebp)
	movl -4520(%ebp),%esi
	pushl %esi
	movl 8(%ebp),%ecx
	movl 136(%ecx),%eax
	pushl %eax
	movl MI_Wr+72,%eax
	call *%eax
	addl $8,%esp
	pushl %edi
	movl MI_Rd+116,%eax
	call *%eax
	movl 8(%ebp),%esi
	movl 136(%esi),%eax
	pushl %eax
	movl MI_Wr+80,%eax
	call *%eax
	movl -4492(%ebp),%ecx
	pushl %ecx
	movl MI_Process+152,%eax
	call *%eax
	movl %eax,-4496(%ebp)
	movl -4476(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $12,%esp
	jmp .L1050
	.align 16
.L1042:
	cmpl $MI_OSError+44,-4464(%ebp)
	jne .L1050
	movl -4504(%ebp),%esi
	pushl %esi
	pushl $MM_BldQuake+4412
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $16,%esp
.L1050:
	movb $1,-12(%ebp)
	movl -4496(%ebp),%ecx
	movl 8(%ebp),%esi
	movl %ecx,-8(%ebp)
	movl (%esi),%eax
	movl 24(%eax),%edx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%edx
.L1012:
	leal -4532(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe187:
	.size	 BldQuake__DoTryExec,.Lfe187-BldQuake__DoTryExec
	.align 16
	.type	 BldQuake__DoReplaceChar,@function
BldQuake__DoReplaceChar:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-36(%ebp)
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $3,12(%ebp)
	je .L1054
	pushl $45408
	call _m3_fault
	.align 16
.L1054:
	movl 8(%ebp),%edx
	movl (%edx),%eax
	leal -12(%ebp),%esi
	movl 28(%eax),%edi
	pushl %esi
	pushl %edx
	call *%edi
	movl 8(%ebp),%edx
	movl (%edx),%eax
	leal -24(%ebp),%ebx
	movl 28(%eax),%edi
	pushl %ebx
	pushl %edx
	call *%edi
	movl 8(%ebp),%edx
	movl (%edx),%eax
	movl 28(%eax),%edi
	leal -36(%ebp),%eax
	pushl %eax
	pushl %edx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	addl $32,%esp
	movl %edi,-44(%ebp)
	pushl %esi
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-40(%ebp)
	movl -44(%ebp),%edx
	pushl %edx
	movl MI_Text+56,%eax
	call *%eax
	addl $12,%esp
	cmpl $1,%eax
	jne .L1055
	pushl %edi
	movl MI_Text+56,%eax
	call *%eax
	movl %eax,%esi
	addl $4,%esp
	cmpl $1,%esi
	je .L1056
.L1055:
	pushl $MM_BldQuake+4436
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $8,%esp
.L1056:
	leal -36(%ebp),%ebx
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edi
	pushl $0
	movl -44(%ebp),%edx
	pushl %edx
	movl MI_Text+52,%eax
	call *%eax
	movl %eax,%esi
	pushl $0
	movl -40(%ebp),%edx
	pushl %edx
	movl MI_Text+52,%eax
	call *%eax
	pushl %eax
	pushl %esi
	pushl %edi
	call BldQuake__ReplaceChar
	addl $36,%esp
	pushl $0
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%edx
	movl %eax,-32(%ebp)
	movl (%edx),%eax
	movl 24(%eax),%eax
	pushl %ebx
	pushl %edx
	call *%eax
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe188:
	.size	 BldQuake__DoReplaceChar,.Lfe188-BldQuake__DoReplaceChar
	.align 16
	.type	 BldQuake__ReplaceChar,@function
BldQuake__ReplaceChar:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	leal -4(%ebp),%ecx
	pushl %ebx
	movl 8(%ebp),%edi
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	pushl %edi
	movl MI_Text+56,%eax
	leal -12(%ebp),%ebx
	call *%eax
	movl %eax,-4(%ebp)
	pushl %ebx
	movl MM_BldQuake+4508,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,%esi
	addl $12,%esp
	testl %ebx,%ebx
	jne .L1058
	pushl $45716
	call _m3_fault
	.align 16
.L1058:
	pushl %edi
	pushl %ebx
	movl MI_Text+68,%eax
	call *%eax
	addl $8,%esp
	xorl %edx,%edx
	movl 4(%ebx),%edi
	decl %edi
	jmp .L1060
	.align 16
.L1061:
	testl %esi,%esi
	jne .L1062
	pushl $45748
	call _m3_fault
	.align 16
.L1062:
	movl %esi,%ebx
	cmpl %edx,4(%ebx)
	ja .L1063
	pushl $45746
	call _m3_fault
	.align 16
.L1063:
	movl (%ebx),%eax
	movb 12(%ebp),%cl
	cmpb %cl,(%edx,%eax)
	jne .L1064
	movb 16(%ebp),%cl
	movb %cl,(%edx,%eax)
.L1064:
	incl %edx
.L1060:
	cmpl %edi,%edx
	jle .L1061
	testl %esi,%esi
	jne .L1068
	pushl $45780
	call _m3_fault
	.align 16
.L1068:
	pushl %esi
	movl MI_Text+76,%eax
	call *%eax
	movl %eax,%ebx
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe189:
	.size	 BldQuake__ReplaceChar,.Lfe189-BldQuake__ReplaceChar
	.align 16
	.type	 BldQuake__DoW2P,@function
BldQuake__DoW2P:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L1070
	pushl $45904
	call _m3_fault
	.align 16
.L1070:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	pushl %esi
	call BldQuake__W2P
	pushl $0
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-8(%ebp)
	movl (%edi),%eax
	movl 24(%eax),%eax
	pushl %ebx
	pushl %edi
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe190:
	.size	 BldQuake__DoW2P,.Lfe190-BldQuake__DoW2P
	.align 16
	.type	 BldQuake__W2P,@function
BldQuake__W2P:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %edi
	pushl %esi
	xorl %esi,%esi
	movl %esi,%edi
	pushl %ebx
	movl %edi,-20(%ebp)
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+56,%eax
	call *%eax
	movl %eax,-16(%ebp)
	addl $4,%esp
	cmpl $1,%eax
	jle .L1072
	pushl $1
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	movl %eax,%edx
	addl $8,%esp
	cmpl $58,%edx
	jne .L1072
	leal -12(%ebp),%eax
	leal -4(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	movl -16(%ebp),%ecx
	incl %ecx
	movl %ecx,-4(%ebp)
	pushl %eax
	movl MM_BldQuake+4508,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,%esi
	addl $8,%esp
	testl %ebx,%ebx
	jne .L1073
	pushl $46180
	call _m3_fault
	.align 16
.L1073:
	cmpl $0,4(%ebx)
	jne .L1074
	pushl $46178
	call _m3_fault
	.align 16
.L1074:
	movl (%ebx),%eax
	movb $47,(%eax)
	cmpl $1,4(%ebx)
	ja .L1076
	pushl $46178
	call _m3_fault
	.align 16
.L1076:
	movl (%ebx),%eax
	movb $47,1(%eax)
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	movl %eax,%edx
	addl $8,%esp
	cmpl $2,4(%ebx)
	ja .L1078
	pushl $46194
	call _m3_fault
	.align 16
.L1078:
	movl (%ebx),%eax
	movl $2,%edi
	movb %dl,2(%eax)
	movl $3,-20(%ebp)
	jmp .L1080
	.align 16
.L1072:
	leal -12(%ebp),%eax
	leal -4(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	movl -16(%ebp),%ecx
	movl %ecx,-4(%ebp)
	pushl %eax
	movl MM_BldQuake+4508,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,%esi
	addl $8,%esp
	jmp .L1080
	.align 16
.L1081:
	testl %edi,%edi
	jge .L1082
	pushl $46305
	call _m3_fault
	.align 16
.L1082:
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	movl %eax,%edx
	addl $8,%esp
	cmpb $92,%dl
	jne .L1083
	movb $47,%dl
.L1083:
	testl %esi,%esi
	jne .L1084
	pushl $46340
	call _m3_fault
	.align 16
.L1084:
	movl %esi,%ebx
	movl -20(%ebp),%ecx
	cmpl %ecx,4(%ebx)
	ja .L1085
	pushl $46338
	call _m3_fault
	.align 16
.L1085:
	movl (%ebx),%eax
	movl -20(%ebp),%ecx
	incl %edi
	movb %dl,(%ecx,%eax)
	incl %ecx
	movl %ecx,-20(%ebp)
.L1080:
	cmpl %edi,-16(%ebp)
	jg .L1081
	testl %esi,%esi
	jne .L1087
	pushl $46388
	call _m3_fault
	.align 16
.L1087:
	pushl %esi
	movl MI_Text+76,%eax
	call *%eax
	movl %eax,%ebx
	leal -32(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe191:
	.size	 BldQuake__W2P,.Lfe191-BldQuake__W2P
	.align 16
	.type	 BldQuake__DoP2W,@function
BldQuake__DoP2W:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L1089
	pushl $46512
	call _m3_fault
	.align 16
.L1089:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%esi
	pushl %esi
	call BldQuake__P2W
	pushl $0
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-8(%ebp)
	movl (%edi),%eax
	movl 24(%eax),%eax
	pushl %ebx
	pushl %edi
	call *%eax
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe192:
	.size	 BldQuake__DoP2W,.Lfe192-BldQuake__DoP2W
	.align 16
	.type	 BldQuake__P2W,@function
BldQuake__P2W:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %edi
	pushl %esi
	xorl %esi,%esi
	pushl %ebx
	movl %esi,-20(%ebp)
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+56,%eax
	movl %esi,%edi
	call *%eax
	movl %eax,-16(%ebp)
	addl $4,%esp
	cmpl $2,%eax
	jle .L1091
	pushl %esi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	addl $8,%esp
	cmpl $47,%eax
	jne .L1091
	pushl $1
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	movl %eax,%edx
	addl $8,%esp
	cmpl $47,%edx
	jne .L1091
	leal -12(%ebp),%eax
	leal -4(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	movl -16(%ebp),%ecx
	decl %ecx
	movl %ecx,-4(%ebp)
	pushl %eax
	movl MM_BldQuake+4508,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%ebx
	pushl $2
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	movl %ebx,%esi
	call *%eax
	movl %eax,%edx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1092
	pushl $46804
	call _m3_fault
	.align 16
.L1092:
	cmpl $0,4(%ebx)
	jne .L1093
	pushl $46802
	call _m3_fault
	.align 16
.L1093:
	movl (%ebx),%eax
	movb %dl,(%eax)
	cmpl $1,4(%ebx)
	ja .L1095
	pushl $46818
	call _m3_fault
	.align 16
.L1095:
	movl (%ebx),%eax
	movl $3,%edi
	movb $58,1(%eax)
	movl $2,-20(%ebp)
	jmp .L1097
	.align 16
.L1091:
	leal -12(%ebp),%eax
	leal -4(%ebp),%ecx
	movl %ecx,-12(%ebp)
	movl $1,-8(%ebp)
	movl -16(%ebp),%ecx
	movl %ecx,-4(%ebp)
	pushl %eax
	movl MM_BldQuake+4508,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%ebx
	movl %ebx,%esi
	addl $8,%esp
	jmp .L1097
	.align 16
.L1098:
	testl %edi,%edi
	jge .L1099
	pushl $46929
	call _m3_fault
	.align 16
.L1099:
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	movl %eax,%edx
	addl $8,%esp
	cmpb $47,%dl
	jne .L1100
	movb $92,%dl
.L1100:
	testl %esi,%esi
	jne .L1101
	pushl $46964
	call _m3_fault
	.align 16
.L1101:
	movl %esi,%ebx
	movl -20(%ebp),%ecx
	cmpl %ecx,4(%ebx)
	ja .L1102
	pushl $46962
	call _m3_fault
	.align 16
.L1102:
	movl (%ebx),%eax
	movl -20(%ebp),%ecx
	incl %edi
	movb %dl,(%ecx,%eax)
	incl %ecx
	movl %ecx,-20(%ebp)
.L1097:
	cmpl %edi,-16(%ebp)
	jg .L1098
	testl %esi,%esi
	jne .L1104
	pushl $47012
	call _m3_fault
	.align 16
.L1104:
	pushl %esi
	movl MI_Text+76,%eax
	call *%eax
	movl %eax,%ebx
	leal -32(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe193:
	.size	 BldQuake__P2W,.Lfe193-BldQuake__P2W
	.align 16
	.type	 BldQuake__DoInc,@function
BldQuake__DoInc:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L1106
	pushl $47136
	call _m3_fault
	.align 16
.L1106:
	movl (%edi),%eax
	leal -12(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+52,%eax
	call *%eax
	movl %eax,-16(%ebp)
	movl (%edi),%eax
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	pushl %ebx
	pushl %edi
	movl MI_QVal+52,%eax
	call *%eax
	movb $1,-12(%ebp)
	addl -16(%ebp),%eax
	movl %eax,-8(%ebp)
	movl (%edi),%eax
	addl $32,%esp
	movl 24(%eax),%esi
	pushl %ebx
	pushl %edi
	call *%esi
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe194:
	.size	 BldQuake__DoInc,.Lfe194-BldQuake__DoInc
	.align 16
	.type	 BldQuake__DoDummy,@function
BldQuake__DoDummy:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl $1,%ebx
	movl 12(%ebp),%esi
	jmp .L1108
	.align 16
.L1109:
	movl (%edi),%eax
	movl 28(%eax),%edx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %edi
	call *%edx
	incl %ebx
	addl $8,%esp
.L1108:
	cmpl %esi,%ebx
	jle .L1109
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe195:
	.size	 BldQuake__DoDummy,.Lfe195-BldQuake__DoDummy
	.align 16
	.type	 BldQuake__DoDeleteFile,@function
BldQuake__DoDeleteFile:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L1112
	pushl $47584
	call _m3_fault
	.align 16
.L1112:
	movl (%ebx),%eax
	movl 28(%eax),%edx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $8,%esp
	testl %ebx,%ebx
	je .L1113
	movl -4(%ebx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L1114
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L1113
.L1114:
	pushl $47621
	call _m3_fault
	.align 16
.L1113:
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edx
	movl 460(%ebx),%eax
	pushl %edx
	pushl %ebx
	call *%eax
	movl -16(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe196:
	.size	 BldQuake__DoDeleteFile,.Lfe196-BldQuake__DoDeleteFile
	.align 16
	.type	 BldQuake__DoLinkFile,@function
BldQuake__DoLinkFile:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $2,12(%ebp)
	je .L1116
	pushl $47744
	call _m3_fault
	.align 16
.L1116:
	movl (%esi),%eax
	movl 28(%eax),%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	movl (%esi),%eax
	movl 28(%eax),%ebx
	leal -24(%ebp),%eax
	pushl %eax
	pushl %esi
	call *%ebx
	addl $16,%esp
	testl %esi,%esi
	je .L1117
	movl -4(%esi),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L1118
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L1117
.L1118:
	pushl $47797
	call _m3_fault
	.align 16
.L1117:
	leal -24(%ebp),%eax
	pushl %eax
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%ebx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %esi
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edx
	movl 464(%esi),%eax
	pushl %edx
	pushl %ebx
	pushl %esi
	call *%eax
	leal -32(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe197:
	.size	 BldQuake__DoLinkFile,.Lfe197-BldQuake__DoLinkFile
	.align 16
	.type	 BldQuake__DoMakeExecutable,@function
BldQuake__DoMakeExecutable:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L1120
	pushl $47920
	call _m3_fault
	.align 16
.L1120:
	movl (%ebx),%eax
	movl 28(%eax),%edx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $8,%esp
	testl %ebx,%ebx
	je .L1121
	movl -4(%ebx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L1122
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L1121
.L1122:
	pushl $47957
	call _m3_fault
	.align 16
.L1121:
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edx
	movl 468(%ebx),%eax
	pushl %edx
	pushl %ebx
	call *%eax
	movl -16(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe198:
	.size	 BldQuake__DoMakeExecutable,.Lfe198-BldQuake__DoMakeExecutable
	.align 16
	.type	 BldQuake__DoMakeDir,@function
BldQuake__DoMakeDir:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	cmpl $1,12(%ebp)
	je .L1124
	pushl $48080
	call _m3_fault
	.align 16
.L1124:
	movl (%ebx),%eax
	movl 28(%eax),%edx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	addl $8,%esp
	testl %ebx,%ebx
	je .L1125
	movl -4(%ebx),%eax
	sall $11,%eax
	movl %eax,%edx
	shrl $12,%edx
	cmpl %edx,MM_BldQuake+1300
	jg .L1126
	movl MM_BldQuake+1296,%eax
	cmpl %edx,4(%eax)
	jge .L1125
.L1126:
	pushl $48117
	call _m3_fault
	.align 16
.L1125:
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	movl MI_QVal+56,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl %ebx
	call BldQuake__MakeDir
	movl -16(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe199:
	.size	 BldQuake__DoMakeDir,.Lfe199-BldQuake__DoMakeDir
	.align 16
	.type	 BldQuake__MakeDir,@function
BldQuake__MakeDir:
	pushl %ebp
	movl %esp,%ebp
	subl $404,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
.L1128:
	movl $MM_BldQuake+1304,-16(%ebp)
	movl $4,-20(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-24(%ebp)
	leal -24(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl MM_BldQuake+1280,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%ebx
	movl (%ebx),%eax
	movl 4(%eax),%esi
	pushl $5
	pushl %ebx
	call *%esi
	movl %eax,-404(%ebp)
	pushl $0
	pushl $MM_BldQuake+1844
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ebx
	movl (%edi),%eax
	movl 12(%eax),%edx
	leal -12(%ebp),%eax
	pushl %eax
	pushl %ebx
	pushl %edi
	call *%edx
	movl %eax,%ebx
	addl $32,%esp
	testl %ebx,%ebx
	je .L1129
	movl (%edi),%eax
	movl 44(%eax),%edx
	pushl %edi
	call *%edx
	movl %eax,%esi
	movl 12(%ebp),%eax
	pushl %eax
	pushl $MM_BldQuake+4520
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	movl 200(%edi),%eax
	pushl %eax
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	pushl %edx
	pushl %esi
	movl MI_Wr+68,%eax
	call *%eax
	addl $28,%esp
.L1129:
	movl 12(%ebp),%eax
	pushl %eax
	movl MI_Pathname+80,%eax
	call *%eax
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L1132
	movl MI_Process+180,%eax
	call *%eax
	movl %eax,%edx
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edx
	movl MI_Pathname+96,%eax
	call *%eax
.L1145:
	movl %eax,%ebx
	movl %ebx,12(%ebp)
	addl $12,%esp
.L1132:
	movl $MM_BldQuake+3848,-196(%ebp)
	movl $0,-200(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-204(%ebp)
	leal -204(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -184(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L1133
	leal -220(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	movl MI_FS+184,%eax
	call *%eax
	movl -204(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $8,%esp
	jmp .L1137
	.align 16
.L1133:
	movl -404(%ebp),%ecx
	movl (%ecx),%eax
	movl 16(%eax),%ebx
	leal 12(%ebp),%eax
	pushl %eax
	pushl %ecx
	call *%ebx
	movl 12(%ebp),%eax
	pushl %eax
	movl MI_Pathname+84,%eax
	call *%eax
	jmp .L1145
	.align 16
.L1137:
	movl $MM_BldQuake+3848,-392(%ebp)
	movl $0,-396(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-400(%ebp)
	leal -400(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -380(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%esi
	addl $4,%esp
	testl %esi,%esi
	jne .L1138
	movl -404(%ebp),%ecx
	movl (%ecx),%eax
	movl 32(%eax),%ebx
	pushl %ecx
	call *%ebx
	movl %eax,%ebx
	leal -1(%ebx),%edi
	addl $4,%esp
	jmp .L1139
	.align 16
.L1140:
	movl -404(%ebp),%ecx
	movl (%ecx),%eax
	movl 44(%eax),%ebx
	pushl %esi
	pushl %ecx
	call *%ebx
	movl %eax,%edx
	pushl %edx
	movl MI_FS+56,%eax
	call *%eax
	incl %esi
	addl $12,%esp
.L1139:
	cmpl %edi,%esi
	jle .L1140
	movl -400(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L1144
	.align 16
.L1138:
	movl 12(%ebp),%eax
	pushl %eax
	pushl $MM_BldQuake+4540
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+1352
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%ebx
	pushl %ebx
	call BldQuake__FErr
.L1144:
	movl -24(%ebp),%eax
	leal -416(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe200:
	.size	 BldQuake__MakeDir,.Lfe200-BldQuake__MakeDir
	.align 16
	.type	 BldQuake__CopyIfNew,@function
BldQuake__CopyIfNew:
	pushl %ebp
	movl %esp,%ebp
	subl $364,%esp
	movb $0,-364(%ebp)
	movl 16(%ebp),%edx
	pushl %edx
	movl MI_M3File+60,%eax
	call *%eax
	addl $4,%esp
	testl %eax,%eax
	je .L1148
	movl 12(%ebp),%edx
	pushl %edx
	movl MI_Pathname+88,%eax
	call *%eax
	pushl $0
	pushl %eax
	movl 16(%ebp),%edx
	pushl %edx
	movl MI_Pathname+96,%eax
	call *%eax
	movl %eax,16(%ebp)
	addl $16,%esp
.L1148:
	movl $MM_BldQuake+3848,-172(%ebp)
	movl $0,-176(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-180(%ebp)
	leal -180(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -160(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L1152
	movl 16(%ebp),%edx
	pushl %edx
	movl 12(%ebp),%edx
	pushl %edx
	movl MI_M3File+56,%eax
	call *%eax
	movb %al,-364(%ebp)
	movl -180(%ebp),%eax
	movl %eax,RTThread__handlerStack
	addl $8,%esp
.L1149:
.L1152:
	movl $MM_BldQuake+3848,-352(%ebp)
	movl $0,-356(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-360(%ebp)
	leal -360(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -340(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L1153
	cmpb $0,-364(%ebp)
	jne .L1154
	movl 16(%ebp),%edx
	pushl %edx
	movl 12(%ebp),%edx
	pushl %edx
	movl MI_M3File+48,%eax
	call *%eax
.L1154:
	movl -360(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L1146
	.align 16
.L1153:
	movl 12(%ebp),%edx
	pushl %edx
	pushl $MM_BldQuake+4584
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+4616
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 16(%ebp),%edx
	pushl %edx
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+1352
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl %eax
	call BldQuake__FErr
.L1146:
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe201:
	.size	 BldQuake__CopyIfNew,.Lfe201-BldQuake__CopyIfNew
	.align 16
	.type	 BldQuake__Stale,@function
BldQuake__Stale:
	pushl %ebp
	movl %esp,%ebp
	subl $212,%esp
	movl $0,-32(%ebp)
	movl $0,-28(%ebp)
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
.L1158:
	movl $MM_BldQuake+3848,-204(%ebp)
	movl $0,-208(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-212(%ebp)
	leal -212(%ebp),%edx
	movl %edx,RTThread__handlerStack
	leal -192(%ebp),%eax
	pushl %eax
	call _setjmp
	addl $4,%esp
	testl %eax,%eax
	jne .L1159
	leal -32(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_FS+184,%eax
	call *%eax
	leal -16(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	movl MI_FS+184,%eax
	call *%eax
	movl -212(%ebp),%eax
	movl %eax,RTThread__handlerStack
	fldl -12(%ebp)
	fcompl -28(%ebp)
	fnstsw %ax
	andb $69,%ah
	sete %al
	andl $255,%eax
	jmp .L1162
	.align 16
.L1159:
	movl $1,%eax
.L1162:
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe202:
	.size	 BldQuake__Stale,.Lfe202-BldQuake__Stale
	.align 16
	.type	 BldQuake__Escape,@function
BldQuake__Escape:
	pushl %ebp
	movl %esp,%ebp
	subl $420,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-416(%ebp)
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+56,%eax
	call *%eax
	movl %eax,%esi
	movb $0,-412(%ebp)
	movl %esi,%eax
	addl %esi,%eax
	addl $4,%esp
	cmpl $200,%eax
	jg .L1164
	movl -416(%ebp),%ebx
	leal -200(%ebp),%ecx
	movl %ecx,-408(%ebp)
	movl $200,-404(%ebp)
	movl 8(%ebp),%ecx
	pushl %ecx
	leal -408(%ebp),%eax
	pushl %eax
	movl MI_Text+68,%eax
	call *%eax
	movl %ebx,%edx
	decl %esi
	addl $8,%esp
	jmp .L1165
	.align 16
.L1166:
	cmpl $199,%edx
	jle .L1167
	pushl $49361
	call _m3_fault
	.align 16
.L1167:
	movb -200(%edx,%ebp),%al
	cmpb $92,%al
	jne .L1168
	cmpl $199,%ebx
	jbe .L1169
	pushl $49393
	call _m3_fault
	.align 16
.L1169:
	movb %al,-400(%ebx,%ebp)
	incl %ebx
	movb $1,-412(%ebp)
.L1168:
	cmpl $199,%ebx
	jbe .L1170
	pushl $49441
	call _m3_fault
	.align 16
.L1170:
	movb %al,-400(%ebx,%ebp)
	incl %ebx
	incl %edx
.L1165:
	cmpl %esi,%edx
	jle .L1166
	cmpb $0,-412(%ebp)
	je .L1182
	testl %ebx,%ebx
	jge .L1173
	pushl $49489
	call _m3_fault
	.align 16
.L1173:
	cmpl $200,%ebx
	jle .L1174
	pushl $49489
	call _m3_fault
	.align 16
.L1174:
	movl %ebx,-404(%ebp)
	leal -400(%ebp),%ecx
	movl %ecx,-408(%ebp)
	leal -408(%ebp),%eax
	pushl %eax
	movl MI_Text+76,%eax
	jmp .L1181
	.align 16
.L1164:
	movl MI_M3Buf+44,%eax
	call *%eax
	movl %eax,-416(%ebp)
	xorl %edi,%edi
	decl %esi
	movl %esi,-420(%ebp)
	jmp .L1175
	.align 16
.L1176:
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_Text+52,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,%eax
	xorl %ebx,%ebx
	movb %al,%bl
	addl $8,%esp
	cmpl $92,%ebx
	jne .L1177
	pushl %ebx
	movl -416(%ebp),%ecx
	pushl %ecx
	movl MI_M3Buf+48,%eax
	call *%eax
	movb $1,-412(%ebp)
	addl $8,%esp
.L1177:
	pushl %ebx
	movl -416(%ebp),%ecx
	pushl %ecx
	movl MI_M3Buf+48,%eax
	call *%eax
	incl %edi
	addl $8,%esp
.L1175:
	cmpl %edi,-420(%ebp)
	jge .L1176
	cmpb $0,-412(%ebp)
	jne .L1179
.L1182:
	movl 8(%ebp),%eax
	jmp .L1180
	.align 16
.L1179:
	movl -416(%ebp),%ecx
	pushl %ecx
	movl MI_M3Buf+72,%eax
.L1181:
	call *%eax
.L1180:
	leal -432(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe203:
	.size	 BldQuake__Escape,.Lfe203-BldQuake__Escape
	.align 16
	.type	 BldQuake__NewProc,@function
BldQuake__NewProc:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%esi
	movb 20(%ebp),%bl
	pushl $0
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edi
	movl MM_BldQuake+4632,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %edi,8(%eax)
	movb %bl,17(%eax)
	movl 16(%ebp),%ecx
	movl %ecx,12(%eax)
	movb $1,16(%eax)
	movl %eax,%edx
	addl $12,%esp
	testl %esi,%esi
	je .L1184
	cmpl $-1,(%esi)
	jne .L1184
	pushl $49861
	call _m3_fault
	.align 16
.L1184:
	movl %esi,20(%edx)
	movl %eax,%ebx
	movl MM_BldQuake+4640,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edx
	leal -12(%ebp),%esp
	movl %ebx,(%edx)
	movl $0,4(%edx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe204:
	.size	 BldQuake__NewProc,.Lfe204-BldQuake__NewProc
	.align 16
	.type	 BldQuake__InitProcs,@function
BldQuake__InitProcs:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	leal -12(%ebp),%eax
	pushl %esi
	leal -4(%ebp),%esi
	pushl %ebx
	movl %esi,-12(%ebp)
	movl $1,-8(%ebp)
	movl $120,-4(%ebp)
	pushl %eax
	movl MM_BldQuake+4648,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	pushl $0
	movl %eax,%ebx
	pushl $0
	movl MM_BldQuake+736,%eax
	pushl %eax
	pushl $MM_BldQuake+4660
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $24,%esp
	testl %ebx,%ebx
	jne .L1187
	pushl $50036
	call _m3_fault
	.align 16
.L1187:
	cmpl $0,4(%ebx)
	jne .L1188
	pushl $50034
	call _m3_fault
	.align 16
.L1188:
	movl (%ebx),%edx
	movl %ecx,(%edx)
	pushl $0
	pushl $0
	movl MM_BldQuake+744,%eax
	pushl %eax
	pushl $MM_BldQuake+4684
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $1,4(%ebx)
	ja .L1190
	pushl $50050
	call _m3_fault
	.align 16
.L1190:
	movl (%ebx),%eax
	movl %edx,8(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+732,%eax
	pushl %eax
	pushl $MM_BldQuake+4700
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $2,4(%ebx)
	ja .L1192
	pushl $50066
	call _m3_fault
	.align 16
.L1192:
	movl (%ebx),%eax
	movl %ecx,16(%eax)
	pushl $1
	pushl $1
	movl MM_BldQuake+160,%eax
	pushl %eax
	pushl $MM_BldQuake+4724
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $3,4(%ebx)
	ja .L1194
	pushl $50082
	call _m3_fault
	.align 16
.L1194:
	movl (%ebx),%eax
	movl %edx,24(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+168,%eax
	pushl %eax
	pushl $MM_BldQuake+4740
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $4,4(%ebx)
	ja .L1196
	pushl $50098
	call _m3_fault
	.align 16
.L1196:
	movl (%ebx),%eax
	movl %ecx,32(%eax)
	pushl $1
	pushl $2
	movl MM_BldQuake+176,%eax
	pushl %eax
	pushl $MM_BldQuake+4764
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $5,4(%ebx)
	ja .L1198
	pushl $50114
	call _m3_fault
	.align 16
.L1198:
	movl (%ebx),%eax
	movl %edx,40(%eax)
	pushl $1
	pushl $1
	movl MM_BldQuake+184,%eax
	pushl %eax
	pushl $MM_BldQuake+4788
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $6,4(%ebx)
	ja .L1200
	pushl $50130
	call _m3_fault
	.align 16
.L1200:
	movl (%ebx),%eax
	movl %ecx,48(%eax)
	pushl $1
	pushl $1
	movl MM_BldQuake+192,%eax
	pushl %eax
	pushl $MM_BldQuake+4808
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $7,4(%ebx)
	ja .L1202
	pushl $50146
	call _m3_fault
	.align 16
.L1202:
	movl (%ebx),%eax
	movl %edx,56(%eax)
	pushl $1
	pushl $2
	movl MM_BldQuake+208,%eax
	pushl %eax
	pushl $MM_BldQuake+4832
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $8,4(%ebx)
	ja .L1204
	pushl $50162
	call _m3_fault
	.align 16
.L1204:
	movl (%ebx),%eax
	movl %ecx,64(%eax)
	pushl $1
	pushl $0
	movl MM_BldQuake+216,%eax
	pushl %eax
	pushl $MM_BldQuake+4856
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $9,4(%ebx)
	ja .L1206
	pushl $50178
	call _m3_fault
	.align 16
.L1206:
	movl (%ebx),%eax
	movl %edx,72(%eax)
	pushl $1
	pushl $1
	movl MM_BldQuake+200,%eax
	pushl %eax
	pushl $MM_BldQuake+4880
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1207
	pushl $50196
	call _m3_fault
	.align 16
.L1207:
	cmpl $10,4(%ebx)
	ja .L1208
	pushl $50194
	call _m3_fault
	.align 16
.L1208:
	movl (%ebx),%eax
	movl %ecx,80(%eax)
	pushl $1
	pushl $1
	movl MM_BldQuake+232,%eax
	pushl %eax
	pushl $MM_BldQuake+4900
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $11,4(%ebx)
	ja .L1210
	pushl $50210
	call _m3_fault
	.align 16
.L1210:
	movl (%ebx),%eax
	movl %edx,88(%eax)
	pushl $1
	pushl $1
	movl MM_BldQuake+224,%eax
	pushl %eax
	pushl $MM_BldQuake+4928
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $12,4(%ebx)
	ja .L1212
	pushl $50226
	call _m3_fault
	.align 16
.L1212:
	movl (%ebx),%eax
	movl %ecx,96(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+376,%eax
	pushl %eax
	pushl $MM_BldQuake+4956
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $13,4(%ebx)
	ja .L1214
	pushl $50242
	call _m3_fault
	.align 16
.L1214:
	movl (%ebx),%eax
	movl %edx,104(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+320,%eax
	pushl %eax
	pushl $MM_BldQuake+4980
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $14,4(%ebx)
	ja .L1216
	pushl $50258
	call _m3_fault
	.align 16
.L1216:
	movl (%ebx),%eax
	movl %ecx,112(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+328,%eax
	pushl %eax
	pushl $MM_BldQuake+5004
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $15,4(%ebx)
	ja .L1218
	pushl $50274
	call _m3_fault
	.align 16
.L1218:
	movl (%ebx),%eax
	movl %edx,120(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+368,%eax
	pushl %eax
	pushl $MM_BldQuake+5028
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $16,4(%ebx)
	ja .L1220
	pushl $50290
	call _m3_fault
	.align 16
.L1220:
	movl (%ebx),%eax
	movl %ecx,128(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+336,%eax
	pushl %eax
	pushl $MM_BldQuake+5052
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $17,4(%ebx)
	ja .L1222
	pushl $50306
	call _m3_fault
	.align 16
.L1222:
	movl (%ebx),%eax
	movl %edx,136(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+344,%eax
	pushl %eax
	pushl $MM_BldQuake+5076
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $18,4(%ebx)
	ja .L1224
	pushl $50322
	call _m3_fault
	.align 16
.L1224:
	movl (%ebx),%eax
	movl %ecx,144(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+352,%eax
	pushl %eax
	pushl $MM_BldQuake+5096
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $19,4(%ebx)
	ja .L1226
	pushl $50338
	call _m3_fault
	.align 16
.L1226:
	movl (%ebx),%eax
	movl %edx,152(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+1020,%eax
	pushl %eax
	pushl $MM_BldQuake+5124
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1227
	pushl $50356
	call _m3_fault
	.align 16
.L1227:
	cmpl $20,4(%ebx)
	ja .L1228
	pushl $50354
	call _m3_fault
	.align 16
.L1228:
	movl (%ebx),%eax
	movl %ecx,160(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+1020,%eax
	pushl %eax
	pushl $MM_BldQuake+5148
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $21,4(%ebx)
	ja .L1230
	pushl $50370
	call _m3_fault
	.align 16
.L1230:
	movl (%ebx),%eax
	movl %edx,168(%eax)
	pushl $0
	pushl $3
	movl MM_BldQuake+240,%eax
	pushl %eax
	pushl $MM_BldQuake+5172
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $22,4(%ebx)
	ja .L1232
	pushl $50386
	call _m3_fault
	.align 16
.L1232:
	movl (%ebx),%eax
	movl %ecx,176(%eax)
	pushl $0
	pushl $3
	movl MM_BldQuake+248,%eax
	pushl %eax
	pushl $MM_BldQuake+5204
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $23,4(%ebx)
	ja .L1234
	pushl $50402
	call _m3_fault
	.align 16
.L1234:
	movl (%ebx),%eax
	movl %edx,184(%eax)
	pushl $0
	pushl $3
	movl MM_BldQuake+256,%eax
	pushl %eax
	pushl $MM_BldQuake+5232
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $24,4(%ebx)
	ja .L1236
	pushl $50418
	call _m3_fault
	.align 16
.L1236:
	movl (%ebx),%eax
	movl %ecx,192(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+264,%eax
	pushl %eax
	pushl $MM_BldQuake+5264
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $25,4(%ebx)
	ja .L1238
	pushl $50434
	call _m3_fault
	.align 16
.L1238:
	movl (%ebx),%eax
	movl %edx,200(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+272,%eax
	pushl %eax
	pushl $MM_BldQuake+5296
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $26,4(%ebx)
	ja .L1240
	pushl $50450
	call _m3_fault
	.align 16
.L1240:
	movl (%ebx),%eax
	movl %ecx,208(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+280,%eax
	pushl %eax
	pushl $MM_BldQuake+5336
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $27,4(%ebx)
	ja .L1242
	pushl $50482
	call _m3_fault
	.align 16
.L1242:
	movl (%ebx),%eax
	movl %edx,216(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+288,%eax
	pushl %eax
	pushl $MM_BldQuake+5364
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $28,4(%ebx)
	ja .L1244
	pushl $50498
	call _m3_fault
	.align 16
.L1244:
	movl (%ebx),%eax
	movl %ecx,224(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+296,%eax
	pushl %eax
	pushl $MM_BldQuake+5400
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $29,4(%ebx)
	ja .L1246
	pushl $50530
	call _m3_fault
	.align 16
.L1246:
	movl (%ebx),%eax
	movl %edx,232(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+304,%eax
	pushl %eax
	pushl $MM_BldQuake+5424
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1247
	pushl $50548
	call _m3_fault
	.align 16
.L1247:
	cmpl $30,4(%ebx)
	ja .L1248
	pushl $50546
	call _m3_fault
	.align 16
.L1248:
	movl (%ebx),%eax
	movl %ecx,240(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+312,%eax
	pushl %eax
	pushl $MM_BldQuake+5448
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $31,4(%ebx)
	ja .L1250
	pushl $50562
	call _m3_fault
	.align 16
.L1250:
	movl (%ebx),%eax
	movl %edx,248(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+388,%eax
	pushl %eax
	pushl $MM_BldQuake+2696
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $32,4(%ebx)
	ja .L1252
	pushl $50578
	call _m3_fault
	.align 16
.L1252:
	movl (%ebx),%eax
	movl %ecx,256(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+392,%eax
	pushl %eax
	pushl $MM_BldQuake+5472
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $33,4(%ebx)
	ja .L1254
	pushl $50594
	call _m3_fault
	.align 16
.L1254:
	movl (%ebx),%eax
	movl %edx,264(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+404,%eax
	pushl %eax
	pushl $MM_BldQuake+5496
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $34,4(%ebx)
	ja .L1256
	pushl $50610
	call _m3_fault
	.align 16
.L1256:
	movl (%ebx),%eax
	movl %ecx,272(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+408,%eax
	pushl %eax
	pushl $MM_BldQuake+2780
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $35,4(%ebx)
	ja .L1258
	pushl $50626
	call _m3_fault
	.align 16
.L1258:
	movl (%ebx),%eax
	movl %edx,280(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+412,%eax
	pushl %eax
	pushl $MM_BldQuake+5524
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $36,4(%ebx)
	ja .L1260
	pushl $50642
	call _m3_fault
	.align 16
.L1260:
	movl (%ebx),%eax
	movl %ecx,288(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+448,%eax
	pushl %eax
	pushl $MM_BldQuake+2720
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $37,4(%ebx)
	ja .L1262
	pushl $50658
	call _m3_fault
	.align 16
.L1262:
	movl (%ebx),%eax
	movl %edx,296(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+452,%eax
	pushl %eax
	pushl $MM_BldQuake+5544
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $38,4(%ebx)
	ja .L1264
	pushl $50690
	call _m3_fault
	.align 16
.L1264:
	movl (%ebx),%eax
	movl %ecx,304(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+456,%eax
	pushl %eax
	pushl $MM_BldQuake+5576
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $39,4(%ebx)
	ja .L1266
	pushl $50722
	call _m3_fault
	.align 16
.L1266:
	movl (%ebx),%eax
	movl %edx,312(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+460,%eax
	pushl %eax
	pushl $MM_BldQuake+5612
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1267
	pushl $50756
	call _m3_fault
	.align 16
.L1267:
	cmpl $40,4(%ebx)
	ja .L1268
	pushl $50754
	call _m3_fault
	.align 16
.L1268:
	movl (%ebx),%eax
	movl %ecx,320(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+464,%eax
	pushl %eax
	pushl $MM_BldQuake+2752
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $41,4(%ebx)
	ja .L1270
	pushl $50786
	call _m3_fault
	.align 16
.L1270:
	movl (%ebx),%eax
	movl %edx,328(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+468,%eax
	pushl %eax
	pushl $MM_BldQuake+5648
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $42,4(%ebx)
	ja .L1272
	pushl $50802
	call _m3_fault
	.align 16
.L1272:
	movl (%ebx),%eax
	movl %ecx,336(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+680,%eax
	pushl %eax
	pushl $MM_BldQuake+5676
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $43,4(%ebx)
	ja .L1274
	pushl $50818
	call _m3_fault
	.align 16
.L1274:
	movl (%ebx),%eax
	movl %edx,344(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+684,%eax
	pushl %eax
	pushl $MM_BldQuake+5696
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $44,4(%ebx)
	ja .L1276
	pushl $50834
	call _m3_fault
	.align 16
.L1276:
	movl (%ebx),%eax
	movl %ecx,352(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+420,%eax
	pushl %eax
	pushl $MM_BldQuake+5716
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $45,4(%ebx)
	ja .L1278
	pushl $50850
	call _m3_fault
	.align 16
.L1278:
	movl (%ebx),%eax
	movl %edx,360(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+428,%eax
	pushl %eax
	pushl $MM_BldQuake+5740
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $46,4(%ebx)
	ja .L1280
	pushl $50866
	call _m3_fault
	.align 16
.L1280:
	movl (%ebx),%eax
	movl %ecx,368(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+436,%eax
	pushl %eax
	pushl $MM_BldQuake+5764
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $47,4(%ebx)
	ja .L1282
	pushl $50882
	call _m3_fault
	.align 16
.L1282:
	movl (%ebx),%eax
	movl %edx,376(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+500,%eax
	pushl %eax
	pushl $MM_BldQuake+5788
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $48,4(%ebx)
	ja .L1284
	pushl $50898
	call _m3_fault
	.align 16
.L1284:
	movl (%ebx),%eax
	movl %ecx,384(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+508,%eax
	pushl %eax
	pushl $MM_BldQuake+5820
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $49,4(%ebx)
	ja .L1286
	pushl $50930
	call _m3_fault
	.align 16
.L1286:
	movl (%ebx),%eax
	movl %edx,392(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+516,%eax
	pushl %eax
	pushl $MM_BldQuake+5856
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1287
	pushl $50964
	call _m3_fault
	.align 16
.L1287:
	cmpl $50,4(%ebx)
	ja .L1288
	pushl $50962
	call _m3_fault
	.align 16
.L1288:
	movl (%ebx),%eax
	movl %ecx,400(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+524,%eax
	pushl %eax
	pushl $MM_BldQuake+5880
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $51,4(%ebx)
	ja .L1290
	pushl $50978
	call _m3_fault
	.align 16
.L1290:
	movl (%ebx),%eax
	movl %edx,408(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+360,%eax
	pushl %eax
	pushl $MM_BldQuake+5904
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $52,4(%ebx)
	ja .L1292
	pushl $50994
	call _m3_fault
	.align 16
.L1292:
	movl (%ebx),%eax
	movl %ecx,416(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+476,%eax
	pushl %eax
	pushl $MM_BldQuake+5928
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $53,4(%ebx)
	ja .L1294
	pushl $51010
	call _m3_fault
	.align 16
.L1294:
	movl (%ebx),%eax
	movl %edx,424(%eax)
	pushl $0
	pushl $3
	movl MM_BldQuake+488,%eax
	pushl %eax
	pushl $MM_BldQuake+5960
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $54,4(%ebx)
	ja .L1296
	pushl $51042
	call _m3_fault
	.align 16
.L1296:
	movl (%ebx),%eax
	movl %ecx,432(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+760,%eax
	pushl %eax
	pushl $MM_BldQuake+5992
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $55,4(%ebx)
	ja .L1298
	pushl $51074
	call _m3_fault
	.align 16
.L1298:
	movl (%ebx),%eax
	movl %edx,440(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+764,%eax
	pushl %eax
	pushl $MM_BldQuake+6020
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $56,4(%ebx)
	ja .L1300
	pushl $51090
	call _m3_fault
	.align 16
.L1300:
	movl (%ebx),%eax
	movl %ecx,448(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+768,%eax
	pushl %eax
	pushl $MM_BldQuake+6056
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $57,4(%ebx)
	ja .L1302
	pushl $51122
	call _m3_fault
	.align 16
.L1302:
	movl (%ebx),%eax
	movl %edx,456(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+772,%eax
	pushl %eax
	pushl $MM_BldQuake+6096
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $58,4(%ebx)
	ja .L1304
	pushl $51170
	call _m3_fault
	.align 16
.L1304:
	movl (%ebx),%eax
	movl %ecx,464(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+776,%eax
	pushl %eax
	pushl $MM_BldQuake+6128
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $59,4(%ebx)
	ja .L1306
	pushl $51186
	call _m3_fault
	.align 16
.L1306:
	movl (%ebx),%eax
	movl %edx,472(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+780,%eax
	pushl %eax
	pushl $MM_BldQuake+6168
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1307
	pushl $51220
	call _m3_fault
	.align 16
.L1307:
	cmpl $60,4(%ebx)
	ja .L1308
	pushl $51218
	call _m3_fault
	.align 16
.L1308:
	movl (%ebx),%eax
	movl %ecx,480(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+788,%eax
	pushl %eax
	pushl $MM_BldQuake+6212
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $61,4(%ebx)
	ja .L1310
	pushl $51250
	call _m3_fault
	.align 16
.L1310:
	movl (%ebx),%eax
	movl %edx,488(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+792,%eax
	pushl %eax
	pushl $MM_BldQuake+6240
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $62,4(%ebx)
	ja .L1312
	pushl $51266
	call _m3_fault
	.align 16
.L1312:
	movl (%ebx),%eax
	movl %ecx,496(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+808,%eax
	pushl %eax
	pushl $MM_BldQuake+6264
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $63,4(%ebx)
	ja .L1314
	pushl $51282
	call _m3_fault
	.align 16
.L1314:
	movl (%ebx),%eax
	movl %edx,504(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+816,%eax
	pushl %eax
	pushl $MM_BldQuake+6284
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $64,4(%ebx)
	ja .L1316
	pushl $51298
	call _m3_fault
	.align 16
.L1316:
	movl (%ebx),%eax
	movl %ecx,512(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+920,%eax
	pushl %eax
	pushl $MM_BldQuake+6308
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $65,4(%ebx)
	ja .L1318
	pushl $51314
	call _m3_fault
	.align 16
.L1318:
	movl (%ebx),%eax
	movl %edx,520(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+924,%eax
	pushl %eax
	pushl $MM_BldQuake+6332
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $66,4(%ebx)
	ja .L1320
	pushl $51330
	call _m3_fault
	.align 16
.L1320:
	movl (%ebx),%eax
	movl %ecx,528(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+932,%eax
	pushl %eax
	pushl $MM_BldQuake+6356
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $67,4(%ebx)
	ja .L1322
	pushl $51346
	call _m3_fault
	.align 16
.L1322:
	movl (%ebx),%eax
	movl %edx,536(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+936,%eax
	pushl %eax
	pushl $MM_BldQuake+6380
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $68,4(%ebx)
	ja .L1324
	pushl $51362
	call _m3_fault
	.align 16
.L1324:
	movl (%ebx),%eax
	movl %ecx,544(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+944,%eax
	pushl %eax
	pushl $MM_BldQuake+6404
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $69,4(%ebx)
	ja .L1326
	pushl $51378
	call _m3_fault
	.align 16
.L1326:
	movl (%ebx),%eax
	movl %edx,552(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+948,%eax
	pushl %eax
	pushl $MM_BldQuake+6428
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1327
	pushl $51396
	call _m3_fault
	.align 16
.L1327:
	cmpl $70,4(%ebx)
	ja .L1328
	pushl $51394
	call _m3_fault
	.align 16
.L1328:
	movl (%ebx),%eax
	movl %ecx,560(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+956,%eax
	pushl %eax
	pushl $MM_BldQuake+6456
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $71,4(%ebx)
	ja .L1330
	pushl $51410
	call _m3_fault
	.align 16
.L1330:
	movl (%ebx),%eax
	movl %edx,568(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+960,%eax
	pushl %eax
	pushl $MM_BldQuake+6480
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $72,4(%ebx)
	ja .L1332
	pushl $51426
	call _m3_fault
	.align 16
.L1332:
	movl (%ebx),%eax
	movl %ecx,576(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+968,%eax
	pushl %eax
	pushl $MM_BldQuake+6504
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $73,4(%ebx)
	ja .L1334
	pushl $51442
	call _m3_fault
	.align 16
.L1334:
	movl (%ebx),%eax
	movl %edx,584(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+972,%eax
	pushl %eax
	pushl $MM_BldQuake+6528
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $74,4(%ebx)
	ja .L1336
	pushl $51458
	call _m3_fault
	.align 16
.L1336:
	movl (%ebx),%eax
	movl %ecx,592(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+980,%eax
	pushl %eax
	pushl $MM_BldQuake+6552
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $75,4(%ebx)
	ja .L1338
	pushl $51474
	call _m3_fault
	.align 16
.L1338:
	movl (%ebx),%eax
	movl %edx,600(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+824,%eax
	pushl %eax
	pushl $MM_BldQuake+6576
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $76,4(%ebx)
	ja .L1340
	pushl $51490
	call _m3_fault
	.align 16
.L1340:
	movl (%ebx),%eax
	movl %ecx,608(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+832,%eax
	pushl %eax
	pushl $MM_BldQuake+6596
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $77,4(%ebx)
	ja .L1342
	pushl $51506
	call _m3_fault
	.align 16
.L1342:
	movl (%ebx),%eax
	movl %edx,616(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+836,%eax
	pushl %eax
	pushl $MM_BldQuake+6616
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $78,4(%ebx)
	ja .L1344
	pushl $51522
	call _m3_fault
	.align 16
.L1344:
	movl (%ebx),%eax
	movl %ecx,624(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+840,%eax
	pushl %eax
	pushl $MM_BldQuake+6640
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $79,4(%ebx)
	ja .L1346
	pushl $51538
	call _m3_fault
	.align 16
.L1346:
	movl (%ebx),%eax
	movl %edx,632(%eax)
	pushl $0
	pushl $3
	movl MM_BldQuake+848,%eax
	pushl %eax
	pushl $MM_BldQuake+6672
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1347
	pushl $51556
	call _m3_fault
	.align 16
.L1347:
	cmpl $80,4(%ebx)
	ja .L1348
	pushl $51554
	call _m3_fault
	.align 16
.L1348:
	movl (%ebx),%eax
	movl %ecx,640(%eax)
	pushl $0
	pushl $3
	movl MM_BldQuake+852,%eax
	pushl %eax
	pushl $MM_BldQuake+6692
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $81,4(%ebx)
	ja .L1350
	pushl $51570
	call _m3_fault
	.align 16
.L1350:
	movl (%ebx),%eax
	movl %edx,648(%eax)
	pushl $0
	pushl $3
	movl MM_BldQuake+856,%eax
	pushl %eax
	pushl $MM_BldQuake+6720
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $82,4(%ebx)
	ja .L1352
	pushl $51586
	call _m3_fault
	.align 16
.L1352:
	movl (%ebx),%eax
	movl %ecx,656(%eax)
	pushl $0
	pushl $3
	movl MM_BldQuake+860,%eax
	pushl %eax
	pushl $MM_BldQuake+6748
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $83,4(%ebx)
	ja .L1354
	pushl $51602
	call _m3_fault
	.align 16
.L1354:
	movl (%ebx),%eax
	movl %edx,664(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+692,%eax
	pushl %eax
	pushl $MM_BldQuake+6784
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $84,4(%ebx)
	ja .L1356
	pushl $51634
	call _m3_fault
	.align 16
.L1356:
	movl (%ebx),%eax
	movl %ecx,672(%eax)
	pushl $0
	pushl $3
	movl MM_BldQuake+700,%eax
	pushl %eax
	pushl $MM_BldQuake+6812
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $85,4(%ebx)
	ja .L1358
	pushl $51650
	call _m3_fault
	.align 16
.L1358:
	movl (%ebx),%eax
	movl %edx,680(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+864,%eax
	pushl %eax
	pushl $MM_BldQuake+6840
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $86,4(%ebx)
	ja .L1360
	pushl $51666
	call _m3_fault
	.align 16
.L1360:
	movl (%ebx),%eax
	movl %ecx,688(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+868,%eax
	pushl %eax
	pushl $MM_BldQuake+6860
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $87,4(%ebx)
	ja .L1362
	pushl $51682
	call _m3_fault
	.align 16
.L1362:
	movl (%ebx),%eax
	movl %edx,696(%eax)
	pushl $0
	pushl $0
	movl MM_BldQuake+872,%eax
	pushl %eax
	pushl $MM_BldQuake+6888
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $88,4(%ebx)
	ja .L1364
	pushl $51698
	call _m3_fault
	.align 16
.L1364:
	movl (%ebx),%eax
	movl %ecx,704(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+876,%eax
	pushl %eax
	pushl $MM_BldQuake+6912
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $89,4(%ebx)
	ja .L1366
	pushl $51714
	call _m3_fault
	.align 16
.L1366:
	movl (%ebx),%eax
	movl %edx,712(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+880,%eax
	pushl %eax
	pushl $MM_BldQuake+6936
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1367
	pushl $51732
	call _m3_fault
	.align 16
.L1367:
	cmpl $90,4(%ebx)
	ja .L1368
	pushl $51730
	call _m3_fault
	.align 16
.L1368:
	movl (%ebx),%eax
	movl %ecx,720(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+656,%eax
	pushl %eax
	pushl $MM_BldQuake+6960
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $91,4(%ebx)
	ja .L1370
	pushl $51746
	call _m3_fault
	.align 16
.L1370:
	movl (%ebx),%eax
	movl %edx,728(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+660,%eax
	pushl %eax
	pushl $MM_BldQuake+6980
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $92,4(%ebx)
	ja .L1372
	pushl $51762
	call _m3_fault
	.align 16
.L1372:
	movl (%ebx),%eax
	movl %ecx,736(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+668,%eax
	pushl %eax
	pushl $MM_BldQuake+7000
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $93,4(%ebx)
	ja .L1374
	pushl $51778
	call _m3_fault
	.align 16
.L1374:
	movl (%ebx),%eax
	movl %edx,744(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+672,%eax
	pushl %eax
	pushl $MM_BldQuake+7024
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $94,4(%ebx)
	ja .L1376
	pushl $51794
	call _m3_fault
	.align 16
.L1376:
	movl (%ebx),%eax
	movl %ecx,752(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+724,%eax
	pushl %eax
	pushl $MM_BldQuake+7048
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $95,4(%ebx)
	ja .L1378
	pushl $51810
	call _m3_fault
	.align 16
.L1378:
	movl (%ebx),%eax
	movl %edx,760(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+728,%eax
	pushl %eax
	pushl $MM_BldQuake+7072
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $96,4(%ebx)
	ja .L1380
	pushl $51826
	call _m3_fault
	.align 16
.L1380:
	movl (%ebx),%eax
	movl %ecx,768(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+1024,%eax
	pushl %eax
	pushl $MM_BldQuake+7104
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $97,4(%ebx)
	ja .L1382
	pushl $51842
	call _m3_fault
	.align 16
.L1382:
	movl (%ebx),%eax
	movl %edx,776(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+1028,%eax
	pushl %eax
	pushl $MM_BldQuake+7128
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $98,4(%ebx)
	ja .L1384
	pushl $51858
	call _m3_fault
	.align 16
.L1384:
	movl (%ebx),%eax
	movl %ecx,784(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+1032,%eax
	pushl %eax
	pushl $MM_BldQuake+7152
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $99,4(%ebx)
	ja .L1386
	pushl $51874
	call _m3_fault
	.align 16
.L1386:
	movl (%ebx),%eax
	movl %edx,792(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+1036,%eax
	pushl %eax
	pushl $MM_BldQuake+7180
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1387
	pushl $51892
	call _m3_fault
	.align 16
.L1387:
	cmpl $100,4(%ebx)
	ja .L1388
	pushl $51890
	call _m3_fault
	.align 16
.L1388:
	movl (%ebx),%eax
	movl %ecx,800(%eax)
	pushl $1
	pushl $-1
	movl MM_BldQuake+988,%eax
	pushl %eax
	pushl $MM_BldQuake+7204
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $101,4(%ebx)
	ja .L1390
	pushl $51906
	call _m3_fault
	.align 16
.L1390:
	movl (%ebx),%eax
	movl %edx,808(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+384,%eax
	pushl %eax
	pushl $MM_BldQuake+7228
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $102,4(%ebx)
	ja .L1392
	pushl $51922
	call _m3_fault
	.align 16
.L1392:
	movl (%ebx),%eax
	movl %ecx,816(%eax)
	pushl $0
	pushl $2
	movl MM_BldQuake+908,%eax
	pushl %eax
	pushl $MM_BldQuake+7252
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $103,4(%ebx)
	ja .L1394
	pushl $51938
	call _m3_fault
	.align 16
.L1394:
	movl (%ebx),%eax
	movl %edx,824(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+1020,%eax
	pushl %eax
	pushl $MM_BldQuake+7280
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $104,4(%ebx)
	ja .L1396
	pushl $51954
	call _m3_fault
	.align 16
.L1396:
	movl (%ebx),%eax
	movl %ecx,832(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+1020,%eax
	pushl %eax
	pushl $MM_BldQuake+5124
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $105,4(%ebx)
	ja .L1398
	pushl $51970
	call _m3_fault
	.align 16
.L1398:
	movl (%ebx),%eax
	movl %edx,840(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+748,%eax
	pushl %eax
	pushl $MM_BldQuake+7304
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $106,4(%ebx)
	ja .L1400
	pushl $51986
	call _m3_fault
	.align 16
.L1400:
	movl (%ebx),%eax
	movl %ecx,848(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+752,%eax
	pushl %eax
	pushl $MM_BldQuake+7332
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $107,4(%ebx)
	ja .L1402
	pushl $52002
	call _m3_fault
	.align 16
.L1402:
	movl (%ebx),%eax
	movl %edx,856(%eax)
	pushl $1
	pushl $3
	movl MM_BldQuake+992,%eax
	pushl %eax
	pushl $MM_BldQuake+7368
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $108,4(%ebx)
	ja .L1404
	pushl $52034
	call _m3_fault
	.align 16
.L1404:
	movl (%ebx),%eax
	movl %ecx,864(%eax)
	pushl $1
	pushl $1
	movl MM_BldQuake+1000,%eax
	pushl %eax
	pushl $MM_BldQuake+7392
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $109,4(%ebx)
	ja .L1406
	pushl $52050
	call _m3_fault
	.align 16
.L1406:
	movl (%ebx),%eax
	movl %edx,872(%eax)
	pushl $1
	pushl $1
	movl MM_BldQuake+1008,%eax
	pushl %eax
	pushl $MM_BldQuake+7408
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	testl %ebx,%ebx
	jne .L1407
	pushl $52068
	call _m3_fault
	.align 16
.L1407:
	cmpl $110,4(%ebx)
	ja .L1408
	pushl $52066
	call _m3_fault
	.align 16
.L1408:
	movl (%ebx),%eax
	movl %ecx,880(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+800,%eax
	pushl %eax
	pushl $MM_BldQuake+7424
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $111,4(%ebx)
	ja .L1410
	pushl $52082
	call _m3_fault
	.align 16
.L1410:
	movl (%ebx),%eax
	movl %edx,888(%eax)
	pushl $0
	pushl $0
	movl MM_BldQuake+636,%eax
	pushl %eax
	pushl $MM_BldQuake+7456
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $112,4(%ebx)
	ja .L1412
	pushl $52098
	call _m3_fault
	.align 16
.L1412:
	movl (%ebx),%eax
	movl %ecx,896(%eax)
	pushl $0
	pushl $1
	movl MM_BldQuake+648,%eax
	pushl %eax
	pushl $MM_BldQuake+7484
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $113,4(%ebx)
	ja .L1414
	pushl $52114
	call _m3_fault
	.align 16
.L1414:
	movl (%ebx),%eax
	movl %edx,904(%eax)
	pushl $0
	pushl $0
	movl MM_BldQuake+716,%eax
	pushl %eax
	pushl $MM_BldQuake+7512
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $114,4(%ebx)
	ja .L1416
	pushl $52130
	call _m3_fault
	.align 16
.L1416:
	movl (%ebx),%eax
	movl %ecx,912(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+888,%eax
	pushl %eax
	pushl $MM_BldQuake+7540
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $115,4(%ebx)
	ja .L1418
	pushl $52146
	call _m3_fault
	.align 16
.L1418:
	movl (%ebx),%eax
	movl %edx,920(%eax)
	pushl $1
	pushl $2
	movl MM_BldQuake+1016,%eax
	pushl %eax
	pushl $MM_BldQuake+7568
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $116,4(%ebx)
	ja .L1420
	pushl $52162
	call _m3_fault
	.align 16
.L1420:
	movl (%ebx),%eax
	movl %ecx,928(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+708,%eax
	pushl %eax
	pushl $MM_BldQuake+7584
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $117,4(%ebx)
	ja .L1422
	pushl $52178
	call _m3_fault
	.align 16
.L1422:
	movl (%ebx),%eax
	movl %edx,936(%eax)
	pushl $0
	pushl $4
	movl MM_BldQuake+480,%eax
	pushl %eax
	pushl $MM_BldQuake+7616
	call BldQuake__NewProc
	movl %eax,%ecx
	addl $16,%esp
	cmpl $118,4(%ebx)
	ja .L1424
	pushl $52210
	call _m3_fault
	.align 16
.L1424:
	movl (%ebx),%eax
	movl %ecx,944(%eax)
	pushl $0
	pushl $3
	movl MM_BldQuake+492,%eax
	pushl %eax
	pushl $MM_BldQuake+7656
	call BldQuake__NewProc
	movl %eax,%edx
	addl $16,%esp
	cmpl $119,4(%ebx)
	ja .L1426
	pushl $52242
	call _m3_fault
	.align 16
.L1426:
	movl (%ebx),%eax
	leal -20(%ebp),%esp
	movl %edx,952(%eax)
	movl %ebx,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe205:
	.size	 BldQuake__InitProcs,.Lfe205-BldQuake__InitProcs
	.align 16
	.type	 BldQuake__Setup__GetText.5,@function
BldQuake__Setup__GetText.5:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl %ecx,-4(%ebp)
	movl 8(%ebp),%edi
	movl -4(%ebp),%ebx
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	pushl $0
	pushl %edi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -24(%ebx),%eax
	movl (%eax),%edx
	movl (%edx),%eax
	leal -16(%ebp),%esi
	movl 12(%eax),%eax
	movl %esi,-20(%ebp)
	pushl %esi
	pushl %ecx
	pushl %edx
	call *%eax
	addl $20,%esp
	testl %eax,%eax
	jne .L1429
	pushl $MM_BldQuake+1884
	movl 12(%ebp),%esi
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %edi
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+7696
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl -24(%ebx),%eax
	movl (%eax),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl %eax
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $8,%esp
.L1429:
	movl -20(%ebp),%esi
	pushl %esi
	movl -24(%ebx),%eax
	movl (%eax),%eax
	pushl %eax
	movl MI_QVal+56,%eax
	call *%eax
	leal -32(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe206:
	.size	 BldQuake__Setup__GetText.5,.Lfe206-BldQuake__Setup__GetText.5
	.align 16
	.type	 BldQuake__Setup__GetVal.6,@function
BldQuake__Setup__GetVal.6:
	pushl %ebp
	movl %esp,%ebp
	subl $32,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl %ecx,-4(%ebp)
	movl 8(%ebp),%edi
	movl -4(%ebp),%esi
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	pushl $0
	pushl %edi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-32(%ebp)
	movl -24(%esi),%eax
	movl (%eax),%edx
	movl (%edx),%eax
	movl 12(%eax),%ecx
	leal -16(%ebp),%eax
	pushl %eax
	movl -32(%ebp),%ebx
	pushl %ebx
	pushl %edx
	call *%ecx
	addl $20,%esp
	testl %eax,%eax
	jne .L1431
	pushl $MM_BldQuake+1884
	movl 12(%ebp),%ebx
	pushl %ebx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %edi
	movl %eax,%ecx
	pushl %ecx
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+7696
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	movl -24(%esi),%eax
	movl (%eax),%eax
	movl 200(%eax),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl %eax
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
.L1431:
	movl 16(%ebp),%edx
	movl -16(%ebp),%eax
	leal -44(%ebp),%esp
	movl %eax,(%edx)
	movl -12(%ebp),%eax
	movl %eax,4(%edx)
	movl -8(%ebp),%eax
	movl %eax,8(%edx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe207:
	.size	 BldQuake__Setup__GetVal.6,.Lfe207-BldQuake__Setup__GetVal.6
	.align 16
	.type	 BldQuake__Setup,@function
BldQuake__Setup:
	pushl %ebp
	movl %esp,%ebp
	subl $228,%esp
	pushl %edi
	pushl %esi
	leal 8(%ebp),%esi
	pushl %ebx
	movl %esi,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl MM_BldQuake+7720,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%edi
	movl 8(%ebp),%eax
	leal -36(%ebp),%ebx
	movl %edi,180(%eax)
	pushl %ebx
	pushl $MM_BldQuake+7764
	movl %ebp,%ecx
	pushl $MM_BldQuake+7732
	call BldQuake__Setup__GetVal.6
	pushl %ebx
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,-20(%ebp)
	leal -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	movl 180(%edx),%eax
	pushl %eax
	pushl %edx
	call BldQuake__FillNamingConvention
	addl $36,%esp
	movl MM_BldQuake+7720,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl 8(%ebp),%edi
	movl %eax,184(%edi)
	pushl %ebx
	pushl $MM_BldQuake+7836
	movl %ebp,%ecx
	pushl $MM_BldQuake+7796
	call BldQuake__Setup__GetVal.6
	pushl %ebx
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-16(%ebp)
	leal -16(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	movl 184(%edx),%eax
	pushl %eax
	pushl %edx
	call BldQuake__FillNamingConvention
	movl 8(%ebp),%edx
	addl $36,%esp
	movl 184(%edx),%eax
	pushl %eax
	movl 180(%edx),%eax
	pushl %eax
	movl MI_M3Driver+196,%eax
	call *%eax
	movl 8(%ebp),%edi
	addl $8,%esp
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1432
	pushl $52916
	call _m3_fault
	.align 16
.L1432:
	movl 52(%eax),%eax
	movl %eax,220(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1433
	pushl $52932
	call _m3_fault
	.align 16
.L1433:
	movl 12(%eax),%eax
	movl %eax,224(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1434
	pushl $52948
	call _m3_fault
	.align 16
.L1434:
	movl 28(%eax),%eax
	movl %eax,228(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1435
	pushl $52964
	call _m3_fault
	.align 16
.L1435:
	movl 92(%eax),%eax
	movl %eax,232(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1436
	pushl $52980
	call _m3_fault
	.align 16
.L1436:
	movl 56(%eax),%eax
	movl %eax,236(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1437
	pushl $52996
	call _m3_fault
	.align 16
.L1437:
	movl 80(%eax),%eax
	movl %eax,240(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1438
	pushl $53012
	call _m3_fault
	.align 16
.L1438:
	movl 96(%eax),%eax
	movl %eax,200(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1439
	pushl $53028
	call _m3_fault
	.align 16
.L1439:
	movb 100(%eax),%al
	andl $255,%eax
	pushl %eax
	movl MI_Text+72,%eax
	call *%eax
	movl %eax,%edi
	movl 8(%ebp),%eax
	movl %edi,204(%eax)
	pushl $MM_BldQuake+7896
	movl %ebp,%ecx
	pushl $MM_BldQuake+7876
	call BldQuake__Setup__GetText.5
	movl 8(%ebp),%edi
	movl %eax,208(%edi)
	pushl $MM_BldQuake+7936
	movl %ebp,%ecx
	pushl $MM_BldQuake+7916
	call BldQuake__Setup__GetText.5
	movl %eax,%edi
	movl 8(%ebp),%eax
	movl %edi,212(%eax)
	movl 200(%eax),%eax
	pushl %eax
	pushl $MM_BldQuake+2452
	movl MI_RTHooks+76,%eax
	call *%eax
	movl 8(%ebp),%edi
	movl $MM_BldQuake+7976,%esi
	movl %eax,216(%edi)
	pushl %esi
	movl %ebp,%ecx
	pushl $MM_BldQuake+7956
	call BldQuake__Setup__GetText.5
	movl %eax,%edi
	movl 8(%ebp),%eax
	addl $36,%esp
	movl $MM_BldQuake+8028,%ebx
	movl %edi,140(%eax)
	pushl %ebx
	movl %ebp,%ecx
	pushl $MM_BldQuake+8004
	call BldQuake__Setup__GetText.5
	movl 8(%ebp),%edi
	movl %eax,144(%edi)
	pushl %esi
	movl %ebp,%ecx
	pushl $MM_BldQuake+8064
	call BldQuake__Setup__GetText.5
	movl %eax,%edi
	movl 8(%ebp),%eax
	movl %edi,148(%eax)
	pushl %ebx
	movl %ebp,%ecx
	pushl $MM_BldQuake+8084
	call BldQuake__Setup__GetText.5
	movl 8(%ebp),%edi
	movl %eax,152(%edi)
	pushl %esi
	movl %ebp,%ecx
	pushl $MM_BldQuake+8108
	call BldQuake__Setup__GetText.5
	movl %eax,%edi
	movl 8(%ebp),%eax
	addl $32,%esp
	movl %edi,156(%eax)
	pushl %ebx
	movl %ebp,%ecx
	pushl $MM_BldQuake+8128
	call BldQuake__Setup__GetText.5
	movl 8(%ebp),%edi
	movl %eax,160(%edi)
	pushl %ebx
	movl %ebp,%ecx
	pushl $MM_BldQuake+8152
	call BldQuake__Setup__GetText.5
	movl %eax,%edi
	movl 8(%ebp),%eax
	movl %edi,164(%eax)
	pushl %ebx
	movl %ebp,%ecx
	pushl $MM_BldQuake+8176
	call BldQuake__Setup__GetText.5
	movl 8(%ebp),%edi
	movl %eax,168(%edi)
	pushl %ebx
	movl %ebp,%ecx
	pushl $MM_BldQuake+8204
	call BldQuake__Setup__GetText.5
	movl %eax,%edi
	movl 8(%ebp),%eax
	addl $32,%esp
	movl %edi,172(%eax)
	pushl %ebx
	movl %ebp,%ecx
	pushl $MM_BldQuake+8228
	call BldQuake__Setup__GetText.5
	movl 8(%ebp),%edi
	addl $8,%esp
	movl %eax,176(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1440
	pushl $53300
	call _m3_fault
	.align 16
.L1440:
	movl 72(%eax),%eax
	movl %eax,244(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1441
	pushl $53316
	call _m3_fault
	.align 16
.L1441:
	movl 4(%eax),%eax
	movl %eax,248(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1442
	pushl $53332
	call _m3_fault
	.align 16
.L1442:
	movl 8(%eax),%eax
	movl %eax,252(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1443
	pushl $53348
	call _m3_fault
	.align 16
.L1443:
	movl 12(%eax),%eax
	movl %eax,256(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1444
	pushl $53364
	call _m3_fault
	.align 16
.L1444:
	movl 76(%eax),%eax
	movl %eax,260(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1445
	pushl $53380
	call _m3_fault
	.align 16
.L1445:
	movl 20(%eax),%eax
	movl %eax,264(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1446
	pushl $53396
	call _m3_fault
	.align 16
.L1446:
	movl 24(%eax),%eax
	movl %eax,268(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1447
	pushl $53412
	call _m3_fault
	.align 16
.L1447:
	movl 28(%eax),%eax
	movl %eax,272(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1448
	pushl $53428
	call _m3_fault
	.align 16
.L1448:
	movl 48(%eax),%eax
	movl %eax,276(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1449
	pushl $53444
	call _m3_fault
	.align 16
.L1449:
	movl 52(%eax),%eax
	movl %eax,280(%edi)
	movl 8(%ebp),%edi
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1450
	pushl $53460
	call _m3_fault
	.align 16
.L1450:
	movl 52(%eax),%eax
	movl %eax,284(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1451
	pushl $53476
	call _m3_fault
	.align 16
.L1451:
	movl 68(%eax),%eax
	movl %eax,288(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1452
	pushl $53492
	call _m3_fault
	.align 16
.L1452:
	movl (%eax),%eax
	movl %eax,292(%edi)
	movl 180(%edi),%eax
	testl %eax,%eax
	jne .L1453
	pushl $53508
	call _m3_fault
	.align 16
.L1453:
	movl 16(%eax),%eax
	movl %eax,296(%edi)
	xorl %ecx,%ecx
.L1454:
	movl 8(%ebp),%edx
	movl 244(%edx,%ecx,4),%eax
	movl %eax,300(%edx,%ecx,4)
	incl %ecx
	cmpl $3,%ecx
	jle .L1454
	xorl %ecx,%ecx
.L1457:
	leal 6(%ecx),%ebx
	cmpl $9,%ebx
	jbe .L1458
	pushl $53585
	call _m3_fault
	.align 16
.L1458:
	movl 8(%ebp),%edx
	movl 260(%edx,%ecx,4),%eax
	movl %eax,292(%edx,%ebx,4)
	incl %ecx
	cmpl $3,%ecx
	jle .L1457
	pushl $MM_BldQuake+8284
	movl %ebp,%ecx
	pushl $MM_BldQuake+8256
	call BldQuake__Setup__GetText.5
	pushl $MM_BldQuake+8312
	movl %eax,%edi
	pushl %edi
	movl MI_Text+48,%eax
	call *%eax
	addl $16,%esp
	testl %eax,%eax
	je .L1461
	movl 8(%ebp),%edx
	movl MI_BldPosix+44,%eax
	movl %eax,460(%edx)
	movl MI_BldPosix+48,%eax
	movl %eax,464(%edx)
	movl MI_BldPosix+52,%eax
	movl %eax,468(%edx)
	jmp .L1462
	.align 16
.L1461:
	pushl $MM_BldQuake+8332
	pushl %edi
	movl MI_Text+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L1463
	movl 8(%ebp),%edx
	movl MI_BldWin32+44,%eax
	movl %eax,460(%edx)
	movl MI_BldWin32+48,%eax
	movl %eax,464(%edx)
	movl MI_BldWin32+52,%eax
	movl %eax,468(%edx)
	jmp .L1462
	.align 16
.L1463:
	pushl %edi
	pushl $MM_BldQuake+8352
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edi
	pushl %edi
	call BldQuake__Err
	addl $12,%esp
.L1462:
	movb $2,-12(%ebp)
	pushl $0
	pushl $MM_BldQuake+1208
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl %ecx,-8(%ebp)
	pushl $0
	pushl $MM_BldQuake+8384
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%edx
	movl %eax,%ecx
	movl (%edx),%eax
	movl 16(%eax),%edi
	pushl $0
	leal -12(%ebp),%esi
	pushl %esi
	pushl %ecx
	pushl %edx
	call *%edi
	addl $32,%esp
	pushl $0
	movl $MM_BldQuake+8404,%ebx
	pushl %ebx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl %ecx,-8(%ebp)
	pushl $0
	pushl %ebx
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%edx
	movl %eax,%ecx
	movl (%edx),%eax
	movl 16(%eax),%edi
	pushl $0
	pushl %esi
	pushl %ecx
	pushl %edx
	call *%edi
	movl MI_QValue+356,%eax
	addl $32,%esp
	movl %eax,-8(%ebp)
	pushl $0
	pushl $MM_BldQuake+8424
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%edx
	movl %eax,%ecx
	movl (%edx),%eax
	movl 16(%eax),%edi
	pushl $0
	pushl %esi
	pushl %ecx
	pushl %edx
	call *%edi
	movl MI_QValue+360,%eax
	movl %eax,-8(%ebp)
	pushl $0
	pushl $MM_BldQuake+8448
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%edx
	movl %eax,%ecx
	movl (%edx),%eax
	addl $32,%esp
	movl 16(%eax),%edi
	pushl $0
	pushl %esi
	pushl %ecx
	pushl %edx
	call *%edi
	movl 8(%ebp),%edx
	movl (%edx),%eax
	movl 12(%eax),%edi
	pushl %esi
	movl MM_BldQuake+48,%eax
	pushl %eax
	pushl %edx
	call *%edi
	addl $28,%esp
	testl %eax,%eax
	je .L1464
	movl 8(%ebp),%eax
	movb $1,489(%eax)
.L1464:
	movl 8(%ebp),%eax
	cmpb $0,489(%eax)
	je .L1465
	pushl $MM_BldQuake+3032
	pushl %eax
	movl MI_BldHooks+44,%eax
	call *%eax
	pushl $MM_BldQuake+3532
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_BldHooks+44,%eax
	call *%eax
	addl $16,%esp
.L1466:
	movl $MM_BldQuake+2036,-208(%ebp)
	movl $0,-212(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-216(%ebp)
	leal -216(%ebp),%esi
	movl %esi,RTThread__handlerStack
	leal -196(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,%ebx
	addl $4,%esp
	testl %ebx,%ebx
	jne .L1467
	pushl $1
	pushl $MM_BldQuake+3032
	movl MI_Utils+44,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-228(%ebp)
	pushl %ebx
	pushl $MM_BldQuake+2984
	movl MI_M3ID+44,%eax
	call *%eax
	movl 8(%ebp),%edx
	movl %eax,%ecx
	movl (%edx),%eax
	leal -12(%ebp),%ebx
	movl 12(%eax),%edi
	pushl %ebx
	pushl %ecx
	pushl %edx
	call *%edi
	addl $28,%esp
	testl %eax,%eax
	je .L1468
	pushl %ebx
	movl 8(%ebp),%eax
	pushl %eax
	movl MI_QVal+48,%eax
	call *%eax
	addl $8,%esp
	testl %eax,%eax
	je .L1468
	movl 8(%ebp),%eax
	movl 208(%eax),%eax
	jmp .L1472
	.align 16
.L1468:
	movl 8(%ebp),%eax
	movl 200(%eax),%eax
.L1472:
	pushl %eax
	movl -228(%ebp),%esi
	pushl %esi
	movl MI_Wr+68,%eax
	call *%eax
	addl $8,%esp
	movl -216(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L1465
	.align 16
.L1467:
	pushl $MM_BldQuake+3032
	call BldQuake__FErr
	addl $4,%esp
.L1465:
	movl 8(%ebp),%edi
	leal 288(%edi),%esi
	movl %esi,-224(%ebp)
	movl $1,-220(%ebp)
	leal -224(%ebp),%ebx
	pushl %ebx
	pushl $MM_BldQuake+3032
	pushl %edi
	call BldQuake__Deriveds
	movl 8(%ebp),%edi
	leal 288(%edi),%esi
	movl %esi,-224(%ebp)
	movl $1,-220(%ebp)
	pushl %ebx
	pushl $MM_BldQuake+3532
	pushl %edi
	call BldQuake__Deriveds
	leal -240(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe208:
	.size	 BldQuake__Setup,.Lfe208-BldQuake__Setup
	.align 16
	.type	 BldQuake__FillNamingConvention,@function
BldQuake__FillNamingConvention:
	pushl %ebp
	movl %esp,%ebp
	subl $36,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%ecx
	movl (%ecx),%ecx
	movl %ecx,-36(%ebp)
	movl (%ecx),%eax
	movl 32(%eax),%esi
	pushl %ecx
	call *%esi
	addl $4,%esp
	cmpl $29,%eax
	jg .L1474
	movl 8(%ebp),%ecx
	movl 200(%ecx),%eax
	pushl %eax
	pushl $MM_BldQuake+8468
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl %esi
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $16,%esp
.L1474:
	xorl %ebx,%ebx
.L1475:
	movl 16(%ebp),%ecx
	movl (%ecx),%esi
	movb %bl,%dl
	movl (%esi),%eax
	movl %edx,%edi
	andl $255,%edi
	movl 44(%eax),%eax
	movl %eax,-36(%ebp)
	leal -12(%ebp),%ecx
	movl %ecx,-28(%ebp)
	pushl %ecx
	pushl %edi
	pushl %esi
	movl -36(%ebp),%ecx
	call *%ecx
	movl -28(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	addl $20,%esp
	cmpl $0,12(%ebp)
	jne .L1477
	pushl $54580
	call _m3_fault
	.align 16
.L1477:
	movl 12(%ebp),%ecx
	incl %ebx
	movl %eax,(%ecx,%edi,4)
	cmpl $21,%ebx
	jle .L1475
	movl 16(%ebp),%ecx
	movl (%ecx),%esi
	movl (%esi),%eax
	leal -24(%ebp),%ecx
	movl 44(%eax),%edi
	movl %ecx,-32(%ebp)
	pushl %ecx
	pushl $22
	pushl %esi
	call *%edi
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl 12(%ebp),%ecx
	movl %eax,%esi
	movl %esi,88(%ecx)
	movl 16(%ebp),%ecx
	movl (%ecx),%edx
	addl $20,%esp
	movl (%edx),%eax
	movl -32(%ebp),%ecx
	movl 44(%eax),%esi
	pushl %ecx
	pushl $23
	pushl %edx
	call *%esi
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl 12(%ebp),%ecx
	movl %eax,%edi
	movl %edi,92(%ecx)
	movl 16(%ebp),%ecx
	movl (%ecx),%esi
	addl $20,%esp
	movl (%esi),%eax
	movl -32(%ebp),%ecx
	movl 44(%eax),%edi
	pushl %ecx
	pushl $24
	pushl %esi
	call *%edi
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl $0
	movl %eax,%esi
	pushl %esi
	movl MI_Text+52,%eax
	call *%eax
	movl 12(%ebp),%ecx
	movb %al,100(%ecx)
	movl 16(%ebp),%ecx
	movl (%ecx),%esi
	addl $28,%esp
	movl (%esi),%eax
	movl -32(%ebp),%ecx
	movl 44(%eax),%edi
	pushl %ecx
	pushl $25
	pushl %esi
	call *%edi
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl 12(%ebp),%ecx
	movl %eax,%esi
	movl %esi,96(%ecx)
	movl 16(%ebp),%ecx
	movl (%ecx),%edx
	addl $20,%esp
	movl (%edx),%eax
	movl -32(%ebp),%ecx
	movl 44(%eax),%esi
	pushl %ecx
	pushl $26
	pushl %edx
	call *%esi
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl $0
	movl %eax,%edi
	pushl %edi
	movl MI_Text+52,%eax
	call *%eax
	movl 12(%ebp),%ecx
	movb %al,102(%ecx)
	movl 16(%ebp),%ecx
	movl (%ecx),%edi
	addl $28,%esp
	movl (%edi),%eax
	movl -32(%ebp),%ecx
	movl 44(%eax),%esi
	pushl %ecx
	pushl $27
	pushl %edi
	call *%esi
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	pushl $0
	movl %eax,%edx
	pushl %edx
	movl MI_Text+52,%eax
	call *%eax
	movl 12(%ebp),%ecx
	movb %al,101(%ecx)
	movl 16(%ebp),%ecx
	movl (%ecx),%edx
	addl $28,%esp
	movl (%edx),%eax
	movl -32(%ebp),%ecx
	movl 44(%eax),%esi
	pushl %ecx
	pushl $28
	pushl %edx
	call *%esi
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl 12(%ebp),%ecx
	movb %al,103(%ecx)
	movl 16(%ebp),%ecx
	movl (%ecx),%esi
	addl $20,%esp
	movl (%esi),%eax
	movl -32(%ebp),%ecx
	movl 44(%eax),%edx
	pushl %ecx
	pushl $29
	pushl %esi
	call *%edx
	movl -32(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movl 12(%ebp),%ecx
	leal -48(%ebp),%esp
	movb %al,104(%ecx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe209:
	.size	 BldQuake__FillNamingConvention,.Lfe209-BldQuake__FillNamingConvention
	.align 16
	.type	 BldQuake__GetSL,@function
BldQuake__GetSL:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 204(%eax),%eax
	ret
.Lfe210:
	.size	 BldQuake__GetSL,.Lfe210-BldQuake__GetSL
	.align 16
	.type	 BldQuake__Err,@function
BldQuake__Err:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	pushl %eax
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe211:
	.size	 BldQuake__Err,.Lfe211-BldQuake__Err
	.align 16
	.type	 BldQuake__CErr,@function
BldQuake__CErr:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	pushl %eax
	pushl $MM_BldQuake+8524
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+8560
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe212:
	.size	 BldQuake__CErr,.Lfe212-BldQuake__CErr
	.align 16
	.type	 BldQuake__FErr,@function
BldQuake__FErr:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	pushl %eax
	pushl $MM_BldQuake+8576
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_BldQuake+8560
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl $MI_Quake+44
	movl MI_RTHooks+52,%eax
	call *%eax
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe213:
	.size	 BldQuake__FErr,.Lfe213-BldQuake__FErr
	.align 16
	.type	 _INITM_BldQuake,@function
_INITM_BldQuake:
	pushl %ebp
	movl %esp,%ebp
	pushl $0
	pushl $MM_BldQuake+1524
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,MM_BldQuake+44
	pushl $0
	pushl $MM_BldQuake+8604
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,MM_BldQuake+48
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe214:
	.size	 _INITM_BldQuake,.Lfe214-_INITM_BldQuake
	.align 16
	.type	 M_BldQuake_t8cf18cfc_LINK,@function
M_BldQuake_t8cf18cfc_LINK:
	pushl %ebp
	movl %esp,%ebp
	movl MM_BldQuake+14208,%eax
	movl %ebp,%esp
	movl 52(%eax),%edx
	movl MM_BldQuake+156,%eax
	movl %eax,48(%edx)
	movl MM_BldQuake+1164,%eax
	movl %eax,52(%edx)
	movl MM_BldQuake+1172,%eax
	movl %eax,56(%edx)
	popl %ebp
	ret
.Lfe215:
	.size	 M_BldQuake_t8cf18cfc_LINK,.Lfe215-M_BldQuake_t8cf18cfc_LINK
	.align 16
	.type	 _m3_fault,@function
_m3_fault:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	pushl %eax
	pushl $MM_BldQuake
	movl MI_RTHooks+108,%eax
	call *%eax
	.align 16
.Lfe216:
	.size	 _m3_fault,.Lfe216-_m3_fault
.globl MM_BldQuake
.data
	.align 4
	.type	 MM_BldQuake,@object
	.size	 MM_BldQuake,14240
MM_BldQuake:
	.long MM_BldQuake+13989
	.long MM_BldQuake+52
	.long MM_BldQuake+1232
	.long MM_BldQuake+1220
	.zero	4
	.long MM_BldQuake+11412
	.zero	4
	.long MM_BldQuake+13984
	.long MM_BldQuake+13984
	.zero	4
	.long _INITM_BldQuake
	.zero	16
	.long -1930326788
.byte 24
.byte 17
.byte 151
.byte 135
.byte 228
.byte 157
.byte 102
.byte 11
	.long 1
	.zero	4
	.long 0
	.long 1
	.zero	4
	.long 0
	.zero	20
	.long MM_BldQuake+14203
	.zero	4
	.long M_BldQuake_t8cf18cfc_LINK
	.long 1103850216
	.zero	12
	.long MM_BldQuake+14216
	.long MM_BldQuake+14227
	.long MM_BldQuake+532
	.long BldQuake__Init
	.long BldQuake__DoPkg
	.long BldQuake__Pkg
	.long BldQuake__DoM3include
	.long BldQuake__M3include
	.long BldQuake__DoLocation
	.long BldQuake__Location
	.long BldQuake__DoLocPkg
	.long BldQuake__LocPkg
	.long BldQuake__DoLocSubdir
	.long BldQuake__LocSubdir
	.long BldQuake__DoPathOf
	.long BldQuake__PathOf
	.long BldQuake__DoNormalize
	.long BldQuake__Normalize
	.long BldQuake__DoPkgSubdir
	.long BldQuake__PkgSubdir
	.long BldQuake__DoProgramName
	.long BldQuake__ProgramName
	.long BldQuake__DoLibraryName
	.long BldQuake__LibraryName
	.long BldQuake__Do_ImportTemplate
	.long BldQuake__U_ImportTemplate
	.long BldQuake__Do_ImportM3Lib
	.long BldQuake__U_ImportM3Lib
	.long BldQuake__Do_ImportOtherLib
	.long BldQuake__U_ImportOtherLib
	.long BldQuake__Do_MapAddInterface
	.long BldQuake__U_MapAddInterface
	.long BldQuake__Do_MapAddGenericInterface
	.long BldQuake__U_MapAddGenericInterface
	.long BldQuake__Do_MapAddModule
	.long BldQuake__U_MapAddModule
	.long BldQuake__Do_MapAddGenericModule
	.long BldQuake__U_MapAddGenericModule
	.long BldQuake__Do_MapAddC
	.long BldQuake__U_MapAddC
	.long BldQuake__Do_MapAddH
	.long BldQuake__U_MapAddH
	.long BldQuake__Do_MapAddS
	.long BldQuake__U_MapAddS
	.long BldQuake__DoIncludeDir
	.long BldQuake__IncludeDir
	.long BldQuake__DoIncludePkg
	.long BldQuake__IncludePkg
	.long BldQuake__DoImportObj
	.long BldQuake__ImportObj
	.long BldQuake__DoImport
	.long BldQuake__Import
	.long BldQuake__DoImportVersion
	.long BldQuake__ImportVersion
	.long BldQuake__DoImportLib
	.long BldQuake__ImportLib
	.long BldQuake__DoPgmObject
	.long BldQuake__PgmObject
	.long BldQuake__DoDeriveds
	.long BldQuake__Deriveds
	.long BldQuake__DoPgmSource
	.long BldQuake__DoInterface
	.long BldQuake__DoINTERFACE
	.long BldQuake__Interface
	.long BldQuake__Implementation
	.long BldQuake__DoImplementation
	.long BldQuake__DoModule
	.long BldQuake__DoMODULE
	.long BldQuake__HSource
	.long BldQuake__DoHSource
	.long BldQuake__CSource
	.long BldQuake__DoCSource
	.long BldQuake__SSource
	.long BldQuake__DoSSource
	.long BldQuake__GenericIntf
	.long BldQuake__GenericImpl
	.long BldQuake__DoGenericInterface
	.long BldQuake__DoGENERIC_INTERFACE
	.long BldQuake__DoGenericImplementation
	.long BldQuake__DoGENERIC_IMPLEMENTATION
	.long BldQuake__DoGenericModule
	.long BldQuake__DoGENERIC_MODULE
	.long BldQuake__BuildGenericIntf
	.long BldQuake__DoBuildGenericIntf
	.long BldQuake__DoBuildGenericUnsafeIntf
	.long BldQuake__BuildGenericImpl
	.long BldQuake__DoBuildGenericImpl
	.long BldQuake__DoBuildGenericUnsafeImpl
	.long BldQuake__DerivedInterface
	.long BldQuake__DoDerivedInterface
	.long BldQuake__DerivedImplementation
	.long BldQuake__DoDerivedImplementation
	.long BldQuake__DerivedC
	.long BldQuake__DoDerivedC
	.long BldQuake__DerivedH
	.long BldQuake__DoDerivedH
	.long BldQuake__GenerateTFile
	.zero	8
	.long -115152659
.byte 33
.byte 115
.byte 108
.byte 254
.byte 204
.byte 155
.byte 78
.byte 7
	.long 1
	.zero	4
	.long 8
	.long 4
	.zero	20
	.long MM_BldQuake+14156
	.long MM_BldQuake+14159
	.long MM_BldQuake+14162
	.zero	28
	.long MM_BldQuake+14175
	.long MM_BldQuake+1056
	.long BldQuake__DoGenerateTFile
	.long BldQuake__Visibility
	.long BldQuake__GenM3Exports
	.long BldQuake__DoGenM3Exports
	.long BldQuake__U_Program
	.long BldQuake__DoProgram
	.long BldQuake__DoPROGRAM
	.long BldQuake__CProgram
	.long BldQuake__DoCProgram
	.long BldQuake__DoCPROGRAM
	.long BldQuake__Library
	.long BldQuake__DoLibrary
	.long BldQuake__DoLIBRARY
	.long BldQuake__InstallDerived
	.long BldQuake__DoInstallDerived
	.long BldQuake__InstallLink
	.long BldQuake__DoInstallLink
	.long BldQuake__InstallAliasLink
	.long BldQuake__DoInstallAliasLink
	.long BldQuake__InstallSources
	.long BldQuake__DoInstallSources
	.long BldQuake__U_InstallDir
	.long BldQuake__DoM3Option
	.long BldQuake__DoRemoveM3Option
	.long BldQuake__DoOverride
	.long BldQuake__DoResetCache
	.long BldQuake__M3
	.long BldQuake__DoM3
	.long BldQuake__DoM3FrontOption
	.long BldQuake__DoRemoveM3FrontOption
	.long BldQuake__SetVisibility
	.long BldQuake__DoHideInterface
	.long BldQuake__DoHideGenericInterface
	.long BldQuake__DoHideGenericImplementation
	.long BldQuake__DoExportInterface
	.long BldQuake__DoExportGenericInterface
	.long BldQuake__DoExportGenericImplementation
	.long BldQuake__ResourceNamed
	.long BldQuake__DoResourceNamed
	.long BldQuake__DoResource
	.long BldQuake__DerivedResource
	.long BldQuake__DoDerivedResource
	.long BldQuake__Bundle
	.long BldQuake__DoBundle
	.long BldQuake__Template
	.long BldQuake__DoTemplate
	.long BldQuake__manPage
	.long BldQuake__DomanPage
	.long BldQuake__ManPage
	.long BldQuake__DoManPage
	.long BldQuake__DoGnuemacs
	.long BldQuake__DoCompiledGnuemacs
	.long BldQuake__Noweb
	.long BldQuake__DoNoweb
	.long BldQuake__DonowebInterface
	.long BldQuake__DoNowebInterface
	.long BldQuake__DoNowebImplementation
	.long BldQuake__DoZume
	.long BldQuake__DoRegisterCleanUp
	.long BldQuake__DoRunCleanUps
	.long BldQuake__DoFindUnit
	.long BldQuake__DoEnumUnits
	.long BldQuake__NoteOverrides
	.long BldQuake__DoInstallFile
	.long BldQuake__InstallFile
	.long BldQuake__InstallMan
	.long BldQuake__InstallSrc
	.long MM_BldQuake+1208
	.long BldQuake__DoNoteInstall
	.long BldQuake__NoteInstall
	.long BldQuake__BinExport
	.long BldQuake__DoBinExport
	.long BldQuake__DoBindExport
	.long BldQuake__LibExport
	.long BldQuake__DoLibExport
	.long BldQuake__DoLibdExport
	.long BldQuake__EmacsExport
	.long BldQuake__DoEmacsExport
	.long BldQuake__DoEmacsdExport
	.long BldQuake__DocExport
	.long BldQuake__DoDocExport
	.long BldQuake__DoDocdExport
	.long BldQuake__ManExport
	.long BldQuake__DoManExport
	.long BldQuake__DoMandExport
	.long BldQuake__HtmlExport
	.long BldQuake__DoHtmlExport
	.long BldQuake__BuildOptionList
	.long BldQuake__DoTryExec
	.long BldQuake__DoReplaceChar
	.long BldQuake__ReplaceChar
	.long BldQuake__DoW2P
	.long BldQuake__W2P
	.long BldQuake__DoP2W
	.long BldQuake__P2W
	.long BldQuake__DoInc
	.long BldQuake__DoDummy
	.long BldQuake__DoDeleteFile
	.long BldQuake__DoLinkFile
	.long BldQuake__DoMakeExecutable
	.long BldQuake__DoMakeDir
	.long BldQuake__MakeDir
	.long BldQuake__Stale
	.long BldQuake__Escape
	.long BldQuake__NewProc
	.zero	8
	.long -409265601
.byte 71
.byte 211
.byte 231
.byte 255
.byte 120
.byte 201
.byte 124
.byte 24
	.long 1
	.zero	4
	.long 8
	.long 4
	.zero	8
	.long 1
	.long 8
	.zero	4
	.long MM_BldQuake+14132
	.long MM_BldQuake+14139
	.long MM_BldQuake+14145
	.zero	36
	.long BldQuake__InitProcs
	.long BldQuake__Setup
	.long BldQuake__FillNamingConvention
	.long BldQuake__GetSL
	.long BldQuake__Err
	.long BldQuake__CErr
	.long BldQuake__FErr
	.long BldQuake__CopyIfNew
.byte 5
	.zero	11
	.long 2
	.long MM_BldQuake+1216
	.long 1
	.zero	4
	.long -482055239
	.long -1930326788
	.zero	4
	.long MM_BldQuake+1240
	.long 588878224
	.long MM_BldQuake+1248
	.long -548236165
	.long MM_BldQuake+1256
	.long 1699156251
	.long MM_BldQuake+1264
	.long 1548528532
	.long MM_BldQuake+1272
	.long -209964561
	.long MM_BldQuake+1280
	.long 115997026
	.long MM_BldQuake+1288
	.long -2012935793
	.long MM_BldQuake+1296
	.long -473899160
	.long MM_BldQuake+1512
	.long -482055239
	.long MI_Quake+44
	.zero	4
	.long 2
	.long MM_BldQuake+1324
	.long 22
	.ascii	"error while reading \""
	.zero	3
	.long 2
	.long MM_BldQuake+1360
	.long 2
	.ascii	"\""
	.zero	3
	.long 2
	.long MM_BldQuake+1376
	.long 21
	.ascii	"    from directory \""
	.zero	4
	.long 2
	.long MM_BldQuake+1412
	.long 15
	.ascii	"\" of package \""
	.zero	2
	.long 2
	.long MM_BldQuake+1440
	.long 4
	.ascii	"\" ("
	.zero	1
	.long 2
	.long MM_BldQuake+1456
	.long 2
	.ascii	")"
	.zero	3
	.long MI_Pathname+44
	.zero	4
	.long 2
	.long MM_BldQuake+1480
	.long 29
	.ascii	"Normalize: invalid pathname!"
	.zero	4
	.long MM_BldQuake+1812
	.long 655008973
	.long 2
	.long MM_BldQuake+1532
	.long 16
	.ascii	"-not-a-package!"
	.zero	1
	.long MI_M3Driver+68
	.zero	4
	.long 2
	.long MM_BldQuake+1568
	.long 25
	.ascii	"U_MapAddGenericInterface"
	.zero	4
	.long 2
	.long MM_BldQuake+1608
	.long 22
	.ascii	"U_MapAddGenericModule"
	.zero	3
	.long 2
	.long MM_BldQuake+1644
	.long 23
	.ascii	"M3Driver.AddSourceFile"
	.zero	2
	.long 2
	.long MM_BldQuake+1680
	.long 11
	.ascii	"m3makefile"
	.zero	2
	.long 2
	.long MM_BldQuake+1704
	.long 16
	.ascii	"unable to read "
	.zero	1
	.long 2
	.long MM_BldQuake+1732
	.long 4
	.ascii	"src"
	.zero	1
	.long 2
	.long MM_BldQuake+1748
	.long 37
	.ascii	"cannot import package into itself: \""
	.zero	4
	.long 2
	.long MM_BldQuake+1800
	.long 11
	.ascii	".M3EXPORTS"
	.zero	2
	.long MM_BldQuake+2240
	.long -244065135
	.long 2
	.long MM_BldQuake+1832
	.long 7
	.ascii	"_clean"
	.zero	2
	.long 2
	.long MM_BldQuake+1852
	.long 7
	.ascii	"_quiet"
	.zero	2
	.long 2
	.long MM_BldQuake+1872
	.long 7
	.ascii	"delete"
	.zero	2
	.long 2
	.long MM_BldQuake+1892
	.long 2
	.ascii	" "
	.zero	3
	.long 2
	.long MM_BldQuake+1908
	.long 4
	.ascii	".i3"
	.zero	1
	.long 2
	.long MM_BldQuake+1924
	.long 4
	.ascii	".m3"
	.zero	1
	.long 2
	.long MM_BldQuake+1940
	.long 3
	.ascii	".h"
	.zero	2
	.long 2
	.long MM_BldQuake+1956
	.long 3
	.ascii	".c"
	.zero	2
	.long 2
	.long MM_BldQuake+1972
	.long 3
	.ascii	".s"
	.zero	2
	.long 2
	.long MM_BldQuake+1988
	.long 4
	.ascii	".ig"
	.zero	1
	.long 2
	.long MM_BldQuake+2004
	.long 4
	.ascii	".mg"
	.zero	1
	.long 2
	.long MM_BldQuake+2020
	.long 13
	.ascii	".generic.tmp"
	.zero	4
	.long MI_M3Driver+68
	.long MI_Thread+184
	.long MI_Wr+44
	.zero	4
	.long 2
	.long MM_BldQuake+2064
	.long 25
	.ascii	"(*generated by m3build*)"
	.zero	4
	.long 2
	.long MM_BldQuake+2104
	.long 8
	.ascii	"UNSAFE "
	.zero	1
	.long 2
	.long MM_BldQuake+2124
	.long 11
	.ascii	"INTERFACE "
	.zero	2
	.long 2
	.long MM_BldQuake+2148
	.long 4
	.ascii	" = "
	.zero	1
	.long 2
	.long MM_BldQuake+2164
	.long 3
	.ascii	" ("
	.zero	2
	.long 2
	.long MM_BldQuake+2180
	.long 3
	.ascii	", "
	.zero	2
	.long 2
	.long MM_BldQuake+2196
	.long 7
	.ascii	") END "
	.zero	2
	.long 2
	.long MM_BldQuake+2216
	.long 2
	.ascii	"."
	.zero	3
	.long 2
	.long MM_BldQuake+2232
	.long 8
	.ascii	"MODULE "
	.zero	1
	.long MM_BldQuake+3456
	.long -115152659
	.long 2
	.long MM_BldQuake+2260
	.long 10
	.ascii	".M3IMPTAB"
	.zero	3
	.long 2
	.long MM_BldQuake+2284
	.long 2
	.ascii	"@"
	.zero	3
	.long 2
	.long MM_BldQuake+2300
	.long 15
	.ascii	"Unit.PushTable"
	.zero	2
	.long 2
	.long MM_BldQuake+2328
	.long 12
	.ascii	"-T"
	.ascii	".M3IMPTAB"
	.zero	1
	.long 2
	.long MM_BldQuake+2352
	.long 16
	.ascii	"M3SEARCH_TABLES"
	.zero	1
	.long 2
	.long MM_BldQuake+2380
	.long 7
	.ascii	"hidden"
	.zero	2
	.long 2
	.long MM_BldQuake+2400
	.long 10
	.ascii	"_map_add_"
	.zero	3
	.long 2
	.long MM_BldQuake+2424
	.long 3
	.ascii	"(\""
	.zero	2
	.long 2
	.long MM_BldQuake+2440
	.long 5
	.ascii	"\", \""
	.zero	4
	.long 2
	.long MM_BldQuake+2460
	.long 3
	.ascii	"\")"
	.zero	2
	.long 2
	.long MM_BldQuake+2476
	.long 14
	.ascii	"% exports of "
	.zero	3
	.long 2
	.long MM_BldQuake+2504
	.long 14
	.ascii	"_define_lib(\""
	.zero	3
	.long 2
	.long MM_BldQuake+2532
	.long 14
	.ascii	"_define_pgm(\""
	.zero	3
	.long 2
	.long MM_BldQuake+2560
	.long 19
	.ascii	"_import_otherlib(\""
	.zero	2
	.long 2
	.long MM_BldQuake+2592
	.long 15
	.ascii	"\", \"IMPORTED\")"
	.zero	2
	.long 2
	.long MM_BldQuake+2620
	.long 11
	.ascii	"override(\""
	.zero	2
	.long 2
	.long MM_BldQuake+2644
	.long 17
	.ascii	"import_version(\""
	.zero	4
	.long 2
	.long MM_BldQuake+2676
	.long 16
	.ascii	"_import_m3lib(\""
	.zero	1
	.long 2
	.long MM_BldQuake+2704
	.long 10
	.ascii	"interface"
	.zero	3
	.long 2
	.long MM_BldQuake+2728
	.long 18
	.ascii	"generic_interface"
	.zero	3
	.long 2
	.long MM_BldQuake+2760
	.long 15
	.ascii	"generic_module"
	.zero	2
	.long 2
	.long MM_BldQuake+2788
	.long 7
	.ascii	"module"
	.zero	2
	.long 2
	.long MM_BldQuake+2808
	.long 2
	.ascii	"c"
	.zero	3
	.long 2
	.long MM_BldQuake+2824
	.long 2
	.ascii	"h"
	.zero	3
	.long 2
	.long MM_BldQuake+2840
	.long 2
	.ascii	"s"
	.zero	3
	.long 2
	.long MM_BldQuake+2856
	.long 5
	.ascii	".m3x"
	.zero	4
	.long MM_BldQuake+2888
	.long MM_BldQuake+2912
	.long MM_BldQuake+2936
	.long MM_BldQuake+2960
	.long MM_BldQuake+2252
	.long 2
	.long MM_BldQuake+2896
	.long 10
	.ascii	"_m3main.c"
	.zero	3
	.long 2
	.long MM_BldQuake+2920
	.long 10
	.ascii	"_m3main.o"
	.zero	3
	.long 2
	.long MM_BldQuake+2944
	.long 12
	.ascii	"_m3main.obj"
	.zero	1
	.long 2
	.long MM_BldQuake+2968
	.long 7
	.ascii	".M3WEB"
	.zero	2
	.long MM_BldQuake+2252
	.long 2
	.long MM_BldQuake+2992
	.long 14
	.ascii	"HAVE_PKGTOOLS"
	.zero	3
	.long MI_M3Driver+68
	.long MI_OSError+44
	.long MI_Thread+184
	.long MI_Wr+44
	.zero	4
	.long 2
	.long MM_BldQuake+3040
	.long 8
	.ascii	".M3SHIP"
	.zero	1
	.long 2
	.long MM_BldQuake+3060
	.long 15
	.ascii	"install_file(\""
	.zero	2
	.long 2
	.long MM_BldQuake+3088
	.long 11
	.ascii	"\", \"0644\")"
	.zero	2
	.long 2
	.long MM_BldQuake+3112
	.long 5
	.ascii	"0755"
	.zero	4
	.long 2
	.long MM_BldQuake+3132
	.long 12
	.ascii	"link_file(\""
	.zero	1
	.long 2
	.long MM_BldQuake+3156
	.long 48
	.ascii	"install_alias_link not implemented for pkgtools"
	.zero	1
	.long 2
	.long MM_BldQuake+3216
	.long 14
	.ascii	"INSTALL_IMPLS"
	.zero	3
	.long 2
	.long MM_BldQuake+3244
	.long 4
	.ascii	"-l "
	.zero	1
	.long 2
	.long MM_BldQuake+3260
	.long 11
	.ascii	"make_dir(\""
	.zero	2
	.long 2
	.long MM_BldQuake+3284
	.long 29
	.ascii	"m3build: ignoring override(\""
	.zero	4
	.long 2
	.long MM_BldQuake+3328
	.long 12
	.ascii	"RESET_CACHE"
	.zero	1
	.long 2
	.long MM_BldQuake+3352
	.long 36
	.ascii	"m3libs_x and m3libs are incoherent!"
	.zero	1
	.long 2
	.long MM_BldQuake+3400
	.long 44
	.ascii	"other_libs_x and other_libs are incoherent!"
	.zero	1
	.long MI_BldFace+44
	.long MI_M3Driver+44
	.zero	4
	.long MM_BldQuake+4400
	.long -1683032270
	.long 2
	.long MM_BldQuake+3476
	.long 49
	.ascii	"couldn't initialize interface with the compiler!"
	.zero	4
	.long 2
	.long MM_BldQuake+3540
	.long 13
	.ascii	".M3OVERRIDES"
	.zero	4
	.long 2
	.long MM_BldQuake+3568
	.long 16
	.ascii	"set_visibility("
	.zero	1
	.long 2
	.long MM_BldQuake+3596
	.long 18
	.ascii	") of unknown unit"
	.zero	3
	.long 2
	.long MM_BldQuake+3628
	.long 17
	.ascii	"hide_interface(\""
	.zero	4
	.long 2
	.long MM_BldQuake+3660
	.long 25
	.ascii	"hide_generic_interface(\""
	.zero	4
	.long 2
	.long MM_BldQuake+3700
	.long 30
	.ascii	"hide_generic_implementation(\""
	.zero	3
	.long 2
	.long MM_BldQuake+3744
	.long 19
	.ascii	"export_interface(\""
	.zero	2
	.long 2
	.long MM_BldQuake+3776
	.long 27
	.ascii	"export_generic_interface(\""
	.zero	2
	.long 2
	.long MM_BldQuake+3816
	.long 32
	.ascii	"export_generic_implementation(\""
	.zero	1
	.long MI_OSError+44
	.zero	4
	.long MI_M3Driver+68
	.long MI_OSError+44
	.zero	4
	.long 2
	.long MM_BldQuake+3880
	.long 9
	.ascii	"-element"
	.zero	4
	.long 2
	.long MM_BldQuake+3904
	.long 6
	.ascii	"-name"
	.zero	3
	.long 2
	.long MM_BldQuake+3924
	.long 9
	.ascii	"m3bundle"
	.zero	4
	.long 2
	.long MM_BldQuake+3948
	.long 14
	.ascii	"Utils.Execute"
	.zero	3
	.long 2
	.long MM_BldQuake+3976
	.long 6
	.ascii	".tmpl"
	.zero	3
	.long 2
	.long MM_BldQuake+3996
	.long 19
	.ascii	"_import_template(\""
	.zero	2
	.long 2
	.long MM_BldQuake+4028
	.long 12
	.ascii	"MAN_SECTION"
	.zero	1
	.long 2
	.long MM_BldQuake+4052
	.long 4
	.ascii	".el"
	.zero	1
	.long 2
	.long MM_BldQuake+4068
	.long 14
	.ascii	"emacs_compile"
	.zero	3
	.long 2
	.long MM_BldQuake+4096
	.long 5
	.ascii	".elc"
	.zero	4
	.long 2
	.long MM_BldQuake+4116
	.long 4
	.ascii	".nw"
	.zero	1
	.long 2
	.long MM_BldQuake+4132
	.long 22
	.ascii	"-L<*LINE %L \"%F\" *>%N"
	.zero	3
	.long 2
	.long MM_BldQuake+4168
	.long 3
	.ascii	"-R"
	.zero	2
	.long 2
	.long MM_BldQuake+4184
	.long 9
	.ascii	"notangle"
	.zero	4
	.long 2
	.long MM_BldQuake+4208
	.long 24
	.ascii	"Utils.Execute(notangle)"
	.zero	1
	.long 2
	.long MM_BldQuake+4244
	.long 24
	.ascii	"zume is not implemented"
	.zero	1
	.long 2
	.long MM_BldQuake+4280
	.long 12
	.ascii	"\" not found"
	.zero	1
	.long 2
	.long MM_BldQuake+4304
	.long 4
	.ascii	"man"
	.zero	1
	.long 2
	.long MM_BldQuake+4320
	.long 5
	.ascii	"0644"
	.zero	4
	.long 2
	.long MM_BldQuake+4340
	.long 9
	.ascii	"<STDOUT>"
	.zero	4
	.long MI_Thread+184
	.long MI_Wr+44
	.zero	4
	.long 2
	.long MM_BldQuake+4376
	.long 4
	.ascii	"   "
	.zero	1
	.long MI_OSError+44
	.long MI_Rd+64
	.long MI_Thread+184
	.long MI_Wr+44
	.zero	4
	.long MM_BldQuake+4508
	.long 1045706454
	.long 2
	.long MM_BldQuake+4420
	.long 12
	.ascii	"exec failed"
	.zero	1
	.long 2
	.long MM_BldQuake+4444
	.long 61
	.ascii	"replacechar: 'old' and 'new' must be a single character each"
	.zero	4
	.long MM_BldQuake+4632
	.long -2020873848
	.long 2
	.long MM_BldQuake+4528
	.long 8
	.ascii	"m3mkdir"
	.zero	1
	.long 2
	.long MM_BldQuake+4548
	.long 29
	.ascii	"unable to create directory \""
	.zero	4
	.long 2
	.long MM_BldQuake+4592
	.long 17
	.ascii	"unable to copy \""
	.zero	4
	.long 2
	.long MM_BldQuake+4624
	.long 7
	.ascii	"\" to \""
	.zero	2
	.long MM_BldQuake+4640
	.long 54026910
	.long MM_BldQuake+4648
	.long 2071951508
	.long MM_BldQuake+7720
	.long -409265601
	.long 2
	.long MM_BldQuake+4668
	.long 12
	.ascii	"reset_cache"
	.zero	1
	.long 2
	.long MM_BldQuake+4692
	.long 3
	.ascii	"m3"
	.zero	2
	.long 2
	.long MM_BldQuake+4708
	.long 9
	.ascii	"override"
	.zero	4
	.long 2
	.long MM_BldQuake+4732
	.long 4
	.ascii	"Pkg"
	.zero	1
	.long 2
	.long MM_BldQuake+4748
	.long 10
	.ascii	"M3include"
	.zero	3
	.long 2
	.long MM_BldQuake+4772
	.long 9
	.ascii	"Location"
	.zero	4
	.long 2
	.long MM_BldQuake+4796
	.long 8
	.ascii	"loc_pkg"
	.zero	1
	.long 2
	.long MM_BldQuake+4816
	.long 11
	.ascii	"loc_subdir"
	.zero	2
	.long 2
	.long MM_BldQuake+4840
	.long 10
	.ascii	"Normalize"
	.zero	3
	.long 2
	.long MM_BldQuake+4864
	.long 11
	.ascii	"pkg_subdir"
	.zero	2
	.long 2
	.long MM_BldQuake+4888
	.long 8
	.ascii	"path_of"
	.zero	1
	.long 2
	.long MM_BldQuake+4908
	.long 13
	.ascii	"library_name"
	.zero	4
	.long 2
	.long MM_BldQuake+4936
	.long 13
	.ascii	"program_name"
	.zero	4
	.long 2
	.long MM_BldQuake+4964
	.long 9
	.ascii	"deriveds"
	.zero	4
	.long 2
	.long MM_BldQuake+4988
	.long 12
	.ascii	"include_dir"
	.zero	1
	.long 2
	.long MM_BldQuake+5012
	.long 12
	.ascii	"include_pkg"
	.zero	1
	.long 2
	.long MM_BldQuake+5036
	.long 11
	.ascii	"pgm_object"
	.zero	2
	.long 2
	.long MM_BldQuake+5060
	.long 11
	.ascii	"import_obj"
	.zero	2
	.long 2
	.long MM_BldQuake+5084
	.long 7
	.ascii	"import"
	.zero	2
	.long 2
	.long MM_BldQuake+5104
	.long 15
	.ascii	"import_version"
	.zero	2
	.long 2
	.long MM_BldQuake+5132
	.long 12
	.ascii	"_define_lib"
	.zero	1
	.long 2
	.long MM_BldQuake+5156
	.long 12
	.ascii	"_define_pmg"
	.zero	1
	.long 2
	.long MM_BldQuake+5180
	.long 17
	.ascii	"_import_template"
	.zero	4
	.long 2
	.long MM_BldQuake+5212
	.long 14
	.ascii	"_import_m3lib"
	.zero	3
	.long 2
	.long MM_BldQuake+5240
	.long 17
	.ascii	"_import_otherlib"
	.zero	4
	.long 2
	.long MM_BldQuake+5272
	.long 19
	.ascii	"_map_add_interface"
	.zero	2
	.long 2
	.long MM_BldQuake+5304
	.long 27
	.ascii	"_map_add_generic_interface"
	.zero	2
	.long 2
	.long MM_BldQuake+5344
	.long 16
	.ascii	"_map_add_module"
	.zero	1
	.long 2
	.long MM_BldQuake+5372
	.long 24
	.ascii	"_map_add_generic_module"
	.zero	1
	.long 2
	.long MM_BldQuake+5408
	.long 11
	.ascii	"_map_add_c"
	.zero	2
	.long 2
	.long MM_BldQuake+5432
	.long 11
	.ascii	"_map_add_h"
	.zero	2
	.long 2
	.long MM_BldQuake+5456
	.long 11
	.ascii	"_map_add_s"
	.zero	2
	.long 2
	.long MM_BldQuake+5480
	.long 10
	.ascii	"Interface"
	.zero	3
	.long 2
	.long MM_BldQuake+5504
	.long 15
	.ascii	"implementation"
	.zero	2
	.long 2
	.long MM_BldQuake+5532
	.long 7
	.ascii	"Module"
	.zero	2
	.long 2
	.long MM_BldQuake+5552
	.long 18
	.ascii	"Generic_interface"
	.zero	3
	.long 2
	.long MM_BldQuake+5584
	.long 23
	.ascii	"generic_implementation"
	.zero	2
	.long 2
	.long MM_BldQuake+5620
	.long 23
	.ascii	"Generic_implementation"
	.zero	2
	.long 2
	.long MM_BldQuake+5656
	.long 15
	.ascii	"Generic_module"
	.zero	2
	.long 2
	.long MM_BldQuake+5684
	.long 8
	.ascii	"library"
	.zero	1
	.long 2
	.long MM_BldQuake+5704
	.long 8
	.ascii	"Library"
	.zero	1
	.long 2
	.long MM_BldQuake+5724
	.long 9
	.ascii	"h_source"
	.zero	4
	.long 2
	.long MM_BldQuake+5748
	.long 9
	.ascii	"c_source"
	.zero	4
	.long 2
	.long MM_BldQuake+5772
	.long 9
	.ascii	"s_source"
	.zero	4
	.long 2
	.long MM_BldQuake+5796
	.long 18
	.ascii	"derived_interface"
	.zero	3
	.long 2
	.long MM_BldQuake+5828
	.long 23
	.ascii	"derived_implementation"
	.zero	2
	.long 2
	.long MM_BldQuake+5864
	.long 10
	.ascii	"derived_c"
	.zero	3
	.long 2
	.long MM_BldQuake+5888
	.long 10
	.ascii	"derived_h"
	.zero	3
	.long 2
	.long MM_BldQuake+5912
	.long 11
	.ascii	"import_lib"
	.zero	2
	.long 2
	.long MM_BldQuake+5936
	.long 19
	.ascii	"build_generic_intf"
	.zero	2
	.long 2
	.long MM_BldQuake+5968
	.long 19
	.ascii	"build_generic_impl"
	.zero	2
	.long 2
	.long MM_BldQuake+6000
	.long 15
	.ascii	"hide_interface"
	.zero	2
	.long 2
	.long MM_BldQuake+6028
	.long 23
	.ascii	"hide_generic_interface"
	.zero	2
	.long 2
	.long MM_BldQuake+6064
	.long 28
	.ascii	"hide_generic_implementation"
	.zero	1
	.long 2
	.long MM_BldQuake+6104
	.long 17
	.ascii	"export_interface"
	.zero	4
	.long 2
	.long MM_BldQuake+6136
	.long 25
	.ascii	"export_generic_interface"
	.zero	4
	.long 2
	.long MM_BldQuake+6176
	.long 30
	.ascii	"export_generic_implementation"
	.zero	3
	.long 2
	.long MM_BldQuake+6220
	.long 15
	.ascii	"resource_named"
	.zero	2
	.long 2
	.long MM_BldQuake+6248
	.long 9
	.ascii	"resource"
	.zero	4
	.long 2
	.long MM_BldQuake+6272
	.long 7
	.ascii	"bundle"
	.zero	2
	.long 2
	.long MM_BldQuake+6292
	.long 9
	.ascii	"template"
	.zero	4
	.long 2
	.long MM_BldQuake+6316
	.long 10
	.ascii	"BinExport"
	.zero	3
	.long 2
	.long MM_BldQuake+6340
	.long 11
	.ascii	"BindExport"
	.zero	2
	.long 2
	.long MM_BldQuake+6364
	.long 10
	.ascii	"LibExport"
	.zero	3
	.long 2
	.long MM_BldQuake+6388
	.long 11
	.ascii	"LibdExport"
	.zero	2
	.long 2
	.long MM_BldQuake+6412
	.long 12
	.ascii	"EmacsExport"
	.zero	1
	.long 2
	.long MM_BldQuake+6436
	.long 13
	.ascii	"EmacsdExport"
	.zero	4
	.long 2
	.long MM_BldQuake+6464
	.long 10
	.ascii	"DocExport"
	.zero	3
	.long 2
	.long MM_BldQuake+6488
	.long 11
	.ascii	"DocdExport"
	.zero	2
	.long 2
	.long MM_BldQuake+6512
	.long 10
	.ascii	"ManExport"
	.zero	3
	.long 2
	.long MM_BldQuake+6536
	.long 11
	.ascii	"MandExport"
	.zero	2
	.long 2
	.long MM_BldQuake+6560
	.long 11
	.ascii	"HtmlExport"
	.zero	2
	.long 2
	.long MM_BldQuake+6584
	.long 8
	.ascii	"manPage"
	.zero	1
	.long 2
	.long MM_BldQuake+6604
	.long 8
	.ascii	"ManPage"
	.zero	1
	.long 2
	.long MM_BldQuake+6624
	.long 9
	.ascii	"Gnuemacs"
	.zero	4
	.long 2
	.long MM_BldQuake+6648
	.long 17
	.ascii	"CompiledGnuemacs"
	.zero	4
	.long 2
	.long MM_BldQuake+6680
	.long 6
	.ascii	"Noweb"
	.zero	3
	.long 2
	.long MM_BldQuake+6700
	.long 16
	.ascii	"noweb_interface"
	.zero	1
	.long 2
	.long MM_BldQuake+6728
	.long 16
	.ascii	"Noweb_interface"
	.zero	1
	.long 2
	.long MM_BldQuake+6756
	.long 21
	.ascii	"noweb_implementation"
	.zero	4
	.long 2
	.long MM_BldQuake+6792
	.long 16
	.ascii	"install_derived"
	.zero	1
	.long 2
	.long MM_BldQuake+6820
	.long 13
	.ascii	"install_link"
	.zero	4
	.long 2
	.long MM_BldQuake+6848
	.long 5
	.ascii	"zume"
	.zero	4
	.long 2
	.long MM_BldQuake+6868
	.long 16
	.ascii	"RegisterCleanUp"
	.zero	1
	.long 2
	.long MM_BldQuake+6896
	.long 12
	.ascii	"RunCleanUps"
	.zero	1
	.long 2
	.long MM_BldQuake+6920
	.long 10
	.ascii	"find_unit"
	.zero	3
	.long 2
	.long MM_BldQuake+6944
	.long 11
	.ascii	"enum_units"
	.zero	2
	.long 2
	.long MM_BldQuake+6968
	.long 8
	.ascii	"program"
	.zero	1
	.long 2
	.long MM_BldQuake+6988
	.long 8
	.ascii	"Program"
	.zero	1
	.long 2
	.long MM_BldQuake+7008
	.long 10
	.ascii	"c_program"
	.zero	3
	.long 2
	.long MM_BldQuake+7032
	.long 10
	.ascii	"C_program"
	.zero	3
	.long 2
	.long MM_BldQuake+7056
	.long 10
	.ascii	"m3_option"
	.zero	3
	.long 2
	.long MM_BldQuake+7080
	.long 17
	.ascii	"remove_m3_option"
	.zero	4
	.long 2
	.long MM_BldQuake+7112
	.long 12
	.ascii	"delete_file"
	.zero	1
	.long 2
	.long MM_BldQuake+7136
	.long 10
	.ascii	"link_file"
	.zero	3
	.long 2
	.long MM_BldQuake+7160
	.long 16
	.ascii	"make_executable"
	.zero	1
	.long 2
	.long MM_BldQuake+7188
	.long 9
	.ascii	"make_dir"
	.zero	4
	.long 2
	.long MM_BldQuake+7212
	.long 9
	.ascii	"try_exec"
	.zero	4
	.long 2
	.long MM_BldQuake+7236
	.long 11
	.ascii	"pgm_source"
	.zero	2
	.long 2
	.long MM_BldQuake+7260
	.long 13
	.ascii	"Note_install"
	.zero	4
	.long 2
	.long MM_BldQuake+7288
	.long 12
	.ascii	"_define_pgm"
	.zero	1
	.long 2
	.long MM_BldQuake+7312
	.long 15
	.ascii	"m3front_option"
	.zero	2
	.long 2
	.long MM_BldQuake+7340
	.long 22
	.ascii	"remove_m3front_option"
	.zero	3
	.long 2
	.long MM_BldQuake+7376
	.long 12
	.ascii	"replacechar"
	.zero	1
	.long 2
	.long MM_BldQuake+7400
	.long 4
	.ascii	"w2p"
	.zero	1
	.long 2
	.long MM_BldQuake+7416
	.long 4
	.ascii	"p2w"
	.zero	1
	.long 2
	.long MM_BldQuake+7432
	.long 17
	.ascii	"derived_resource"
	.zero	4
	.long 2
	.long MM_BldQuake+7464
	.long 15
	.ascii	"generate_tfile"
	.zero	2
	.long 2
	.long MM_BldQuake+7492
	.long 14
	.ascii	"gen_m3exports"
	.zero	3
	.long 2
	.long MM_BldQuake+7520
	.long 16
	.ascii	"install_sources"
	.zero	1
	.long 2
	.long MM_BldQuake+7548
	.long 14
	.ascii	"_install_file"
	.zero	3
	.long 2
	.long MM_BldQuake+7576
	.long 4
	.ascii	"inc"
	.zero	1
	.long 2
	.long MM_BldQuake+7592
	.long 19
	.ascii	"install_alias_link"
	.zero	2
	.long 2
	.long MM_BldQuake+7624
	.long 26
	.ascii	"build_generic_unsafe_intf"
	.zero	3
	.long 2
	.long MM_BldQuake+7664
	.long 26
	.ascii	"build_generic_unsafe_impl"
	.zero	3
	.long 2
	.long MM_BldQuake+7704
	.long 13
	.ascii	" not defined"
	.zero	4
	.long MM_BldQuake+14208
	.long 1892539806
	.long 2
	.long MM_BldQuake+7740
	.long 19
	.ascii	"NAMING_CONVENTIONS"
	.zero	2
	.long 2
	.long MM_BldQuake+7772
	.long 19
	.ascii	"naming conventions"
	.zero	2
	.long 2
	.long MM_BldQuake+7804
	.long 26
	.ascii	"TARGET_NAMING_CONVENTIONS"
	.zero	3
	.long 2
	.long MM_BldQuake+7844
	.long 26
	.ascii	"target naming conventions"
	.zero	3
	.long 2
	.long MM_BldQuake+7884
	.long 7
	.ascii	"CRship"
	.zero	2
	.long 2
	.long MM_BldQuake+7904
	.long 8
	.ascii	"CR ship"
	.zero	1
	.long 2
	.long MM_BldQuake+7924
	.long 7
	.ascii	"SLship"
	.zero	2
	.long 2
	.long MM_BldQuake+7944
	.long 8
	.ascii	"SL ship"
	.zero	1
	.long 2
	.long MM_BldQuake+7964
	.long 8
	.ascii	"PKG_USE"
	.zero	1
	.long 2
	.long MM_BldQuake+7984
	.long 14
	.ascii	"use directory"
	.zero	3
	.long 2
	.long MM_BldQuake+8012
	.long 12
	.ascii	"PKG_INSTALL"
	.zero	1
	.long 2
	.long MM_BldQuake+8036
	.long 23
	.ascii	"installation directory"
	.zero	2
	.long 2
	.long MM_BldQuake+8072
	.long 8
	.ascii	"BIN_USE"
	.zero	1
	.long 2
	.long MM_BldQuake+8092
	.long 12
	.ascii	"BIN_INSTALL"
	.zero	1
	.long 2
	.long MM_BldQuake+8116
	.long 8
	.ascii	"LIB_USE"
	.zero	1
	.long 2
	.long MM_BldQuake+8136
	.long 12
	.ascii	"LIB_INSTALL"
	.zero	1
	.long 2
	.long MM_BldQuake+8160
	.long 12
	.ascii	"MAN_INSTALL"
	.zero	1
	.long 2
	.long MM_BldQuake+8184
	.long 14
	.ascii	"EMACS_INSTALL"
	.zero	3
	.long 2
	.long MM_BldQuake+8212
	.long 12
	.ascii	"DOC_INSTALL"
	.zero	1
	.long 2
	.long MM_BldQuake+8236
	.long 13
	.ascii	"HTML_INSTALL"
	.zero	4
	.long 2
	.long MM_BldQuake+8264
	.long 13
	.ascii	"HOST_OS_TYPE"
	.zero	4
	.long 2
	.long MM_BldQuake+8292
	.long 13
	.ascii	"host os type"
	.zero	4
	.long 2
	.long MM_BldQuake+8320
	.long 6
	.ascii	"POSIX"
	.zero	3
	.long 2
	.long MM_BldQuake+8340
	.long 6
	.ascii	"WIN32"
	.zero	3
	.long 2
	.long MM_BldQuake+8360
	.long 18
	.ascii	"OS_TYPE unknown: "
	.zero	3
	.long 2
	.long MM_BldQuake+8392
	.long 8
	.ascii	"VISIBLE"
	.zero	1
	.long 2
	.long MM_BldQuake+8412
	.long 7
	.ascii	"HIDDEN"
	.zero	2
	.long 2
	.long MM_BldQuake+8432
	.long 9
	.ascii	"IMPORTED"
	.zero	4
	.long 2
	.long MM_BldQuake+8456
	.long 6
	.ascii	"LOCAL"
	.zero	3
	.long 2
	.long MM_BldQuake+8476
	.long 42
	.ascii	"Not enough elements for naming convention"
	.zero	3
	.long 2
	.long MM_BldQuake+8532
	.long 24
	.ascii	"compiler error caught: "
	.zero	1
	.long 2
	.long MM_BldQuake+8568
	.long 2
	.ascii	"\n"
	.zero	3
	.long 2
	.long MM_BldQuake+8584
	.long 13
	.ascii	"file error: "
	.zero	4
	.long 2
	.long MM_BldQuake+8612
	.long 5
	.ascii	"_all"
	.zero	4
	.ascii	"_INITM_BldQuake"
	.zero	1
	.ascii	"FErr"
	.zero	1
	.ascii	"CErr"
	.zero	1
	.ascii	"Err"
	.zero	1
	.ascii	"GetSL"
	.zero	1
	.ascii	"FillNamingConvention"
	.zero	1
	.ascii	"Setup"
	.zero	1
	.ascii	"Setup.GetVal"
	.zero	1
	.ascii	"Setup.GetText"
	.zero	1
	.ascii	"InitProcs"
	.zero	1
	.ascii	"NewProc"
	.zero	1
	.ascii	"Escape"
	.zero	1
	.ascii	"Stale"
	.zero	1
	.ascii	"CopyIfNew"
	.zero	1
	.ascii	"MakeDir"
	.zero	1
	.ascii	"DoMakeDir"
	.zero	1
	.ascii	"DoMakeExecutable"
	.zero	1
	.ascii	"DoLinkFile"
	.zero	1
	.ascii	"DoDeleteFile"
	.zero	1
	.ascii	"DoDummy"
	.zero	1
	.ascii	"DoInc"
	.zero	1
	.ascii	"P2W"
	.zero	1
	.ascii	"DoP2W"
	.zero	1
	.ascii	"W2P"
	.zero	1
	.ascii	"DoW2P"
	.zero	1
	.ascii	"ReplaceChar"
	.zero	1
	.ascii	"DoReplaceChar"
	.zero	1
	.ascii	"DoTryExec"
	.zero	1
	.ascii	"BuildOptionList"
	.zero	1
	.ascii	"DoHtmlExport"
	.zero	1
	.ascii	"HtmlExport"
	.zero	1
	.ascii	"DoMandExport"
	.zero	1
	.ascii	"DoManExport"
	.zero	1
	.ascii	"ManExport"
	.zero	1
	.ascii	"DoDocdExport"
	.zero	1
	.ascii	"DoDocExport"
	.zero	1
	.ascii	"DocExport"
	.zero	1
	.ascii	"DoEmacsdExport"
	.zero	1
	.ascii	"DoEmacsExport"
	.zero	1
	.ascii	"EmacsExport"
	.zero	1
	.ascii	"DoLibdExport"
	.zero	1
	.ascii	"DoLibExport"
	.zero	1
	.ascii	"LibExport"
	.zero	1
	.ascii	"DoBindExport"
	.zero	1
	.ascii	"DoBinExport"
	.zero	1
	.ascii	"BinExport"
	.zero	1
	.ascii	"NoteInstall"
	.zero	1
	.ascii	"DoNoteInstall"
	.zero	1
	.ascii	"InstallSrc"
	.zero	1
	.ascii	"InstallMan"
	.zero	1
	.ascii	"InstallFile"
	.zero	1
	.ascii	"DoInstallFile"
	.zero	1
	.ascii	"NoteOverrides"
	.zero	1
	.ascii	"DoEnumUnits"
	.zero	1
	.ascii	"DoEnumUnits.GenUnits"
	.zero	1
	.ascii	"DoFindUnit"
	.zero	1
	.ascii	"DoFindUnit.GenUnit"
	.zero	1
	.ascii	"DoRunCleanUps"
	.zero	1
	.ascii	"DoRegisterCleanUp"
	.zero	1
	.ascii	"DoZume"
	.zero	1
	.ascii	"DoNowebImplementation"
	.zero	1
	.ascii	"DoNowebInterface"
	.zero	1
	.ascii	"DonowebInterface"
	.zero	1
	.ascii	"DoNoweb"
	.zero	1
	.ascii	"Noweb"
	.zero	1
	.ascii	"DoCompiledGnuemacs"
	.zero	1
	.ascii	"DoGnuemacs"
	.zero	1
	.ascii	"DoManPage"
	.zero	1
	.ascii	"ManPage"
	.zero	1
	.ascii	"DomanPage"
	.zero	1
	.ascii	"manPage"
	.zero	1
	.ascii	"DoTemplate"
	.zero	1
	.ascii	"Template"
	.zero	1
	.ascii	"DoBundle"
	.zero	1
	.ascii	"Bundle"
	.zero	1
	.ascii	"DoDerivedResource"
	.zero	1
	.ascii	"DerivedResource"
	.zero	1
	.ascii	"DoResource"
	.zero	1
	.ascii	"DoResourceNamed"
	.zero	1
	.ascii	"ResourceNamed"
	.zero	1
	.ascii	"DoExportGenericImplementation"
	.zero	1
	.ascii	"DoExportGenericInterface"
	.zero	1
	.ascii	"DoExportInterface"
	.zero	1
	.ascii	"DoHideGenericImplementation"
	.zero	1
	.ascii	"DoHideGenericInterface"
	.zero	1
	.ascii	"DoHideInterface"
	.zero	1
	.ascii	"SetVisibility"
	.zero	1
	.ascii	"DoRemoveM3FrontOption"
	.zero	1
	.ascii	"DoM3FrontOption"
	.zero	1
	.ascii	"DoM3"
	.zero	1
	.ascii	"M3"
	.zero	1
	.ascii	"DoResetCache"
	.zero	1
	.ascii	"DoOverride"
	.zero	1
	.ascii	"DoRemoveM3Option"
	.zero	1
	.ascii	"DoM3Option"
	.zero	1
	.ascii	"U_InstallDir"
	.zero	1
	.ascii	"DoInstallSources"
	.zero	1
	.ascii	"InstallSources"
	.zero	1
	.ascii	"InstallSources.WalkUnits"
	.zero	1
	.ascii	"DoInstallAliasLink"
	.zero	1
	.ascii	"InstallAliasLink"
	.zero	1
	.ascii	"DoInstallLink"
	.zero	1
	.ascii	"InstallLink"
	.zero	1
	.ascii	"DoInstallDerived"
	.zero	1
	.ascii	"InstallDerived"
	.zero	1
	.ascii	"DoLIBRARY"
	.zero	1
	.ascii	"DoLibrary"
	.zero	1
	.ascii	"Library"
	.zero	1
	.ascii	"DoCPROGRAM"
	.zero	1
	.ascii	"DoCProgram"
	.zero	1
	.ascii	"CProgram"
	.zero	1
	.ascii	"DoPROGRAM"
	.zero	1
	.ascii	"DoProgram"
	.zero	1
	.ascii	"U_Program"
	.zero	1
	.ascii	"DoGenM3Exports"
	.zero	1
	.ascii	"GenM3Exports"
	.zero	1
	.ascii	"GenM3Exports.GenUnitMap"
	.zero	1
	.ascii	"Visibility"
	.zero	1
	.ascii	"DoGenerateTFile"
	.zero	1
	.ascii	"GenerateTFile"
	.zero	1
	.ascii	"GenerateTFile.WalkUnits"
	.zero	1
	.ascii	"DoDerivedH"
	.zero	1
	.ascii	"DerivedH"
	.zero	1
	.ascii	"DoDerivedC"
	.zero	1
	.ascii	"DerivedC"
	.zero	1
	.ascii	"DoDerivedImplementation"
	.zero	1
	.ascii	"DerivedImplementation"
	.zero	1
	.ascii	"DoDerivedInterface"
	.zero	1
	.ascii	"DerivedInterface"
	.zero	1
	.ascii	"DoBuildGenericUnsafeImpl"
	.zero	1
	.ascii	"DoBuildGenericImpl"
	.zero	1
	.ascii	"BuildGenericImpl"
	.zero	1
	.ascii	"DoBuildGenericUnsafeIntf"
	.zero	1
	.ascii	"DoBuildGenericIntf"
	.zero	1
	.ascii	"BuildGenericIntf"
	.zero	1
	.ascii	"DoGENERIC_MODULE"
	.zero	1
	.ascii	"DoGenericModule"
	.zero	1
	.ascii	"DoGENERIC_IMPLEMENTATION"
	.zero	1
	.ascii	"DoGenericImplementation"
	.zero	1
	.ascii	"DoGENERIC_INTERFACE"
	.zero	1
	.ascii	"DoGenericInterface"
	.zero	1
	.ascii	"GenericImpl"
	.zero	1
	.ascii	"GenericIntf"
	.zero	1
	.ascii	"DoSSource"
	.zero	1
	.ascii	"SSource"
	.zero	1
	.ascii	"DoCSource"
	.zero	1
	.ascii	"CSource"
	.zero	1
	.ascii	"DoHSource"
	.zero	1
	.ascii	"HSource"
	.zero	1
	.ascii	"DoMODULE"
	.zero	1
	.ascii	"DoModule"
	.zero	1
	.ascii	"DoImplementation"
	.zero	1
	.ascii	"Implementation"
	.zero	1
	.ascii	"Interface"
	.zero	1
	.ascii	"DoINTERFACE"
	.zero	1
	.ascii	"DoInterface"
	.zero	1
	.ascii	"DoPgmSource"
	.zero	1
	.ascii	"Deriveds"
	.zero	1
	.ascii	"DoDeriveds"
	.zero	1
	.ascii	"PgmObject"
	.zero	1
	.ascii	"DoPgmObject"
	.zero	1
	.ascii	"ImportLib"
	.zero	1
	.ascii	"DoImportLib"
	.zero	1
	.ascii	"ImportVersion"
	.zero	1
	.ascii	"DoImportVersion"
	.zero	1
	.ascii	"Import"
	.zero	1
	.ascii	"DoImport"
	.zero	1
	.ascii	"ImportObj"
	.zero	1
	.ascii	"DoImportObj"
	.zero	1
	.ascii	"IncludePkg"
	.zero	1
	.ascii	"DoIncludePkg"
	.zero	1
	.ascii	"IncludeDir"
	.zero	1
	.ascii	"DoIncludeDir"
	.zero	1
	.ascii	"U_MapAddS"
	.zero	1
	.ascii	"Do_MapAddS"
	.zero	1
	.ascii	"U_MapAddH"
	.zero	1
	.ascii	"Do_MapAddH"
	.zero	1
	.ascii	"U_MapAddC"
	.zero	1
	.ascii	"Do_MapAddC"
	.zero	1
	.ascii	"U_MapAddGenericModule"
	.zero	1
	.ascii	"Do_MapAddGenericModule"
	.zero	1
	.ascii	"U_MapAddModule"
	.zero	1
	.ascii	"Do_MapAddModule"
	.zero	1
	.ascii	"U_MapAddGenericInterface"
	.zero	1
	.ascii	"Do_MapAddGenericInterface"
	.zero	1
	.ascii	"U_MapAddInterface"
	.zero	1
	.ascii	"Do_MapAddInterface"
	.zero	1
	.ascii	"U_ImportOtherLib"
	.zero	1
	.ascii	"Do_ImportOtherLib"
	.zero	1
	.ascii	"U_ImportM3Lib"
	.zero	1
	.ascii	"Do_ImportM3Lib"
	.zero	1
	.ascii	"U_ImportTemplate"
	.zero	1
	.ascii	"Do_ImportTemplate"
	.zero	1
	.ascii	"LibraryName"
	.zero	1
	.ascii	"DoLibraryName"
	.zero	1
	.ascii	"ProgramName"
	.zero	1
	.ascii	"DoProgramName"
	.zero	1
	.ascii	"PkgSubdir"
	.zero	1
	.ascii	"DoPkgSubdir"
	.zero	1
	.ascii	"Normalize"
	.zero	1
	.ascii	"DoNormalize"
	.zero	1
	.ascii	"PathOf"
	.zero	1
	.ascii	"DoPathOf"
	.zero	1
	.ascii	"LocSubdir"
	.zero	1
	.ascii	"DoLocSubdir"
	.zero	1
	.ascii	"LocPkg"
	.zero	1
	.ascii	"DoLocPkg"
	.zero	1
	.ascii	"Location"
	.zero	1
	.ascii	"DoLocation"
	.zero	1
	.ascii	"M3include"
	.zero	1
	.ascii	"DoM3include"
	.zero	1
	.ascii	"Pkg"
	.zero	1
	.ascii	"DoPkg"
	.zero	1
	.ascii	"Init"
	.zero	1
	.long _INITM_BldQuake
	.long MM_BldQuake+8620
	.zero	4
	.long BldQuake__FErr
	.long MM_BldQuake+8636
	.zero	4
	.long BldQuake__CErr
	.long MM_BldQuake+8641
	.zero	4
	.long BldQuake__Err
	.long MM_BldQuake+8646
	.zero	4
	.long BldQuake__GetSL
	.long MM_BldQuake+8650
	.zero	4
	.long BldQuake__FillNamingConvention
	.long MM_BldQuake+8656
	.zero	4
	.long BldQuake__Setup
	.long MM_BldQuake+8677
	.zero	4
	.long BldQuake__Setup__GetVal.6
	.long MM_BldQuake+8683
	.zero	4
	.long BldQuake__Setup__GetText.5
	.long MM_BldQuake+8696
	.zero	4
	.long BldQuake__InitProcs
	.long MM_BldQuake+8710
	.zero	4
	.long BldQuake__NewProc
	.long MM_BldQuake+8720
	.zero	4
	.long BldQuake__Escape
	.long MM_BldQuake+8728
	.zero	4
	.long BldQuake__Stale
	.long MM_BldQuake+8735
	.zero	4
	.long BldQuake__CopyIfNew
	.long MM_BldQuake+8741
	.long MI_BldQuake+148
	.long BldQuake__MakeDir
	.long MM_BldQuake+8751
	.zero	4
	.long BldQuake__DoMakeDir
	.long MM_BldQuake+8759
	.zero	4
	.long BldQuake__DoMakeExecutable
	.long MM_BldQuake+8769
	.zero	4
	.long BldQuake__DoLinkFile
	.long MM_BldQuake+8786
	.zero	4
	.long BldQuake__DoDeleteFile
	.long MM_BldQuake+8797
	.zero	4
	.long BldQuake__DoDummy
	.long MM_BldQuake+8810
	.zero	4
	.long BldQuake__DoInc
	.long MM_BldQuake+8818
	.zero	4
	.long BldQuake__P2W
	.long MM_BldQuake+8824
	.zero	4
	.long BldQuake__DoP2W
	.long MM_BldQuake+8828
	.zero	4
	.long BldQuake__W2P
	.long MM_BldQuake+8834
	.zero	4
	.long BldQuake__DoW2P
	.long MM_BldQuake+8838
	.zero	4
	.long BldQuake__ReplaceChar
	.long MM_BldQuake+8844
	.zero	4
	.long BldQuake__DoReplaceChar
	.long MM_BldQuake+8856
	.zero	4
	.long BldQuake__DoTryExec
	.long MM_BldQuake+8870
	.zero	4
	.long BldQuake__BuildOptionList
	.long MM_BldQuake+8880
	.zero	4
	.long BldQuake__DoHtmlExport
	.long MM_BldQuake+8896
	.zero	4
	.long BldQuake__HtmlExport
	.long MM_BldQuake+8909
	.zero	4
	.long BldQuake__DoMandExport
	.long MM_BldQuake+8920
	.zero	4
	.long BldQuake__DoManExport
	.long MM_BldQuake+8933
	.zero	4
	.long BldQuake__ManExport
	.long MM_BldQuake+8945
	.zero	4
	.long BldQuake__DoDocdExport
	.long MM_BldQuake+8955
	.zero	4
	.long BldQuake__DoDocExport
	.long MM_BldQuake+8968
	.zero	4
	.long BldQuake__DocExport
	.long MM_BldQuake+8980
	.zero	4
	.long BldQuake__DoEmacsdExport
	.long MM_BldQuake+8990
	.zero	4
	.long BldQuake__DoEmacsExport
	.long MM_BldQuake+9005
	.zero	4
	.long BldQuake__EmacsExport
	.long MM_BldQuake+9019
	.zero	4
	.long BldQuake__DoLibdExport
	.long MM_BldQuake+9031
	.zero	4
	.long BldQuake__DoLibExport
	.long MM_BldQuake+9044
	.zero	4
	.long BldQuake__LibExport
	.long MM_BldQuake+9056
	.zero	4
	.long BldQuake__DoBindExport
	.long MM_BldQuake+9066
	.zero	4
	.long BldQuake__DoBinExport
	.long MM_BldQuake+9079
	.zero	4
	.long BldQuake__BinExport
	.long MM_BldQuake+9091
	.zero	4
	.long BldQuake__NoteInstall
	.long MM_BldQuake+9101
	.zero	4
	.long BldQuake__DoNoteInstall
	.long MM_BldQuake+9113
	.zero	4
	.long BldQuake__InstallSrc
	.long MM_BldQuake+9127
	.zero	4
	.long BldQuake__InstallMan
	.long MM_BldQuake+9138
	.zero	4
	.long BldQuake__InstallFile
	.long MM_BldQuake+9149
	.zero	4
	.long BldQuake__DoInstallFile
	.long MM_BldQuake+9161
	.zero	4
	.long BldQuake__NoteOverrides
	.long MM_BldQuake+9175
	.zero	4
	.long BldQuake__DoEnumUnits
	.long MM_BldQuake+9189
	.zero	4
	.long BldQuake__DoEnumUnits__GenUnits.4
	.long MM_BldQuake+9201
	.zero	4
	.long BldQuake__DoFindUnit
	.long MM_BldQuake+9222
	.zero	4
	.long BldQuake__DoFindUnit__GenUnit.3
	.long MM_BldQuake+9233
	.zero	4
	.long BldQuake__DoRunCleanUps
	.long MM_BldQuake+9252
	.zero	4
	.long BldQuake__DoRegisterCleanUp
	.long MM_BldQuake+9266
	.zero	4
	.long BldQuake__DoZume
	.long MM_BldQuake+9284
	.zero	4
	.long BldQuake__DoNowebImplementation
	.long MM_BldQuake+9291
	.zero	4
	.long BldQuake__DoNowebInterface
	.long MM_BldQuake+9313
	.zero	4
	.long BldQuake__DonowebInterface
	.long MM_BldQuake+9330
	.zero	4
	.long BldQuake__DoNoweb
	.long MM_BldQuake+9347
	.zero	4
	.long BldQuake__Noweb
	.long MM_BldQuake+9355
	.zero	4
	.long BldQuake__DoCompiledGnuemacs
	.long MM_BldQuake+9361
	.zero	4
	.long BldQuake__DoGnuemacs
	.long MM_BldQuake+9380
	.zero	4
	.long BldQuake__DoManPage
	.long MM_BldQuake+9391
	.zero	4
	.long BldQuake__ManPage
	.long MM_BldQuake+9401
	.zero	4
	.long BldQuake__DomanPage
	.long MM_BldQuake+9409
	.zero	4
	.long BldQuake__manPage
	.long MM_BldQuake+9419
	.zero	4
	.long BldQuake__DoTemplate
	.long MM_BldQuake+9427
	.zero	4
	.long BldQuake__Template
	.long MM_BldQuake+9438
	.zero	4
	.long BldQuake__DoBundle
	.long MM_BldQuake+9447
	.zero	4
	.long BldQuake__Bundle
	.long MM_BldQuake+9456
	.zero	4
	.long BldQuake__DoDerivedResource
	.long MM_BldQuake+9463
	.zero	4
	.long BldQuake__DerivedResource
	.long MM_BldQuake+9481
	.zero	4
	.long BldQuake__DoResource
	.long MM_BldQuake+9497
	.zero	4
	.long BldQuake__DoResourceNamed
	.long MM_BldQuake+9508
	.zero	4
	.long BldQuake__ResourceNamed
	.long MM_BldQuake+9524
	.zero	4
	.long BldQuake__DoExportGenericImplementation
	.long MM_BldQuake+9538
	.zero	4
	.long BldQuake__DoExportGenericInterface
	.long MM_BldQuake+9568
	.zero	4
	.long BldQuake__DoExportInterface
	.long MM_BldQuake+9593
	.zero	4
	.long BldQuake__DoHideGenericImplementation
	.long MM_BldQuake+9611
	.zero	4
	.long BldQuake__DoHideGenericInterface
	.long MM_BldQuake+9639
	.zero	4
	.long BldQuake__DoHideInterface
	.long MM_BldQuake+9662
	.zero	4
	.long BldQuake__SetVisibility
	.long MM_BldQuake+9678
	.zero	4
	.long BldQuake__DoRemoveM3FrontOption
	.long MM_BldQuake+9692
	.zero	4
	.long BldQuake__DoM3FrontOption
	.long MM_BldQuake+9714
	.zero	4
	.long BldQuake__DoM3
	.long MM_BldQuake+9730
	.zero	4
	.long BldQuake__M3
	.long MM_BldQuake+9735
	.zero	4
	.long BldQuake__DoResetCache
	.long MM_BldQuake+9738
	.zero	4
	.long BldQuake__DoOverride
	.long MM_BldQuake+9751
	.zero	4
	.long BldQuake__DoRemoveM3Option
	.long MM_BldQuake+9762
	.zero	4
	.long BldQuake__DoM3Option
	.long MM_BldQuake+9779
	.zero	4
	.long BldQuake__U_InstallDir
	.long MM_BldQuake+9790
	.zero	4
	.long BldQuake__DoInstallSources
	.long MM_BldQuake+9803
	.zero	4
	.long BldQuake__InstallSources
	.long MM_BldQuake+9820
	.zero	4
	.long BldQuake__InstallSources__WalkUnits.2
	.long MM_BldQuake+9835
	.zero	4
	.long BldQuake__DoInstallAliasLink
	.long MM_BldQuake+9860
	.zero	4
	.long BldQuake__InstallAliasLink
	.long MM_BldQuake+9879
	.zero	4
	.long BldQuake__DoInstallLink
	.long MM_BldQuake+9896
	.zero	4
	.long BldQuake__InstallLink
	.long MM_BldQuake+9910
	.zero	4
	.long BldQuake__DoInstallDerived
	.long MM_BldQuake+9922
	.zero	4
	.long BldQuake__InstallDerived
	.long MM_BldQuake+9939
	.zero	4
	.long BldQuake__DoLIBRARY
	.long MM_BldQuake+9954
	.zero	4
	.long BldQuake__DoLibrary
	.long MM_BldQuake+9964
	.zero	4
	.long BldQuake__Library
	.long MM_BldQuake+9974
	.zero	4
	.long BldQuake__DoCPROGRAM
	.long MM_BldQuake+9982
	.zero	4
	.long BldQuake__DoCProgram
	.long MM_BldQuake+9993
	.zero	4
	.long BldQuake__CProgram
	.long MM_BldQuake+10004
	.zero	4
	.long BldQuake__DoPROGRAM
	.long MM_BldQuake+10013
	.zero	4
	.long BldQuake__DoProgram
	.long MM_BldQuake+10023
	.zero	4
	.long BldQuake__U_Program
	.long MM_BldQuake+10033
	.zero	4
	.long BldQuake__DoGenM3Exports
	.long MM_BldQuake+10043
	.zero	4
	.long BldQuake__GenM3Exports
	.long MM_BldQuake+10058
	.zero	4
	.long BldQuake__GenM3Exports__GenUnitMap.1
	.long MM_BldQuake+10071
	.zero	4
	.long BldQuake__Visibility
	.long MM_BldQuake+10095
	.zero	4
	.long BldQuake__DoGenerateTFile
	.long MM_BldQuake+10106
	.zero	4
	.long BldQuake__GenerateTFile
	.long MM_BldQuake+10122
	.zero	4
	.long BldQuake__GenerateTFile__WalkUnits.0
	.long MM_BldQuake+10136
	.zero	4
	.long BldQuake__DoDerivedH
	.long MM_BldQuake+10160
	.zero	4
	.long BldQuake__DerivedH
	.long MM_BldQuake+10171
	.zero	4
	.long BldQuake__DoDerivedC
	.long MM_BldQuake+10180
	.zero	4
	.long BldQuake__DerivedC
	.long MM_BldQuake+10191
	.zero	4
	.long BldQuake__DoDerivedImplementation
	.long MM_BldQuake+10200
	.zero	4
	.long BldQuake__DerivedImplementation
	.long MM_BldQuake+10224
	.zero	4
	.long BldQuake__DoDerivedInterface
	.long MM_BldQuake+10246
	.zero	4
	.long BldQuake__DerivedInterface
	.long MM_BldQuake+10265
	.zero	4
	.long BldQuake__DoBuildGenericUnsafeImpl
	.long MM_BldQuake+10282
	.zero	4
	.long BldQuake__DoBuildGenericImpl
	.long MM_BldQuake+10307
	.zero	4
	.long BldQuake__BuildGenericImpl
	.long MM_BldQuake+10326
	.zero	4
	.long BldQuake__DoBuildGenericUnsafeIntf
	.long MM_BldQuake+10343
	.zero	4
	.long BldQuake__DoBuildGenericIntf
	.long MM_BldQuake+10368
	.zero	4
	.long BldQuake__BuildGenericIntf
	.long MM_BldQuake+10387
	.zero	4
	.long BldQuake__DoGENERIC_MODULE
	.long MM_BldQuake+10404
	.zero	4
	.long BldQuake__DoGenericModule
	.long MM_BldQuake+10421
	.zero	4
	.long BldQuake__DoGENERIC_IMPLEMENTATION
	.long MM_BldQuake+10437
	.zero	4
	.long BldQuake__DoGenericImplementation
	.long MM_BldQuake+10462
	.zero	4
	.long BldQuake__DoGENERIC_INTERFACE
	.long MM_BldQuake+10486
	.zero	4
	.long BldQuake__DoGenericInterface
	.long MM_BldQuake+10506
	.zero	4
	.long BldQuake__GenericImpl
	.long MM_BldQuake+10525
	.zero	4
	.long BldQuake__GenericIntf
	.long MM_BldQuake+10537
	.zero	4
	.long BldQuake__DoSSource
	.long MM_BldQuake+10549
	.zero	4
	.long BldQuake__SSource
	.long MM_BldQuake+10559
	.zero	4
	.long BldQuake__DoCSource
	.long MM_BldQuake+10567
	.zero	4
	.long BldQuake__CSource
	.long MM_BldQuake+10577
	.zero	4
	.long BldQuake__DoHSource
	.long MM_BldQuake+10585
	.zero	4
	.long BldQuake__HSource
	.long MM_BldQuake+10595
	.zero	4
	.long BldQuake__DoMODULE
	.long MM_BldQuake+10603
	.zero	4
	.long BldQuake__DoModule
	.long MM_BldQuake+10612
	.zero	4
	.long BldQuake__DoImplementation
	.long MM_BldQuake+10621
	.zero	4
	.long BldQuake__Implementation
	.long MM_BldQuake+10638
	.zero	4
	.long BldQuake__Interface
	.long MM_BldQuake+10653
	.zero	4
	.long BldQuake__DoINTERFACE
	.long MM_BldQuake+10663
	.zero	4
	.long BldQuake__DoInterface
	.long MM_BldQuake+10675
	.zero	4
	.long BldQuake__DoPgmSource
	.long MM_BldQuake+10687
	.zero	4
	.long BldQuake__Deriveds
	.long MM_BldQuake+10699
	.zero	4
	.long BldQuake__DoDeriveds
	.long MM_BldQuake+10708
	.zero	4
	.long BldQuake__PgmObject
	.long MM_BldQuake+10719
	.zero	4
	.long BldQuake__DoPgmObject
	.long MM_BldQuake+10729
	.zero	4
	.long BldQuake__ImportLib
	.long MM_BldQuake+10741
	.zero	4
	.long BldQuake__DoImportLib
	.long MM_BldQuake+10751
	.zero	4
	.long BldQuake__ImportVersion
	.long MM_BldQuake+10763
	.zero	4
	.long BldQuake__DoImportVersion
	.long MM_BldQuake+10777
	.zero	4
	.long BldQuake__Import
	.long MM_BldQuake+10793
	.zero	4
	.long BldQuake__DoImport
	.long MM_BldQuake+10800
	.zero	4
	.long BldQuake__ImportObj
	.long MM_BldQuake+10809
	.zero	4
	.long BldQuake__DoImportObj
	.long MM_BldQuake+10819
	.zero	4
	.long BldQuake__IncludePkg
	.long MM_BldQuake+10831
	.zero	4
	.long BldQuake__DoIncludePkg
	.long MM_BldQuake+10842
	.zero	4
	.long BldQuake__IncludeDir
	.long MM_BldQuake+10855
	.zero	4
	.long BldQuake__DoIncludeDir
	.long MM_BldQuake+10866
	.zero	4
	.long BldQuake__U_MapAddS
	.long MM_BldQuake+10879
	.zero	4
	.long BldQuake__Do_MapAddS
	.long MM_BldQuake+10889
	.zero	4
	.long BldQuake__U_MapAddH
	.long MM_BldQuake+10900
	.zero	4
	.long BldQuake__Do_MapAddH
	.long MM_BldQuake+10910
	.zero	4
	.long BldQuake__U_MapAddC
	.long MM_BldQuake+10921
	.zero	4
	.long BldQuake__Do_MapAddC
	.long MM_BldQuake+10931
	.zero	4
	.long BldQuake__U_MapAddGenericModule
	.long MM_BldQuake+10942
	.zero	4
	.long BldQuake__Do_MapAddGenericModule
	.long MM_BldQuake+10964
	.zero	4
	.long BldQuake__U_MapAddModule
	.long MM_BldQuake+10987
	.zero	4
	.long BldQuake__Do_MapAddModule
	.long MM_BldQuake+11002
	.zero	4
	.long BldQuake__U_MapAddGenericInterface
	.long MM_BldQuake+11018
	.zero	4
	.long BldQuake__Do_MapAddGenericInterface
	.long MM_BldQuake+11043
	.zero	4
	.long BldQuake__U_MapAddInterface
	.long MM_BldQuake+11069
	.zero	4
	.long BldQuake__Do_MapAddInterface
	.long MM_BldQuake+11087
	.zero	4
	.long BldQuake__U_ImportOtherLib
	.long MM_BldQuake+11106
	.zero	4
	.long BldQuake__Do_ImportOtherLib
	.long MM_BldQuake+11123
	.zero	4
	.long BldQuake__U_ImportM3Lib
	.long MM_BldQuake+11141
	.zero	4
	.long BldQuake__Do_ImportM3Lib
	.long MM_BldQuake+11155
	.zero	4
	.long BldQuake__U_ImportTemplate
	.long MM_BldQuake+11170
	.zero	4
	.long BldQuake__Do_ImportTemplate
	.long MM_BldQuake+11187
	.zero	4
	.long BldQuake__LibraryName
	.long MM_BldQuake+11205
	.zero	4
	.long BldQuake__DoLibraryName
	.long MM_BldQuake+11217
	.zero	4
	.long BldQuake__ProgramName
	.long MM_BldQuake+11231
	.zero	4
	.long BldQuake__DoProgramName
	.long MM_BldQuake+11243
	.zero	4
	.long BldQuake__PkgSubdir
	.long MM_BldQuake+11257
	.zero	4
	.long BldQuake__DoPkgSubdir
	.long MM_BldQuake+11267
	.zero	4
	.long BldQuake__Normalize
	.long MM_BldQuake+11279
	.zero	4
	.long BldQuake__DoNormalize
	.long MM_BldQuake+11289
	.zero	4
	.long BldQuake__PathOf
	.long MM_BldQuake+11301
	.zero	4
	.long BldQuake__DoPathOf
	.long MM_BldQuake+11308
	.zero	4
	.long BldQuake__LocSubdir
	.long MM_BldQuake+11317
	.zero	4
	.long BldQuake__DoLocSubdir
	.long MM_BldQuake+11327
	.zero	4
	.long BldQuake__LocPkg
	.long MM_BldQuake+11339
	.zero	4
	.long BldQuake__DoLocPkg
	.long MM_BldQuake+11346
	.zero	4
	.long BldQuake__Location
	.long MM_BldQuake+11355
	.zero	4
	.long BldQuake__DoLocation
	.long MM_BldQuake+11364
	.zero	4
	.long BldQuake__M3include
	.long MM_BldQuake+11375
	.zero	4
	.long BldQuake__DoM3include
	.long MM_BldQuake+11385
	.zero	4
	.long BldQuake__Pkg
	.long MM_BldQuake+11397
	.zero	4
	.long BldQuake__DoPkg
	.long MM_BldQuake+11401
	.zero	4
	.long BldQuake__Init
	.long MM_BldQuake+11407
	.zero	8
.byte 43
.byte 136
.byte 3
.byte 4
.byte 0
	.ascii	"/home/ftp/tmp/pm3/tmp/pm3-1.1.15/language/modula3/m3compiler"
	.ascii	"/m3bootstrap/LINUXLIBC6/pm3-LINUXLIBC6/boot-LINUXLIBC6/m3tem"
	.ascii	"plates/src/BldQuake.m3"
	.zero	1
.byte 24
.byte 1
.byte 4
.byte 16
.byte 36
.byte 0
.byte 0
.byte 24
.byte 1
.byte 4
.byte 37
.byte 0
.byte 0
.byte 4
.byte 11
.byte 1
.byte 15
.byte 2
.byte 16
.byte 148
.byte 120
.byte 127
.byte 123
.byte 2
.byte 4
.byte 4
.byte 0
.byte 4
.byte 4
.byte 0
.byte 3
.byte 15
.byte 2
.byte 16
.byte 116
.byte 101
.byte 248
.byte 80
.byte 16
.byte 237
.byte 232
.byte 34
.byte 249
	.ascii	"BldQuake.GenerateTFile.List"
	.zero	1
.byte 1
.byte 10
.byte 0
	.zero	6
	.long -1930326788
	.ascii	"BldQuake.T"
	.zero	1
	.ascii	"BldQuake.T"
	.zero	3
	.ident	"GCC: (GNU) cygnus-2.7.2-960712"
