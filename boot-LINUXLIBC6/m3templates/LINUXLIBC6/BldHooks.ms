	.file	"BldHooks.mc"
	.version	"01.01"
/ SRC Modula-3 version cygnus-2.7.2-960712 (i486--linuxelf) compiled by GNU C version egcs-2.91.66 19990314/Linux (egcs-1.1.2 release).
/ options passed:  -fno-strength-reduce -O2
/ options enabled:  -fdefer-pop -fcse-follow-jumps -fcse-skip-blocks
/ -fexpensive-optimizations -fthread-jumps -fpeephole -fforce-mem
/ -ffunction-cse -finline -fkeep-static-consts -fcaller-saves
/ -fpcc-struct-return -frerun-cse-after-loop -fschedule-insns2 -fcommon
/ -fverbose-asm -fgnu-linker -m80387 -mhard-float -mno-soft-float -mieee-fp
/ -mfp-ret-in-387 -mschedule-prologue -mcpu=i486 -march=i486

gcc2_compiled.:
.text
	.align 16
	.type	 BldHooks__DeleteFile,@function
BldHooks__DeleteFile:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	leal -16(%ebp),%eax
	pushl %esi
	leal -8(%ebp),%edi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	movl %edi,-16(%ebp)
	movl $1,-12(%ebp)
	movl $1,-8(%ebp)
	pushl %eax
	movl MM_BldHooks+100,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,-4(%ebp)
	addl $8,%esp
	testl %eax,%eax
	jne .L2
	pushl $196
	call _m3_fault
	.align 16
.L2:
	cmpl $0,4(%eax)
	jne .L3
	pushl $194
	call _m3_fault
	.align 16
.L3:
	movl (%eax),%eax
	movb $2,(%eax)
	pushl $0
	pushl %ebx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -4(%ebp),%edx
	addl $8,%esp
	testl %edx,%edx
	jne .L4
	pushl $212
	call _m3_fault
	.align 16
.L4:
	cmpl $0,4(%edx)
	jne .L5
	pushl $210
	call _m3_fault
	.align 16
.L5:
	movl (%edx),%eax
	movl %ecx,4(%eax)
	cmpl $0,4(%edx)
	jne .L7
	pushl $226
	call _m3_fault
	.align 16
.L7:
	movl (%edx),%eax
	movl $0,8(%eax)
	pushl $0
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+112
	pushl %esi
	call BldHooks__ExecHook
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe1:
	.size	 BldHooks__DeleteFile,.Lfe1-BldHooks__DeleteFile
	.align 16
	.type	 BldHooks__LinkFile,@function
BldHooks__LinkFile:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	leal -16(%ebp),%eax
	pushl %esi
	leal -8(%ebp),%esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%ebx
	movl %esi,-16(%ebp)
	movl $1,-12(%ebp)
	movl $2,-8(%ebp)
	pushl %eax
	movl MM_BldHooks+100,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,-4(%ebp)
	addl $8,%esp
	testl %edx,%edx
	jne .L9
	pushl $340
	call _m3_fault
	.align 16
.L9:
	cmpl $0,4(%edx)
	jne .L10
	pushl $338
	call _m3_fault
	.align 16
.L10:
	movl (%edx),%eax
	movb $2,(%eax)
	pushl $0
	pushl %ebx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L11
	pushl $356
	call _m3_fault
	.align 16
.L11:
	movl %eax,%edx
	cmpl $0,4(%edx)
	jne .L12
	pushl $354
	call _m3_fault
	.align 16
.L12:
	movl (%edx),%eax
	movl %ebx,4(%eax)
	cmpl $0,4(%edx)
	jne .L14
	pushl $370
	call _m3_fault
	.align 16
.L14:
	movl (%edx),%ecx
	movl $0,8(%ecx)
	cmpl $1,4(%edx)
	ja .L16
	pushl $386
	call _m3_fault
	.align 16
.L16:
	movl (%edx),%eax
	movb $2,12(%eax)
	pushl $0
	movl 16(%ebp),%esi
	pushl %esi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L17
	pushl $404
	call _m3_fault
	.align 16
.L17:
	movl %eax,%ecx
	cmpl $1,4(%ecx)
	ja .L18
	pushl $402
	call _m3_fault
	.align 16
.L18:
	movl (%ecx),%eax
	movl %ebx,16(%eax)
	cmpl $1,4(%ecx)
	ja .L20
	pushl $418
	call _m3_fault
	.align 16
.L20:
	movl (%ecx),%edx
	addl $12,%edx
	movl $0,8(%edx)
	pushl $0
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+136
	pushl %edi
	call BldHooks__ExecHook
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe2:
	.size	 BldHooks__LinkFile,.Lfe2-BldHooks__LinkFile
	.align 16
	.type	 BldHooks__EmacsCompile,@function
BldHooks__EmacsCompile:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	leal -16(%ebp),%eax
	pushl %esi
	leal -8(%ebp),%edi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	movl %edi,-16(%ebp)
	movl $1,-12(%ebp)
	movl $1,-8(%ebp)
	pushl %eax
	movl MM_BldHooks+100,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,-4(%ebp)
	addl $8,%esp
	testl %eax,%eax
	jne .L22
	pushl $532
	call _m3_fault
	.align 16
.L22:
	cmpl $0,4(%eax)
	jne .L23
	pushl $530
	call _m3_fault
	.align 16
.L23:
	movl (%eax),%eax
	movb $2,(%eax)
	pushl $0
	pushl %ebx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -4(%ebp),%edx
	addl $8,%esp
	testl %edx,%edx
	jne .L24
	pushl $548
	call _m3_fault
	.align 16
.L24:
	cmpl $0,4(%edx)
	jne .L25
	pushl $546
	call _m3_fault
	.align 16
.L25:
	movl (%edx),%eax
	movl %ecx,4(%eax)
	cmpl $0,4(%edx)
	jne .L27
	pushl $562
	call _m3_fault
	.align 16
.L27:
	movl (%edx),%eax
	movl $0,8(%eax)
	pushl $0
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+160
	pushl %esi
	call BldHooks__ExecHook
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe3:
	.size	 BldHooks__EmacsCompile,.Lfe3-BldHooks__EmacsCompile
	.align 16
	.type	 BldHooks__GenMapHooks,@function
BldHooks__GenMapHooks:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	movl 8(%ebp),%edx
	movl $0,-4(%ebp)
	pushl $0
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+188
	pushl %edx
	call BldHooks__ExecHook
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe4:
	.size	 BldHooks__GenMapHooks,.Lfe4-BldHooks__GenMapHooks
	.align 16
	.type	 BldHooks__BeforeDoM3Hooks,@function
BldHooks__BeforeDoM3Hooks:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	movl 8(%ebp),%edx
	movl $0,-4(%ebp)
	pushl $0
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+216
	pushl %edx
	call BldHooks__ExecHook
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe5:
	.size	 BldHooks__BeforeDoM3Hooks,.Lfe5-BldHooks__BeforeDoM3Hooks
	.align 16
	.type	 BldHooks__InstallUnitsHooks,@function
BldHooks__InstallUnitsHooks:
	pushl %ebp
	movl %esp,%ebp
	subl $100,%esp
	pushl %edi
	pushl %esi
	leal -36(%ebp),%ecx
	pushl %ebx
	movl $0,-24(%ebp)
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-76(%ebp)
	movl -76(%ebp),%edx
	movl %edx,-72(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-84(%ebp)
	leal -28(%ebp),%edx
	movl %edx,-88(%ebp)
	movl %edx,-36(%ebp)
	movl $1,-32(%ebp)
	movl $1,-28(%ebp)
	pushl %ecx
	movl MM_BldHooks+100,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edi
	movl %edi,-4(%ebp)
	addl $8,%esp
	testl %edi,%edi
	jne .L31
	pushl $1012
	call _m3_fault
	.align 16
.L31:
	cmpl $0,4(%edi)
	jne .L32
	pushl $1010
	call _m3_fault
	.align 16
.L32:
	movl (%edi),%eax
	movb $2,(%eax)
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L33
	pushl $1028
	call _m3_fault
	.align 16
.L33:
	movl %eax,%edi
	cmpl $0,4(%edi)
	jne .L34
	pushl $1026
	call _m3_fault
	.align 16
.L34:
	xorl %edx,%edx
	movb 12(%ebp),%dl
	movl (%edi),%eax
	movl MI_QValue+356(,%edx,4),%edx
	movl %edx,4(%eax)
	cmpl $0,4(%edi)
	jne .L36
	pushl $1042
	call _m3_fault
	.align 16
.L36:
	movl (%edi),%esi
	movl -76(%ebp),%ecx
	movl %ecx,8(%esi)
	pushl $1
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+248
	movl 8(%ebp),%edx
	pushl %edx
	call BldHooks__ExecHook
	addl $16,%esp
	testl %eax,%eax
	je .L38
	movl 8(%ebp),%ecx
	movl (%ecx),%eax
	leal -24(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %ecx
	call *%esi
	pushl %ebx
	movl 8(%ebp),%edx
	pushl %edx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-80(%ebp)
	movl (%esi),%eax
	movl -80(%ebp),%ecx
	movl 32(%eax),%esi
	pushl %ecx
	call *%esi
	addl $20,%esp
	testl %eax,%eax
	jle .L38
	movl -88(%ebp),%edx
	movl %edx,-36(%ebp)
	movl -80(%ebp),%ecx
	movl $1,-32(%ebp)
	movl (%ecx),%eax
	movl 32(%eax),%esi
	pushl %ecx
	call *%esi
	movl %eax,-28(%ebp)
	movl -84(%ebp),%edx
	pushl %edx
	movl MM_BldHooks+276,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,-76(%ebp)
	addl $12,%esp
	testl %eax,%eax
	jne .L39
	pushl $1188
	call _m3_fault
	.align 16
.L39:
	movl -72(%ebp),%ecx
	movl -76(%ebp),%edx
	movl %ecx,-92(%ebp)
	movl 4(%edx),%edx
	decl %edx
	movl %edx,-96(%ebp)
	jmp .L40
	.align 16
.L41:
	movl -80(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 44(%eax),%edi
	pushl %ebx
	movl -92(%ebp),%edx
	pushl %edx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+64,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-72(%ebp)
	movl MM_BldHooks+284,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl (%esi),%eax
	movl 24(%eax),%edi
	pushl $0
	pushl %esi
	call *%edi
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,-76(%ebp)
	jne .L42
	pushl $1220
	call _m3_fault
	.align 16
.L42:
	movl -76(%ebp),%ecx
	movl -92(%ebp),%edx
	cmpl %edx,4(%ecx)
	ja .L43
	pushl $1218
	call _m3_fault
	.align 16
.L43:
	movl -76(%ebp),%edx
	movl -92(%ebp),%ecx
	movl (%edx),%eax
	movl %ebx,(%eax,%ecx,4)
	movl -72(%ebp),%edx
	movl (%edx),%eax
	movl 20(%eax),%eax
	pushl %edx
	call *%eax
	movl %eax,-64(%ebp)
	addl $4,%esp
	jmp .L44
	.align 16
.L45:
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,-68(%ebp)
	movl MM_BldHooks+292,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl -68(%ebp),%edx
	movl %eax,%esi
	movl (%edx),%eax
	leal -36(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl $0
	pushl %edx
	call *%eax
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %esi,%edi
	movl %eax,%ebx
	movl %ebx,(%edi)
	movl -68(%ebp),%edx
	addl $32,%esp
	movl (%edx),%eax
	leal -48(%ebp),%ebx
	movl 44(%eax),%esi
	pushl %ebx
	pushl $1
	pushl %edx
	call *%esi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movb %al,4(%edi)
	movl -68(%ebp),%edx
	movl (%edx),%eax
	leal -60(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl $2
	pushl %edx
	call *%eax
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movb %al,5(%edi)
	movl %edi,-8(%ebp)
	addl $8,%esp
	cmpl $0,-76(%ebp)
	jne .L46
	pushl $1332
	call _m3_fault
	.align 16
.L46:
	movl -76(%ebp),%ecx
	movl -92(%ebp),%edx
	cmpl %edx,4(%ecx)
	ja .L47
	pushl $1330
	call _m3_fault
	.align 16
.L47:
	movl -76(%ebp),%edx
	movl -92(%ebp),%ecx
	movl (%edx),%eax
	movl (%eax,%ecx,4),%esi
	movl (%esi),%eax
	movl 8(%eax),%edi
	leal -8(%ebp),%eax
	pushl %eax
	movl -100(%ebp),%edx
	pushl %edx
	pushl %esi
	call *%edi
	addl $12,%esp
.L44:
	movl -64(%ebp),%ecx
	leal -24(%ebp),%ebx
	movl (%ecx),%eax
	leal -12(%ebp),%edx
	movl 4(%eax),%edi
	pushl %ebx
	movl %edx,-100(%ebp)
	pushl %edx
	pushl %ecx
	call *%edi
	addl $12,%esp
	testl %eax,%eax
	jne .L45
	incl -92(%ebp)
.L40:
	movl -96(%ebp),%ecx
	cmpl %ecx,-92(%ebp)
	jle .L41
.L38:
	movl -76(%ebp),%eax
	leal -112(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe6:
	.size	 BldHooks__InstallUnitsHooks,.Lfe6-BldHooks__InstallUnitsHooks
	.align 16
	.type	 BldHooks__WhereUnitsHooks,@function
BldHooks__WhereUnitsHooks:
	pushl %ebp
	movl %esp,%ebp
	subl $92,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-20(%ebp)
	movl $0,-16(%ebp)
	movl $0,-12(%ebp)
	movl $0,-76(%ebp)
	movl -76(%ebp),%edx
	movl %edx,-72(%ebp)
	movl %edx,-4(%ebp)
	movl %edx,-24(%ebp)
	pushl $1
	leal -24(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+304
	movl 8(%ebp),%ecx
	pushl %ecx
	call BldHooks__ExecHook
	addl $16,%esp
	testl %eax,%eax
	je .L53
	movl 8(%ebp),%edx
	movl (%edx),%eax
	leal -20(%ebp),%ebx
	movl 28(%eax),%esi
	pushl %ebx
	pushl %edx
	call *%esi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-80(%ebp)
	movl (%esi),%eax
	movl -80(%ebp),%edx
	movl 32(%eax),%esi
	pushl %edx
	call *%esi
	addl $20,%esp
	testl %eax,%eax
	jle .L53
	leal -28(%ebp),%ecx
	movl %ecx,-36(%ebp)
	movl -80(%ebp),%edx
	movl $1,-32(%ebp)
	movl (%edx),%eax
	leal -36(%ebp),%ebx
	movl 32(%eax),%esi
	pushl %edx
	call *%esi
	movl %eax,-28(%ebp)
	pushl %ebx
	movl MM_BldHooks+276,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,-76(%ebp)
	addl $12,%esp
	testl %eax,%eax
	jne .L54
	pushl $1780
	call _m3_fault
	.align 16
.L54:
	movl -72(%ebp),%ecx
	movl -76(%ebp),%edx
	movl %ecx,-84(%ebp)
	movl 4(%edx),%edx
	decl %edx
	movl %edx,-88(%ebp)
	jmp .L55
	.align 16
.L56:
	movl -80(%ebp),%ecx
	movl (%ecx),%eax
	leal -36(%ebp),%ebx
	movl 44(%eax),%edi
	pushl %ebx
	movl -84(%ebp),%edx
	pushl %edx
	pushl %ecx
	call *%edi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+64,%eax
	call *%eax
	movl %eax,%esi
	movl %esi,-72(%ebp)
	movl MM_BldHooks+284,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl (%esi),%eax
	movl 24(%eax),%edi
	pushl $0
	pushl %esi
	call *%edi
	movl %eax,%ebx
	addl $32,%esp
	cmpl $0,-76(%ebp)
	jne .L57
	pushl $1812
	call _m3_fault
	.align 16
.L57:
	movl -76(%ebp),%ecx
	movl -84(%ebp),%edx
	cmpl %edx,4(%ecx)
	ja .L58
	pushl $1810
	call _m3_fault
	.align 16
.L58:
	movl -76(%ebp),%edx
	movl -84(%ebp),%ecx
	movl (%edx),%eax
	movl %ebx,(%eax,%ecx,4)
	movl -72(%ebp),%edx
	movl (%edx),%eax
	movl 20(%eax),%eax
	pushl %edx
	call *%eax
	movl %eax,-64(%ebp)
	addl $4,%esp
	jmp .L59
	.align 16
.L60:
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+68,%eax
	call *%eax
	movl %eax,-68(%ebp)
	movl MM_BldHooks+292,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl -68(%ebp),%edx
	movl %eax,%esi
	movl (%edx),%eax
	leal -36(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl $0
	pushl %edx
	call *%eax
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+56,%eax
	call *%eax
	movl %esi,%edi
	movl %eax,%ebx
	movl %ebx,(%edi)
	movl -68(%ebp),%edx
	addl $32,%esp
	movl (%edx),%eax
	leal -48(%ebp),%ebx
	movl 44(%eax),%esi
	pushl %ebx
	pushl $1
	pushl %edx
	call *%esi
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movb %al,4(%edi)
	movl -68(%ebp),%edx
	movl (%edx),%eax
	leal -60(%ebp),%ebx
	movl 44(%eax),%eax
	pushl %ebx
	pushl $2
	pushl %edx
	call *%eax
	addl $32,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl MI_QVal+48,%eax
	call *%eax
	movb %al,5(%edi)
	movl %edi,-4(%ebp)
	addl $8,%esp
	cmpl $0,-76(%ebp)
	jne .L61
	pushl $1924
	call _m3_fault
	.align 16
.L61:
	movl -76(%ebp),%ecx
	movl -84(%ebp),%edx
	cmpl %edx,4(%ecx)
	ja .L62
	pushl $1922
	call _m3_fault
	.align 16
.L62:
	movl -76(%ebp),%edx
	movl -84(%ebp),%ecx
	movl (%edx),%eax
	movl (%eax,%ecx,4),%esi
	movl (%esi),%eax
	movl 8(%eax),%edi
	leal -4(%ebp),%eax
	pushl %eax
	movl -92(%ebp),%edx
	pushl %edx
	pushl %esi
	call *%edi
	addl $12,%esp
.L59:
	movl -64(%ebp),%ecx
	leal -20(%ebp),%ebx
	movl (%ecx),%eax
	leal -8(%ebp),%edx
	movl 4(%eax),%edi
	pushl %ebx
	movl %edx,-92(%ebp)
	pushl %edx
	pushl %ecx
	call *%edi
	addl $12,%esp
	testl %eax,%eax
	jne .L60
	incl -84(%ebp)
.L55:
	movl -88(%ebp),%ecx
	cmpl %ecx,-84(%ebp)
	jle .L56
.L53:
	movl -76(%ebp),%eax
	leal -104(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe7:
	.size	 BldHooks__WhereUnitsHooks,.Lfe7-BldHooks__WhereUnitsHooks
	.align 16
	.type	 BldHooks__CompileC,@function
BldHooks__CompileC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	leal -16(%ebp),%eax
	pushl %esi
	leal -8(%ebp),%esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 16(%ebp),%edi
	movl %esi,-16(%ebp)
	movl $1,-12(%ebp)
	movl $3,-8(%ebp)
	pushl %eax
	movl MM_BldHooks+100,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,-4(%ebp)
	addl $8,%esp
	testl %edx,%edx
	jne .L67
	pushl $2132
	call _m3_fault
	.align 16
.L67:
	cmpl $0,4(%edx)
	jne .L68
	pushl $2130
	call _m3_fault
	.align 16
.L68:
	movl (%edx),%eax
	movb $2,(%eax)
	pushl $0
	movl 12(%ebp),%esi
	pushl %esi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L69
	pushl $2148
	call _m3_fault
	.align 16
.L69:
	movl %eax,%edx
	cmpl $0,4(%edx)
	jne .L70
	pushl $2146
	call _m3_fault
	.align 16
.L70:
	movl (%edx),%eax
	movl %ecx,4(%eax)
	cmpl $1,4(%edx)
	ja .L72
	pushl $2162
	call _m3_fault
	.align 16
.L72:
	movl (%edx),%eax
	movb $2,12(%eax)
	pushl $0
	pushl %edi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L73
	pushl $2180
	call _m3_fault
	.align 16
.L73:
	movl %eax,%edx
	cmpl $1,4(%edx)
	ja .L74
	pushl $2178
	call _m3_fault
	.align 16
.L74:
	movl (%edx),%eax
	movl %ecx,16(%eax)
	cmpl $2,4(%edx)
	ja .L76
	pushl $2194
	call _m3_fault
	.align 16
.L76:
	movl (%edx),%eax
	movb $4,24(%eax)
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L77
	pushl $2212
	call _m3_fault
	.align 16
.L77:
	movl %eax,%edx
	cmpl $2,4(%edx)
	ja .L78
	pushl $2210
	call _m3_fault
	.align 16
.L78:
	movl (%edx),%ecx
	addl $24,%ecx
	movl 20(%ebp),%esi
	movl %esi,8(%ecx)
	pushl $1
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+336
	pushl %ebx
	call BldHooks__ExecHook
	addl $16,%esp
	testl %eax,%eax
	je .L79
	movl (%ebx),%eax
	movl 28(%eax),%ecx
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L80
	pushl $2244
	call _m3_fault
	.align 16
.L80:
	movl %eax,%edx
	cmpl $0,4(%edx)
	jne .L81
	pushl $2242
	call _m3_fault
	.align 16
.L81:
	movl (%edx),%eax
	pushl %eax
	pushl %ebx
	call *%ecx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L82
	pushl $2260
	call _m3_fault
	.align 16
.L82:
	movl %eax,%edx
	cmpl $0,4(%edx)
	jne .L83
	pushl $2258
	call _m3_fault
	.align 16
.L83:
	movl (%edx),%eax
	pushl %eax
	pushl %ebx
	movl MI_QVal+52,%eax
	call *%eax
	movl %eax,%ecx
	jmp .L84
	.align 16
.L79:
	movl $-1,%eax
.L84:
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe8:
	.size	 BldHooks__CompileC,.Lfe8-BldHooks__CompileC
	.align 16
	.type	 BldHooks__M3Link,@function
BldHooks__M3Link:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	leal -16(%ebp),%eax
	pushl %esi
	leal -8(%ebp),%esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 16(%ebp),%edi
	movl %esi,-16(%ebp)
	movl $1,-12(%ebp)
	movl $3,-8(%ebp)
	pushl %eax
	movl MM_BldHooks+100,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,-4(%ebp)
	addl $8,%esp
	testl %edx,%edx
	jne .L86
	pushl $2420
	call _m3_fault
	.align 16
.L86:
	cmpl $0,4(%edx)
	jne .L87
	pushl $2418
	call _m3_fault
	.align 16
.L87:
	movl (%edx),%eax
	movb $2,(%eax)
	pushl $0
	movl 12(%ebp),%esi
	pushl %esi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L88
	pushl $2436
	call _m3_fault
	.align 16
.L88:
	movl %eax,%edx
	cmpl $0,4(%edx)
	jne .L89
	pushl $2434
	call _m3_fault
	.align 16
.L89:
	movl (%edx),%eax
	movl %ecx,4(%eax)
	cmpl $1,4(%edx)
	ja .L91
	pushl $2450
	call _m3_fault
	.align 16
.L91:
	movl (%edx),%eax
	movb $4,12(%eax)
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L92
	pushl $2468
	call _m3_fault
	.align 16
.L92:
	movl %eax,%edx
	cmpl $1,4(%edx)
	ja .L93
	pushl $2466
	call _m3_fault
	.align 16
.L93:
	movl (%edx),%eax
	addl $12,%eax
	movl %edi,8(%eax)
	movl %edx,%eax
	cmpl $2,4(%eax)
	ja .L95
	pushl $2482
	call _m3_fault
	.align 16
.L95:
	movl (%eax),%eax
	movb $4,24(%eax)
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L96
	pushl $2500
	call _m3_fault
	.align 16
.L96:
	cmpl $2,4(%eax)
	ja .L97
	pushl $2498
	call _m3_fault
	.align 16
.L97:
	movl (%eax),%edx
	addl $24,%edx
	movl 20(%ebp),%esi
	movl %esi,8(%edx)
	pushl $1
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+364
	pushl %ebx
	call BldHooks__ExecHook
	addl $16,%esp
	testl %eax,%eax
	je .L98
	movl (%ebx),%eax
	movl 28(%eax),%edx
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L99
	pushl $2532
	call _m3_fault
	.align 16
.L99:
	cmpl $0,4(%eax)
	jne .L100
	pushl $2530
	call _m3_fault
	.align 16
.L100:
	movl (%eax),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L101
	pushl $2548
	call _m3_fault
	.align 16
.L101:
	cmpl $0,4(%eax)
	jne .L102
	pushl $2546
	call _m3_fault
	.align 16
.L102:
	movl (%eax),%eax
	pushl %eax
	pushl %ebx
	movl MI_QVal+52,%eax
	call *%eax
	movl %eax,%ecx
	jmp .L103
	.align 16
.L98:
	movl $-1,%eax
.L103:
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe9:
	.size	 BldHooks__M3Link,.Lfe9-BldHooks__M3Link
	.align 16
	.type	 BldHooks__M3MakeLib,@function
BldHooks__M3MakeLib:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	leal -16(%ebp),%eax
	pushl %esi
	leal -8(%ebp),%esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 16(%ebp),%edi
	movl %esi,-16(%ebp)
	movl $1,-12(%ebp)
	movl $3,-8(%ebp)
	pushl %eax
	movl MM_BldHooks+100,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,-4(%ebp)
	addl $8,%esp
	testl %edx,%edx
	jne .L105
	pushl $2708
	call _m3_fault
	.align 16
.L105:
	cmpl $0,4(%edx)
	jne .L106
	pushl $2706
	call _m3_fault
	.align 16
.L106:
	movl (%edx),%eax
	movb $2,(%eax)
	pushl $0
	movl 12(%ebp),%esi
	pushl %esi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L107
	pushl $2724
	call _m3_fault
	.align 16
.L107:
	movl %eax,%edx
	cmpl $0,4(%edx)
	jne .L108
	pushl $2722
	call _m3_fault
	.align 16
.L108:
	movl (%edx),%eax
	movl %ecx,4(%eax)
	cmpl $1,4(%edx)
	ja .L110
	pushl $2738
	call _m3_fault
	.align 16
.L110:
	movl (%edx),%eax
	movb $4,12(%eax)
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L111
	pushl $2756
	call _m3_fault
	.align 16
.L111:
	movl %eax,%edx
	cmpl $1,4(%edx)
	ja .L112
	pushl $2754
	call _m3_fault
	.align 16
.L112:
	movl (%edx),%eax
	addl $12,%eax
	movl %edi,8(%eax)
	movl %edx,%eax
	cmpl $2,4(%eax)
	ja .L114
	pushl $2770
	call _m3_fault
	.align 16
.L114:
	movl (%eax),%eax
	movb $4,24(%eax)
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L115
	pushl $2788
	call _m3_fault
	.align 16
.L115:
	cmpl $2,4(%eax)
	ja .L116
	pushl $2786
	call _m3_fault
	.align 16
.L116:
	movl (%eax),%edx
	addl $24,%edx
	movl 20(%ebp),%esi
	movl %esi,8(%edx)
	pushl $1
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+384
	pushl %ebx
	call BldHooks__ExecHook
	addl $16,%esp
	testl %eax,%eax
	je .L117
	movl (%ebx),%eax
	movl 28(%eax),%edx
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L118
	pushl $2820
	call _m3_fault
	.align 16
.L118:
	cmpl $0,4(%eax)
	jne .L119
	pushl $2818
	call _m3_fault
	.align 16
.L119:
	movl (%eax),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L120
	pushl $2836
	call _m3_fault
	.align 16
.L120:
	cmpl $0,4(%eax)
	jne .L121
	pushl $2834
	call _m3_fault
	.align 16
.L121:
	movl (%eax),%eax
	pushl %eax
	pushl %ebx
	movl MI_QVal+52,%eax
	call *%eax
	movl %eax,%ecx
	jmp .L122
	.align 16
.L117:
	movl $-1,%eax
.L122:
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe10:
	.size	 BldHooks__M3MakeLib,.Lfe10-BldHooks__M3MakeLib
	.align 16
	.type	 BldHooks__NoteShlib,@function
BldHooks__NoteShlib:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	leal -16(%ebp),%eax
	pushl %esi
	leal -8(%ebp),%ecx
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	movl %ecx,-16(%ebp)
	movl $1,-12(%ebp)
	movl $1,-8(%ebp)
	pushl %eax
	movl MM_BldHooks+100,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,-4(%ebp)
	movb $2,-16(%ebp)
	pushl $0
	pushl %ebx
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,-12(%ebp)
	movl $0,-8(%ebp)
	movl -4(%ebp),%eax
	addl $16,%esp
	testl %eax,%eax
	jne .L124
	pushl $2980
	call _m3_fault
	.align 16
.L124:
	cmpl $0,4(%eax)
	jne .L125
	pushl $2978
	call _m3_fault
	.align 16
.L125:
	movl (%eax),%edx
	movl -16(%ebp),%eax
	movl %eax,(%edx)
	movl -12(%ebp),%eax
	movl %eax,4(%edx)
	movl -8(%ebp),%eax
	movl %eax,8(%edx)
	pushl $0
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+408
	pushl %esi
	call BldHooks__ExecHook
	testl %eax,%eax
	je .L126
	xorl %eax,%eax
	jmp .L127
	.align 16
.L126:
	movl $-1,%eax
.L127:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe11:
	.size	 BldHooks__NoteShlib,.Lfe11-BldHooks__NoteShlib
	.align 16
	.type	 BldHooks__M3Assemble,@function
BldHooks__M3Assemble:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	leal -16(%ebp),%eax
	pushl %esi
	leal -8(%ebp),%esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 16(%ebp),%edi
	movl %esi,-16(%ebp)
	movl $1,-12(%ebp)
	movl $2,-8(%ebp)
	pushl %eax
	movl MM_BldHooks+100,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,-4(%ebp)
	addl $8,%esp
	testl %edx,%edx
	jne .L129
	pushl $3156
	call _m3_fault
	.align 16
.L129:
	cmpl $0,4(%edx)
	jne .L130
	pushl $3154
	call _m3_fault
	.align 16
.L130:
	movl (%edx),%eax
	movb $2,(%eax)
	pushl $0
	movl 12(%ebp),%esi
	pushl %esi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L131
	pushl $3172
	call _m3_fault
	.align 16
.L131:
	movl %eax,%edx
	cmpl $0,4(%edx)
	jne .L132
	pushl $3170
	call _m3_fault
	.align 16
.L132:
	movl (%edx),%eax
	movl %ecx,4(%eax)
	cmpl $1,4(%edx)
	ja .L134
	pushl $3186
	call _m3_fault
	.align 16
.L134:
	movl (%edx),%eax
	movb $2,12(%eax)
	pushl $0
	pushl %edi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L135
	pushl $3204
	call _m3_fault
	.align 16
.L135:
	movl %eax,%edx
	cmpl $1,4(%edx)
	ja .L136
	pushl $3202
	call _m3_fault
	.align 16
.L136:
	movl (%edx),%eax
	movl %ecx,16(%eax)
	pushl $1
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+436
	pushl %ebx
	call BldHooks__ExecHook
	addl $16,%esp
	testl %eax,%eax
	je .L137
	movl (%ebx),%eax
	movl 28(%eax),%edx
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L138
	pushl $3236
	call _m3_fault
	.align 16
.L138:
	cmpl $0,4(%eax)
	jne .L139
	pushl $3234
	call _m3_fault
	.align 16
.L139:
	movl (%eax),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L140
	pushl $3252
	call _m3_fault
	.align 16
.L140:
	cmpl $0,4(%eax)
	jne .L141
	pushl $3250
	call _m3_fault
	.align 16
.L141:
	movl (%eax),%eax
	pushl %eax
	pushl %ebx
	movl MI_QVal+52,%eax
	call *%eax
	movl %eax,%ecx
	jmp .L142
	.align 16
.L137:
	movl $-1,%eax
.L142:
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe12:
	.size	 BldHooks__M3Assemble,.Lfe12-BldHooks__M3Assemble
	.align 16
	.type	 BldHooks__M3Backend,@function
BldHooks__M3Backend:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %edi
	leal -16(%ebp),%eax
	pushl %esi
	leal -8(%ebp),%esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 16(%ebp),%edi
	movl %esi,-16(%ebp)
	movl $1,-12(%ebp)
	movl $2,-8(%ebp)
	pushl %eax
	movl MM_BldHooks+100,%eax
	pushl %eax
	movl MI_RTHooks+84,%eax
	call *%eax
	movl %eax,%edx
	movl %edx,-4(%ebp)
	addl $8,%esp
	testl %edx,%edx
	jne .L144
	pushl $3412
	call _m3_fault
	.align 16
.L144:
	cmpl $0,4(%edx)
	jne .L145
	pushl $3410
	call _m3_fault
	.align 16
.L145:
	movl (%edx),%eax
	movb $2,(%eax)
	pushl $0
	movl 12(%ebp),%esi
	pushl %esi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L146
	pushl $3428
	call _m3_fault
	.align 16
.L146:
	movl %eax,%edx
	cmpl $0,4(%edx)
	jne .L147
	pushl $3426
	call _m3_fault
	.align 16
.L147:
	movl (%edx),%eax
	movl %ecx,4(%eax)
	cmpl $1,4(%edx)
	ja .L149
	pushl $3442
	call _m3_fault
	.align 16
.L149:
	movl (%edx),%eax
	movb $2,12(%eax)
	pushl $0
	pushl %edi
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%ecx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L150
	pushl $3460
	call _m3_fault
	.align 16
.L150:
	movl %eax,%edx
	cmpl $1,4(%edx)
	ja .L151
	pushl $3458
	call _m3_fault
	.align 16
.L151:
	movl (%edx),%eax
	movl %ecx,16(%eax)
	pushl $1
	leal -4(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks+460
	pushl %ebx
	call BldHooks__ExecHook
	addl $16,%esp
	testl %eax,%eax
	je .L152
	movl (%ebx),%eax
	movl 28(%eax),%edx
	movl -4(%ebp),%eax
	testl %eax,%eax
	jne .L153
	pushl $3492
	call _m3_fault
	.align 16
.L153:
	cmpl $0,4(%eax)
	jne .L154
	pushl $3490
	call _m3_fault
	.align 16
.L154:
	movl (%eax),%eax
	pushl %eax
	pushl %ebx
	call *%edx
	movl -4(%ebp),%eax
	addl $8,%esp
	testl %eax,%eax
	jne .L155
	pushl $3508
	call _m3_fault
	.align 16
.L155:
	cmpl $0,4(%eax)
	jne .L156
	pushl $3506
	call _m3_fault
	.align 16
.L156:
	movl (%eax),%eax
	pushl %eax
	pushl %ebx
	movl MI_QVal+52,%eax
	call *%eax
	movl %eax,%ecx
	jmp .L157
	.align 16
.L152:
	movl $-1,%eax
.L157:
	leal -28(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe13:
	.size	 BldHooks__M3Backend,.Lfe13-BldHooks__M3Backend
	.align 16
	.type	 BldHooks__ExecHook,@function
BldHooks__ExecHook:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%eax
	movl 16(%ebp),%edi
	movl $0,-12(%ebp)
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	pushl $0
	pushl %eax
	movl MI_M3ID+44,%eax
	call *%eax
	movl %eax,%edx
	movl (%esi),%eax
	leal -12(%ebp),%ebx
	movl 12(%eax),%ecx
	pushl %ebx
	pushl %edx
	pushl %esi
	call *%ecx
	addl $20,%esp
	testl %eax,%eax
	je .L159
	pushl %ebx
	pushl %esi
	movl MI_QVal+72,%eax
	call *%eax
	movl %eax,%ecx
	movl (%esi),%eax
	movl 40(%eax),%edx
	xorl %eax,%eax
	movb 20(%ebp),%al
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	pushl %ecx
	pushl %esi
	call *%edx
	movl $1,%eax
.L159:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe14:
	.size	 BldHooks__ExecHook,.Lfe14-BldHooks__ExecHook
	.align 16
	.type	 _m3_fault,@function
_m3_fault:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	pushl %eax
	pushl $MM_BldHooks
	movl MI_RTHooks+108,%eax
	call *%eax
	.align 16
.Lfe15:
	.size	 _m3_fault,.Lfe15-_m3_fault
.globl MM_BldHooks
.data
	.align 4
	.type	 MM_BldHooks,@object
	.size	 MM_BldHooks,960
MM_BldHooks:
	.long MM_BldHooks+816
	.zero	4
	.long MM_BldHooks+100
	.zero	8
	.long MM_BldHooks+644
	.zero	20
	.long BldHooks__DeleteFile
	.long BldHooks__LinkFile
	.long BldHooks__EmacsCompile
	.long BldHooks__GenMapHooks
	.long BldHooks__BeforeDoM3Hooks
	.long BldHooks__InstallUnitsHooks
	.long BldHooks__WhereUnitsHooks
	.long BldHooks__CompileC
	.long BldHooks__M3Link
	.long BldHooks__M3MakeLib
	.long BldHooks__NoteShlib
	.long BldHooks__M3Assemble
	.long BldHooks__M3Backend
	.long BldHooks__ExecHook
	.long MM_BldHooks+276
	.long 802853858
	.long 2
	.long MM_BldHooks+120
	.long 12
	.ascii	"delete_file"
	.zero	1
	.long 2
	.long MM_BldHooks+144
	.long 10
	.ascii	"link_file"
	.zero	3
	.long 2
	.long MM_BldHooks+168
	.long 14
	.ascii	"emacs_compile"
	.zero	3
	.long 2
	.long MM_BldHooks+196
	.long 14
	.ascii	"gen_map_hooks"
	.zero	3
	.long 2
	.long MM_BldHooks+224
	.long 19
	.ascii	"before_do_m3_hooks"
	.zero	2
	.long 2
	.long MM_BldHooks+256
	.long 20
	.ascii	"install_units_hooks"
	.zero	1
	.long MM_BldHooks+284
	.long 1967233573
	.long MM_BldHooks+292
	.long 115997026
	.zero	4
	.long 655008973
	.long 2
	.long MM_BldHooks+312
	.long 18
	.ascii	"where_units_hooks"
	.zero	3
	.long 2
	.long MM_BldHooks+344
	.long 13
	.ascii	"m3_compile_c"
	.zero	4
	.long 2
	.long MM_BldHooks+372
	.long 8
	.ascii	"m3_link"
	.zero	1
	.long 2
	.long MM_BldHooks+392
	.long 12
	.ascii	"m3_make_lib"
	.zero	1
	.long 2
	.long MM_BldHooks+416
	.long 14
	.ascii	"m3_note_shlib"
	.zero	3
	.long 2
	.long MM_BldHooks+444
	.long 12
	.ascii	"m3_assemble"
	.zero	1
	.long 2
	.long MM_BldHooks+468
	.long 11
	.ascii	"m3_backend"
	.zero	2
	.ascii	"ExecHook"
	.zero	1
	.ascii	"M3Backend"
	.zero	1
	.ascii	"M3Assemble"
	.zero	1
	.ascii	"NoteShlib"
	.zero	1
	.ascii	"M3MakeLib"
	.zero	1
	.ascii	"M3Link"
	.zero	1
	.ascii	"CompileC"
	.zero	1
	.ascii	"WhereUnitsHooks"
	.zero	1
	.ascii	"InstallUnitsHooks"
	.zero	1
	.ascii	"BeforeDoM3Hooks"
	.zero	1
	.ascii	"GenMapHooks"
	.zero	1
	.ascii	"EmacsCompile"
	.zero	1
	.ascii	"LinkFile"
	.zero	1
	.ascii	"DeleteFile"
	.zero	4
	.long BldHooks__ExecHook
	.long MM_BldHooks+480
	.long MI_BldHooks+200
	.long BldHooks__M3Backend
	.long MM_BldHooks+489
	.long MI_BldHooks+196
	.long BldHooks__M3Assemble
	.long MM_BldHooks+499
	.long MI_BldHooks+192
	.long BldHooks__NoteShlib
	.long MM_BldHooks+510
	.long MI_BldHooks+188
	.long BldHooks__M3MakeLib
	.long MM_BldHooks+520
	.long MI_BldHooks+184
	.long BldHooks__M3Link
	.long MM_BldHooks+530
	.long MI_BldHooks+180
	.long BldHooks__CompileC
	.long MM_BldHooks+537
	.long MI_BldHooks+176
	.long BldHooks__WhereUnitsHooks
	.long MM_BldHooks+546
	.long MI_BldHooks+172
	.long BldHooks__InstallUnitsHooks
	.long MM_BldHooks+562
	.long MI_BldHooks+64
	.long BldHooks__BeforeDoM3Hooks
	.long MM_BldHooks+580
	.long MI_BldHooks+60
	.long BldHooks__GenMapHooks
	.long MM_BldHooks+596
	.long MI_BldHooks+56
	.long BldHooks__EmacsCompile
	.long MM_BldHooks+608
	.long MI_BldHooks+52
	.long BldHooks__LinkFile
	.long MM_BldHooks+621
	.long MI_BldHooks+48
	.long BldHooks__DeleteFile
	.long MM_BldHooks+630
	.long MI_BldHooks+44
	.zero	4
	.ascii	"/home/ftp/tmp/pm3/tmp/pm3-1.1.15/language/modula3/m3compiler"
	.ascii	"/m3bootstrap/LINUXLIBC6/pm3-LINUXLIBC6/boot-LINUXLIBC6/m3tem"
	.ascii	"plates/src/BldHooks.m3"
	.zero	2
	.ident	"GCC: (GNU) cygnus-2.7.2-960712"
