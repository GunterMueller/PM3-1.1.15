	.file	"PklTipeMap.mc"
	.version	"01.01"
/ SRC Modula-3 version cygnus-2.7.2-960712 (i486--linuxelf) compiled by GNU C version egcs-2.91.66 19990314/Linux (egcs-1.1.2 release).
/ options passed:  -fno-strength-reduce -O2
/ options enabled:  -fdefer-pop -fcse-follow-jumps -fcse-skip-blocks
/ -fexpensive-optimizations -fthread-jumps -fpeephole -fforce-mem
/ -ffunction-cse -finline -fkeep-static-consts -fcaller-saves
/ -fpcc-struct-return -frerun-cse-after-loop -fschedule-insns2 -fcommon
/ -fverbose-asm -fgnu-linker -m80387 -mhard-float -mno-soft-float -mieee-fp
/ -mfp-ret-in-387 -mschedule-prologue -mcpu=i486 -march=i486

gcc2_compiled.:
.text
	.align 16
	.type	 PklTipeMap__Read,@function
PklTipeMap__Read:
	pushl %ebp
	movl %esp,%ebp
	subl $220,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
.L2:
	movl $MM_PklTipeMap+580,-16(%ebp)
	movl $4,-20(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-24(%ebp)
	leal -24(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHeap+44,%eax
	call *%eax
	movl %eax,-212(%ebp)
	movl $1,-208(%ebp)
	addl $4,%esp
.L3:
	movl $MM_PklTipeMap+600,-196(%ebp)
	movl $0,-200(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-204(%ebp)
	leal -204(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -184(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,-220(%ebp)
	addl $4,%esp
	testl %eax,%eax
	jne .L4
	leal -4(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	leal -12(%ebp),%eax
	pushl %eax
	movl 48(%ebp),%eax
	pushl %eax
	movl 44(%ebp),%eax
	pushl %eax
	movl 40(%ebp),%eax
	pushl %eax
	movl 36(%ebp),%eax
	pushl %eax
	movl 32(%ebp),%eax
	pushl %eax
	movl 28(%ebp),%eax
	pushl %eax
	movl 24(%ebp),%eax
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	movl 16(%ebp),%ecx
	pushl %ecx
	movl MI_ConvertPacking+384,%eax
	call *%eax
	movl %eax,-216(%ebp)
	movl 52(%ebp),%edx
	movl -12(%ebp),%eax
	addl $48,%esp
	cmpl %eax,4(%edx)
	je .L5
	pushl $MM_PklTipeMap+612
	pushl $MI_PklTipeMap+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $8,%esp
.L5:
	cmpl $0,-12(%ebp)
	jle .L6
	movl 52(%ebp),%eax
	movl -220(%ebp),%edx
	movl 4(%eax),%ebx
	decl %ebx
	jmp .L7
	.align 16
.L8:
	movl 52(%ebp),%eax
	cmpl %edx,4(%eax)
	ja .L9
	pushl $930
	call _m3_fault
	.align 16
.L9:
	movl (%eax),%eax
	movl -208(%ebp),%ecx
	imull (%eax,%edx,4),%ecx
	movl %ecx,-208(%ebp)
	incl %edx
.L7:
	cmpl %ebx,%edx
	jle .L8
	movl -8(%ebp),%edx
	testb $7,%dl
	jne .L11
	movl -4(%ebp),%eax
	testb $7,%al
	je .L12
.L11:
	pushl $1008
	call _m3_fault
	.align 16
.L12:
	sarl $3,%edx
	movl %edx,-8(%ebp)
	sarl $3,%eax
	movl -216(%ebp),%ecx
	movl %eax,-4(%ebp)
	movl (%ecx),%eax
	movl -208(%ebp),%ecx
	movl 12(%eax),%eax
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl -212(%ebp),%ecx
	pushl %ecx
	movl -216(%ebp),%ecx
	pushl %ecx
	call *%eax
	movl %eax,%edx
	movl -208(%ebp),%eax
	imull -4(%ebp),%eax
	addl -212(%ebp),%eax
	addl $16,%esp
	cmpl %edx,%eax
	je .L14
	pushl $1216
	call _m3_fault
	.align 16
.L6:
	movl -216(%ebp),%ecx
	movl (%ecx),%eax
	movl 12(%eax),%edx
	pushl $1
	movl 8(%ebp),%ecx
	pushl %ecx
	movl -212(%ebp),%ecx
	pushl %ecx
	movl -216(%ebp),%ecx
	pushl %ecx
	call *%edx
	movl %eax,%ebx
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHeap+48,%eax
	call *%eax
	movl %eax,%edi
	movl %ebx,%eax
	subl -212(%ebp),%eax
	addl $20,%esp
	cmpl %edi,%eax
	je .L14
	pushl $10
	pushl %edi
	movl MI_Fmt+52,%eax
	call *%eax
	pushl %eax
	pushl $MM_PklTipeMap+664
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_PklTipeMap+704
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl $10
	subl -212(%ebp),%ebx
	pushl %ebx
	movl MI_Fmt+52,%eax
	call *%eax
	addl $32,%esp
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_PklTipeMap+752
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl -220(%ebp),%ecx
	pushl %ecx
	pushl %eax
	movl MI_IO+44,%eax
	call *%eax
	movl -216(%ebp),%ecx
	movl (%ecx),%eax
	movl 20(%eax),%eax
	pushl %ecx
	call *%eax
	addl $28,%esp
	cmpl %edi,%ebx
	je .L14
	pushl $1424
	call _m3_fault
	.align 16
.L14:
	movl -204(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L19
	.align 16
.L4:
	movl -188(%ebp),%eax
	pushl %eax
	pushl $MM_PklTipeMap+784
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl $MI_PklTipeMap+44
	movl MI_RTHooks+52,%eax
	call *%eax
.L19:
	movl -24(%ebp),%eax
	leal -232(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe1:
	.size	 PklTipeMap__Read,.Lfe1-PklTipeMap__Read
	.align 16
	.type	 PklTipeMap__VisitRead,@function
PklTipeMap__VisitRead:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%eax
	movb 16(%ebp),%bl
	movl 12(%ebp),%ecx
	movl 1032(%eax),%eax
	subl %eax,%ecx
	pushl $10
	movl %ecx,%eax
	pushl %eax
	movl MI_Fmt+52,%eax
	call *%eax
	pushl %eax
	pushl $MM_PklTipeMap+828
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_PklTipeMap+852
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%edx
	xorl %eax,%eax
	movb %bl,%al
	movl MM_PklTipeMap+148(,%eax,4),%eax
	pushl %eax
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	addl $32,%esp
	pushl $MM_PklTipeMap+868
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $0
	pushl %eax
	movl MI_IO+44,%eax
	call *%eax
	movl -4(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe2:
	.size	 PklTipeMap__VisitRead,.Lfe2-PklTipeMap__VisitRead
	.align 16
	.type	 PklTipeMap__Write,@function
PklTipeMap__Write:
	pushl %ebp
	movl %esp,%ebp
	subl $224,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
.L22:
	movl $MM_PklTipeMap+880,-16(%ebp)
	movl $4,-20(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-24(%ebp)
	leal -24(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHeap+44,%eax
	call *%eax
	movl %eax,-212(%ebp)
	movl $1,-208(%ebp)
	addl $4,%esp
.L23:
	movl $MM_PklTipeMap+600,-196(%ebp)
	movl $0,-200(%ebp)
	movl RTThread__handlerStack,%eax
	movl %eax,-204(%ebp)
	leal -204(%ebp),%ecx
	movl %ecx,RTThread__handlerStack
	leal -184(%ebp),%eax
	pushl %eax
	call _setjmp
	movl %eax,-216(%ebp)
	addl $4,%esp
	testl %eax,%eax
	jne .L24
	leal -4(%ebp),%eax
	pushl %eax
	leal -8(%ebp),%eax
	pushl %eax
	leal -12(%ebp),%eax
	pushl %eax
	movl 32(%ebp),%ebx
	pushl %ebx
	movl 28(%ebp),%ecx
	pushl %ecx
	movl 24(%ebp),%edx
	pushl %edx
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ebx
	pushl %ecx
	pushl %edx
	pushl %eax
	movl 16(%ebp),%ecx
	pushl %ecx
	movl MI_ConvertPacking+384,%eax
	call *%eax
	movl %eax,%edi
	addl $48,%esp
	movl 40(%ebp),%ecx
	cmpl %ecx,-12(%ebp)
	je .L25
	pushl $MM_PklTipeMap+612
	pushl $MI_PklTipeMap+44
	movl MI_RTHooks+52,%eax
	call *%eax
	addl $8,%esp
.L25:
	cmpl $0,-12(%ebp)
	jle .L26
	movl 36(%ebp),%eax
	movl -216(%ebp),%edx
	movl 4(%eax),%ebx
	decl %ebx
	jmp .L27
	.align 16
.L28:
	movl 36(%ebp),%eax
	cmpl %edx,4(%eax)
	ja .L29
	pushl $2466
	call _m3_fault
	.align 16
.L29:
	movl (%eax),%eax
	movl -208(%ebp),%ecx
	imull (%eax,%edx,4),%ecx
	movl %ecx,-208(%ebp)
	incl %edx
.L27:
	cmpl %ebx,%edx
	jle .L28
	movl -8(%ebp),%edx
	testb $7,%dl
	jne .L31
	movl -4(%ebp),%eax
	testb $7,%al
	je .L32
.L31:
	pushl $2544
	call _m3_fault
	.align 16
.L32:
	cmpl %eax,%edx
	je .L33
	pushl $2576
	call _m3_fault
	.align 16
.L33:
	sarl $3,%eax
	movl %eax,-4(%ebp)
	movl (%edi),%eax
	movl -208(%ebp),%ecx
	movl 16(%eax),%eax
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	movl -212(%ebp),%ecx
	pushl %ecx
	pushl %edi
	call *%eax
	movl %eax,%edx
	movl -208(%ebp),%eax
	imull -4(%ebp),%eax
	addl -212(%ebp),%eax
	addl $16,%esp
	cmpl %edx,%eax
	je .L35
	pushl $2768
	call _m3_fault
	.align 16
.L26:
	movl (%edi),%eax
	movl 16(%eax),%edx
	pushl $1
	movl 8(%ebp),%ecx
	pushl %ecx
	movl -212(%ebp),%ecx
	pushl %ecx
	pushl %edi
	call *%edx
	movl %eax,%ebx
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTHeap+48,%eax
	call *%eax
	movl %eax,-220(%ebp)
	movl %ebx,%eax
	subl -212(%ebp),%eax
	addl $20,%esp
	cmpl %eax,-220(%ebp)
	je .L35
	pushl $10
	movl -220(%ebp),%ecx
	pushl %ecx
	movl MI_Fmt+52,%eax
	call *%eax
	pushl %eax
	pushl $MM_PklTipeMap+900
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_PklTipeMap+704
	movl %eax,%edx
	pushl %edx
	movl MI_RTHooks+76,%eax
	call *%eax
	movl %eax,%esi
	pushl $10
	subl -212(%ebp),%ebx
	pushl %ebx
	movl MI_Fmt+52,%eax
	call *%eax
	addl $32,%esp
	pushl %eax
	pushl %esi
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl $MM_PklTipeMap+752
	pushl %eax
	movl MI_RTHooks+76,%eax
	call *%eax
	movl -216(%ebp),%ecx
	pushl %ecx
	movl %eax,%esi
	pushl %esi
	movl MI_IO+44,%eax
	call *%eax
	movl (%edi),%eax
	movl 20(%eax),%esi
	pushl %edi
	call *%esi
	movl MM_PklTipeMap+940,%eax
	pushl %eax
	movl MI_RTHooks+80,%eax
	call *%eax
	movl %eax,%esi
	movl -212(%ebp),%ecx
	addl $32,%esp
	movl %ecx,1032(%esi)
	pushl %esi
	pushl $131071
	movl 12(%ebp),%ecx
	pushl %ecx
	movl MI_RTTypeMap+148,%eax
	call *%eax
	addl $12,%esp
	cmpl %ebx,-220(%ebp)
	je .L35
	pushl $3024
	call _m3_fault
	.align 16
.L35:
	movl -204(%ebp),%eax
	movl %eax,RTThread__handlerStack
	jmp .L40
	.align 16
.L24:
	movl -188(%ebp),%eax
	pushl %eax
	pushl $MM_PklTipeMap+952
	movl MI_RTHooks+76,%eax
	call *%eax
	pushl %eax
	pushl $MI_PklTipeMap+44
	movl MI_RTHooks+52,%eax
	call *%eax
.L40:
	movl -24(%ebp),%eax
	leal -236(%ebp),%esp
	movl %eax,RTThread__handlerStack
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.Lfe3:
	.size	 PklTipeMap__Write,.Lfe3-PklTipeMap__Write
	.align 16
	.type	 M_PklTipeMap_t2d8aa3b2_LINK,@function
M_PklTipeMap_t2d8aa3b2_LINK:
	pushl %ebp
	movl %esp,%ebp
	movl MM_PklTipeMap+940,%eax
	movl %ebp,%esp
	movl 52(%eax),%edx
	movl MM_PklTipeMap+216,%eax
	movl %eax,4(%edx)
	popl %ebp
	ret
.Lfe4:
	.size	 M_PklTipeMap_t2d8aa3b2_LINK,.Lfe4-M_PklTipeMap_t2d8aa3b2_LINK
	.align 16
	.type	 _m3_fault,@function
_m3_fault:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	pushl %eax
	pushl $MM_PklTipeMap
	movl MI_RTHooks+108,%eax
	call *%eax
	.align 16
.Lfe5:
	.size	 _m3_fault,.Lfe5-_m3_fault
.globl MM_PklTipeMap
.data
	.align 4
	.type	 MM_PklTipeMap,@object
	.size	 MM_PklTipeMap,1232
MM_PklTipeMap:
	.long MM_PklTipeMap+1056
	.long MM_PklTipeMap+44
	.long MM_PklTipeMap+940
	.zero	8
	.long MM_PklTipeMap+1016
	.zero	28
	.long 764060594
.byte 250
.byte 30
.byte 176
.byte 39
.byte 72
.byte 189
.byte 58
.byte 10
	.long 1
	.zero	4
	.long 4
	.long 4
	.zero	4
	.long 0
	.zero	12
	.long MM_PklTipeMap+1202
	.zero	4
	.long MM_PklTipeMap+1204
	.zero	4
	.long M_PklTipeMap_t2d8aa3b2_LINK
	.long 717154171
	.zero	16
	.long MM_PklTipeMap+1208
	.zero	4
	.long MM_PklTipeMap+232
	.long MM_PklTipeMap+248
	.long MM_PklTipeMap+272
	.long MM_PklTipeMap+292
	.long MM_PklTipeMap+312
	.long MM_PklTipeMap+336
	.long MM_PklTipeMap+360
	.long MM_PklTipeMap+380
	.long MM_PklTipeMap+400
	.long MM_PklTipeMap+420
	.long MM_PklTipeMap+440
	.long MM_PklTipeMap+460
	.long MM_PklTipeMap+480
	.long MM_PklTipeMap+500
	.long MM_PklTipeMap+520
	.long MM_PklTipeMap+544
	.long MM_PklTipeMap+568
	.long PklTipeMap__VisitRead
	.long PklTipeMap__Read
	.long PklTipeMap__Write
	.long 2
	.long MM_PklTipeMap+240
	.long 4
	.ascii	"Ref"
	.zero	1
	.long 2
	.long MM_PklTipeMap+256
	.long 12
	.ascii	"UntracedRef"
	.zero	1
	.long 2
	.long MM_PklTipeMap+280
	.long 5
	.ascii	"Proc"
	.zero	4
	.long 2
	.long MM_PklTipeMap+300
	.long 5
	.ascii	"Real"
	.zero	4
	.long 2
	.long MM_PklTipeMap+320
	.long 9
	.ascii	"Longreal"
	.zero	4
	.long 2
	.long MM_PklTipeMap+344
	.long 9
	.ascii	"Extended"
	.zero	4
	.long 2
	.long MM_PklTipeMap+368
	.long 6
	.ascii	"Int_1"
	.zero	3
	.long 2
	.long MM_PklTipeMap+388
	.long 6
	.ascii	"Int_2"
	.zero	3
	.long 2
	.long MM_PklTipeMap+408
	.long 6
	.ascii	"Int_4"
	.zero	3
	.long 2
	.long MM_PklTipeMap+428
	.long 6
	.ascii	"Int_8"
	.zero	3
	.long 2
	.long MM_PklTipeMap+448
	.long 7
	.ascii	"Word_1"
	.zero	2
	.long 2
	.long MM_PklTipeMap+468
	.long 7
	.ascii	"Word_2"
	.zero	2
	.long 2
	.long MM_PklTipeMap+488
	.long 7
	.ascii	"Word_4"
	.zero	2
	.long 2
	.long MM_PklTipeMap+508
	.long 7
	.ascii	"Word_8"
	.zero	2
	.long 2
	.long MM_PklTipeMap+528
	.long 10
	.ascii	"Int_Field"
	.zero	3
	.long 2
	.long MM_PklTipeMap+552
	.long 11
	.ascii	"Word_Field"
	.zero	2
	.long 2
	.long MM_PklTipeMap+576
	.long 4
	.ascii	"Set"
	.zero	1
	.long MI_PklTipeMap+44
	.long MI_Rd+44
	.long MI_Rd+64
	.long MI_Thread+184
	.zero	4
	.long MI_ConvertPacking+44
	.zero	4
	.long 2
	.long MM_PklTipeMap+620
	.long 37
	.ascii	"Incorrect number of shape parameters"
	.zero	4
	.long 2
	.long MM_PklTipeMap+672
	.long 26
	.ascii	"convertRead error! size ("
	.zero	3
	.long 2
	.long MM_PklTipeMap+712
	.long 33
	.ascii	") not equal to nextAddr - addr ("
	.zero	4
	.long 2
	.long MM_PklTipeMap+760
	.long 18
	.ascii	") in conversion:\n"
	.zero	3
	.long 2
	.long MM_PklTipeMap+792
	.long 31
	.ascii	"ConvertPacking.convert Error: "
	.zero	2
	.long 2
	.long MM_PklTipeMap+836
	.long 9
	.ascii	"offset: "
	.zero	4
	.long 2
	.long MM_PklTipeMap+860
	.long 4
	.ascii	" = "
	.zero	1
	.long 2
	.long MM_PklTipeMap+876
	.long 2
	.ascii	"\n"
	.zero	3
	.long MI_PklTipeMap+44
	.long MI_Thread+184
	.long MI_Wr+44
	.zero	4
	.long 2
	.long MM_PklTipeMap+908
	.long 30
	.ascii	"converter.write error! size ("
	.zero	7
	.long 764060594
	.long 2
	.long MM_PklTipeMap+960
	.long 29
	.ascii	"ConvertPacking.write Error: "
	.zero	4
	.ascii	"Write"
	.zero	1
	.ascii	"VisitRead"
	.zero	1
	.ascii	"Read"
	.zero	4
	.long PklTipeMap__Write
	.long MM_PklTipeMap+992
	.long MI_PklTipeMap+72
	.long PklTipeMap__VisitRead
	.long MM_PklTipeMap+998
	.zero	4
	.long PklTipeMap__Read
	.long MM_PklTipeMap+1008
	.long MI_PklTipeMap+68
	.zero	4
	.ascii	"/home/ftp/tmp/pm3/tmp/pm3-1.1.15/language/modula3/m3compiler"
	.ascii	"/m3bootstrap/LINUXLIBC6/pm3-LINUXLIBC6/boot-LINUXLIBC6/libm3"
	.ascii	"/src/pickle/PklTipeMap.m3"
	.zero	1
.byte 5
.byte 0
.byte 2
.byte 10
.byte 1
.byte 0
	.ascii	"PklTipeMap.ReadVisitor"
	.zero	2
	.ident	"GCC: (GNU) cygnus-2.7.2-960712"
